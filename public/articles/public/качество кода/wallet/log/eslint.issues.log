
 'ab' is already declared in the upper scope on line 198 column 15.
 ["access_token"] is better written in dot notation.
 ["account"] is better written in dot notation.
 ["accounts"] is better written in dot notation.
 'accounts[key].cards' is assigned to itself.
 ["address"] is better written in dot notation.
 'addr' is already declared in the upper scope on line 644 column 38.
 'AlertType' is already declared in the upper scope on line 4 column 13.
 'allCards' is already declared in the upper scope on line 195 column 11.
 'amount' is assigned a value but never used.
 '_appIdentity' is defined but never used.
 Argument 'accountId' should be typed.
 Argument 'addressbook' should be typed.
 Argument 'address' should be typed.
 Argument 'advertisement' should be typed.
 Argument 'amount' should be typed.
 Argument 'angle' should be typed.
 Argument 'apiContext' should be typed.
 Argument 'app' should be typed.
 Argument 'args' should be typed.
 Argument 'argsValues' should be typed.
 Argument 'a' should be typed.
 Argument 'boolean' should be typed.
 Argument 'b' should be typed.
 Argument 'cardId' should be typed.
 Argument 'card' should be typed.
 Argument 'cards' should be typed.
 Argument 'cb' should be typed.
 Argument 'chainId' should be typed.
 Argument 'chain' should be typed.
 Argument 'changes' should be typed.
 Argument 'client' should be typed.
 Argument 'clients' should be typed.
 Argument 'code' should be typed.
 Argument 'coin' should be typed.
 Argument 'color' should be typed.
 Argument 'colors' should be typed.
 Argument 'componentRef' should be typed with a non-any type.
 Argument 'components' should be typed.
 Argument 'config' should be typed.
 Argument 'contact' should be typed.
 Argument 'contactStr' should be typed.
 Argument 'context' should be typed with a non-any type.
 Argument 'countries' should be typed.
 Argument 'country' should be typed.
 Argument 'credential' should be typed with a non-any type.
 Argument 'credentials' should be typed.
 Argument 'c' should be typed.
 Argument 'ctx' should be typed.
 Argument 'currency' should be typed.
 Argument 'currentVersion' should be typed.
 Argument 'customTokenData' should be typed.
 Argument 'customTokenOpts' should be typed.
 Argument 'customToken' should be typed.
 Argument 'customTokens' should be typed.
 Argument 'data' should be typed.
 Argument 'data' should be typed with a non-any type.
 Argument 'dataSrc' should be typed.
 Argument 'date' should be typed.
 Argument 'decay' should be typed.
 Argument 'discount' should be typed.
 Argument 'dismissFlagVersion' should be typed.
 Argument 'dismissFunction' should be typed.
 Argument 'elementCount' should be typed.
 Argument 'el' should be typed.
 Argument 'email' should be typed.
 Argument 'enabled' should be typed.
 Argument 'endpoint' should be typed.
 Argument 'errorCallback' should be typed.
 Argument 'err' should be typed.
 Argument 'ethWallet' should be typed.
 Argument '$event' should be typed.
 Argument 'event' should be typed.
 Argument 'ew' should be typed.
 Argument 'exchangeRates' should be typed with a non-any type.
 Argument 'expression' should be typed.
 Argument 'feeLevel' should be typed.
 Argument 'fetti' should be typed.
 Argument 'fettis' should be typed.
 Argument 'fileEntry' should be typed.
 Argument 'gc' should be typed.
 Argument 'giftData' should be typed with a non-any type.
 Argument 'headers' should be typed.
 Argument 'hexString' should be typed.
 Argument 'history' should be typed.
 Argument 'h' should be typed.
 Argument 'id' should be typed.
 Argument 'img' should be typed.
 Argument 'indexes' should be typed.
 Argument 'index' should be typed.
 Argument 'input' should be typed.
 Argument 'instantiationInfo' should be typed.
 Argument 'invoiceId' should be typed.
 Argument 'invoices' should be typed.
 Argument 'isConfirm' should be typed.
 Argument 'isManuallyClaimed' should be typed.
 Argument 'item' should be typed.
 Argument 'json' should be typed.
 Argument 'key1' should be typed.
 Argument 'key2' should be typed.
 Argument 'keyId' should be typed.
 Argument 'key' should be typed.
 Argument 'keys' should be typed.
 Argument 'keyToAdd' should be typed.
 Argument 'lastCountryUsed' should be typed.
 Argument 'lastCurrencyUsed' should be typed.
 Argument 'lastDayRatesArray' should be typed.
 Argument 'level' should be typed.
 Argument 'limit' should be typed.
 Argument 'link' should be typed.
 Argument 'loading' should be typed.
 Argument 'memo' should be typed.
 Argument '_message' should be typed.
 Argument 'method' should be typed.
 Argument 'msg' should be typed.
 Argument 'multisigEthInfo' should be typed.
 Argument 'multisigWallet' should be typed.
 Argument 'name' should be typed.
 Argument 'network' should be typed.
 Argument 'newAltCurrency' should be typed.
 Argument 'newOpts' should be typed.
 Argument 'newSeries' should be typed.
 Argument 'newWallet' should be typed with a non-any type.
 Argument 'noOpenModal' should be typed.
 Argument 'obj' should be typed.
 Argument 'offer' should be typed.
 Argument 'oldGiftCards' should be typed.
 Argument 'oldProfile' should be typed.
 Argument '_optionalParams' should be typed.
 Argument 'optionalParams' should be typed.
 Argument 'option' should be typed.
 Argument 'options' should be typed with a non-any type.
 Argument '_opt' should be typed.
 Argument 'opt' should be typed.
 Argument '_opts' should be typed.
 Argument 'opts' should be typed.
 Argument 'otherParams' should be typed.
 Argument 'page' should be typed.
 Argument 'pairData' should be typed.
 Argument 'pairedWallet' should be typed.
 Argument 'params' should be typed.
 Argument 'params' should be typed with a non-any type.
 Argument '_pass' should be typed.
 Argument 'payload' should be typed.
 Argument 'paymentMethod' should be typed.
 Argument 'paymentRequestData' should be typed.
 Argument 'paymentRequests' should be typed.
 Argument 'paymentUrl' should be typed.
 Argument 'payProOptions' should be typed.
 Argument 'peerMeta' should be typed.
 Argument 'platform' should be typed.
 Argument '_pref' should be typed.
 Argument 'prefs' should be typed.
 Argument 'profileOld' should be typed.
 Argument 'profile' should be typed.
 Argument 'progressFn' should be typed.
 Argument 'progress' should be typed.
 Argument 'quoteData' should be typed.
 Argument 'random' should be typed.
 Argument 'recipient' should be typed.
 Argument 'reclaimSignatureSring' should be typed.
 Argument 'reclaimTxp' should be typed.
 Argument 'record' should be typed.
 Argument 'refresher' should be typed.
 Argument 'remoteData' should be typed.
 Argument 'requestId' should be typed.
 Argument 'request' should be typed.
 Argument 'result' should be typed.
 Argument 'root' should be typed.
 Argument 'runningBalance' should be typed.
 Argument 'savedVersion' should be typed.
 Argument 'search' should be typed.
 Argument 'seed' should be typed.
 Argument 'selectedCountry' should be typed.
 Argument 'selectedToken' should be typed.
 Argument 'sendMaxInfo' should be typed.
 Argument 'serverMessage' should be typed.
 Argument 'serviceInfo' should be typed.
 Argument 'serviceName' should be typed.
 Argument 'session' should be typed.
 Argument '_' should be typed.
 Argument 'show' should be typed.
 Argument '_signatures' should be typed.
 Argument 'signedTxp' should be typed.
 Argument 'spread' should be typed.
 Argument 'startVelocity' should be typed.
 Argument 'successCallback' should be typed.
 Argument 'swapData' should be typed.
 Argument 'swapTxData' should be typed.
 Argument 'term' should be typed.
 Argument 'text' should be typed.
 Argument 'time' should be typed.
 Argument 'timestamp' should be typed.
 Argument 'token' should be typed.
 Argument 'topic' should be typed.
 Argument 'txCreated' should be typed.
 Argument 'txId' should be typed.
 Argument 'txn' should be typed.
 Argument 'txns' should be typed.
 Argument '_txpid' should be typed.
 Argument 'txpsByWallet' should be typed.
 Argument '_txp' should be typed.
 Argument 'txp' should be typed.
 Argument 'tx' should be typed.
 Argument 'tx' should be typed with a non-any type.
 Argument 'txs' should be typed.
 Argument 'type' should be typed.
 Argument 'ua' should be typed.
 Argument 'uri' should be typed.
 Argument 'url' should be typed.
 Argument 'userInfo' should be typed with a non-any type.
 Argument 'userSettings' should be typed with a non-any type.
 Argument 'val' should be typed.
 Argument 'value' should be typed.
 Argument 'version' should be typed.
 Argument 'v' should be typed.
 Argument 'walletClient' should be typed.
 Argument 'walletConnectData' should be typed.
 Argument 'walletData' should be typed.
 Argument 'walletid' should be typed.
 Argument 'walletId' should be typed.
 Argument 'wallet' should be typed.
 Argument 'wallet' should be typed with a non-any type.
 Argument 'wallets' should be typed.
 Argument 'weight' should be typed.
 Argument 'words' should be typed.
 Argument '_x' should be typed.
 Argument 'x' should be typed.
 Array pattern argument should be typed.
 Array.prototype.map() expects a return value from arrow function.
 Arrow function has a complexity of 11. Maximum allowed is 10.
 Arrow function has a complexity of 12. Maximum allowed is 10.
 Arrow function has a complexity of 13. Maximum allowed is 10.
 Arrow function has a complexity of 15. Maximum allowed is 10.
 Arrow function has a complexity of 16. Maximum allowed is 10.
 Arrow function has a complexity of 23. Maximum allowed is 10.
 Arrow function has a complexity of 55. Maximum allowed is 10.
 Arrow function has too many lines (103). Maximum allowed is 50.
 Arrow function has too many lines (106). Maximum allowed is 50.
 Arrow function has too many lines (1104). Maximum allowed is 50.
 Arrow function has too many lines (110). Maximum allowed is 50.
 Arrow function has too many lines (1126). Maximum allowed is 50.
 Arrow function has too many lines (112). Maximum allowed is 50.
 Arrow function has too many lines (115). Maximum allowed is 50.
 Arrow function has too many lines (118). Maximum allowed is 50.
 Arrow function has too many lines (119). Maximum allowed is 50.
 Arrow function has too many lines (122). Maximum allowed is 50.
 Arrow function has too many lines (1269). Maximum allowed is 50.
 Arrow function has too many lines (126). Maximum allowed is 50.
 Arrow function has too many lines (137). Maximum allowed is 50.
 Arrow function has too many lines (138). Maximum allowed is 50.
 Arrow function has too many lines (139). Maximum allowed is 50.
 Arrow function has too many lines (140). Maximum allowed is 50.
 Arrow function has too many lines (142). Maximum allowed is 50.
 Arrow function has too many lines (148). Maximum allowed is 50.
 Arrow function has too many lines (154). Maximum allowed is 50.
 Arrow function has too many lines (161). Maximum allowed is 50.
 Arrow function has too many lines (168). Maximum allowed is 50.
 Arrow function has too many lines (170). Maximum allowed is 50.
 Arrow function has too many lines (180). Maximum allowed is 50.
 Arrow function has too many lines (181). Maximum allowed is 50.
 Arrow function has too many lines (187). Maximum allowed is 50.
 Arrow function has too many lines (191). Maximum allowed is 50.
 Arrow function has too many lines (192). Maximum allowed is 50.
 Arrow function has too many lines (193). Maximum allowed is 50.
 Arrow function has too many lines (195). Maximum allowed is 50.
 Arrow function has too many lines (198). Maximum allowed is 50.
 Arrow function has too many lines (203). Maximum allowed is 50.
 Arrow function has too many lines (213). Maximum allowed is 50.
 Arrow function has too many lines (224). Maximum allowed is 50.
 Arrow function has too many lines (242). Maximum allowed is 50.
 Arrow function has too many lines (253). Maximum allowed is 50.
 Arrow function has too many lines (261). Maximum allowed is 50.
 Arrow function has too many lines (265). Maximum allowed is 50.
 Arrow function has too many lines (298). Maximum allowed is 50.
 Arrow function has too many lines (329). Maximum allowed is 50.
 Arrow function has too many lines (339). Maximum allowed is 50.
 Arrow function has too many lines (376). Maximum allowed is 50.
 Arrow function has too many lines (462). Maximum allowed is 50.
 Arrow function has too many lines (51). Maximum allowed is 50.
 Arrow function has too many lines (52). Maximum allowed is 50.
 Arrow function has too many lines (53). Maximum allowed is 50.
 Arrow function has too many lines (54). Maximum allowed is 50.
 Arrow function has too many lines (55). Maximum allowed is 50.
 Arrow function has too many lines (56). Maximum allowed is 50.
 Arrow function has too many lines (57). Maximum allowed is 50.
 Arrow function has too many lines (58). Maximum allowed is 50.
 Arrow function has too many lines (59). Maximum allowed is 50.
 Arrow function has too many lines (60). Maximum allowed is 50.
 Arrow function has too many lines (61). Maximum allowed is 50.
 Arrow function has too many lines (62). Maximum allowed is 50.
 Arrow function has too many lines (63). Maximum allowed is 50.
 Arrow function has too many lines (64). Maximum allowed is 50.
 Arrow function has too many lines (65). Maximum allowed is 50.
 Arrow function has too many lines (665). Maximum allowed is 50.
 Arrow function has too many lines (66). Maximum allowed is 50.
 Arrow function has too many lines (67). Maximum allowed is 50.
 Arrow function has too many lines (68). Maximum allowed is 50.
 Arrow function has too many lines (69). Maximum allowed is 50.
 Arrow function has too many lines (70). Maximum allowed is 50.
 Arrow function has too many lines (71). Maximum allowed is 50.
 Arrow function has too many lines (72). Maximum allowed is 50.
 Arrow function has too many lines (73). Maximum allowed is 50.
 Arrow function has too many lines (75). Maximum allowed is 50.
 Arrow function has too many lines (786). Maximum allowed is 50.
 Arrow function has too many lines (78). Maximum allowed is 50.
 Arrow function has too many lines (79). Maximum allowed is 50.
 Arrow function has too many lines (80). Maximum allowed is 50.
 Arrow function has too many lines (810). Maximum allowed is 50.
 Arrow function has too many lines (82). Maximum allowed is 50.
 Arrow function has too many lines (83). Maximum allowed is 50.
 Arrow function has too many lines (84). Maximum allowed is 50.
 Arrow function has too many lines (85). Maximum allowed is 50.
 Arrow function has too many lines (861). Maximum allowed is 50.
 Arrow function has too many lines (86). Maximum allowed is 50.
 Arrow function has too many lines (88). Maximum allowed is 50.
 Arrow function has too many lines (90). Maximum allowed is 50.
 Arrow function has too many lines (91). Maximum allowed is 50.
 Arrow function has too many lines (92). Maximum allowed is 50.
 Arrow function has too many lines (96). Maximum allowed is 50.
 Arrow function has too many lines (98). Maximum allowed is 50.
 Arrow function has too many lines (99). Maximum allowed is 50.
 Arrow function has too many statements (115). Maximum allowed is 10.
 Arrow function has too many statements (11). Maximum allowed is 10.
 Arrow function has too many statements (12). Maximum allowed is 10.
 Arrow function has too many statements (13). Maximum allowed is 10.
 Arrow function has too many statements (14). Maximum allowed is 10.
 Arrow function has too many statements (15). Maximum allowed is 10.
 Arrow function has too many statements (16). Maximum allowed is 10.
 Arrow function has too many statements (17). Maximum allowed is 10.
 Arrow function has too many statements (18). Maximum allowed is 10.
 Arrow function has too many statements (19). Maximum allowed is 10.
 Arrow function has too many statements (20). Maximum allowed is 10.
 Arrow function has too many statements (21). Maximum allowed is 10.
 Arrow function has too many statements (22). Maximum allowed is 10.
 Arrow function has too many statements (24). Maximum allowed is 10.
 Arrow function has too many statements (26). Maximum allowed is 10.
 Arrow function has too many statements (27). Maximum allowed is 10.
 Arrow function has too many statements (38). Maximum allowed is 10.
 Arrow function has too many statements (42). Maximum allowed is 10.
 Arrow function has too many statements (43). Maximum allowed is 10.
 Arrow function has too many statements (81). Maximum allowed is 10.
 Arrow function used ambiguously with a conditional expression.
 Async arrow function has a complexity of 11. Maximum allowed is 10.
 Async arrow function has a complexity of 16. Maximum allowed is 10.
 Async arrow function has a complexity of 17. Maximum allowed is 10.
 Async arrow function has a complexity of 33. Maximum allowed is 10.
 Async arrow function has a complexity of 35. Maximum allowed is 10.
 Async arrow function has no 'await' expression.
 Async arrow function has too many lines (100). Maximum allowed is 50.
 Async arrow function has too many lines (123). Maximum allowed is 50.
 Async arrow function has too many lines (135). Maximum allowed is 50.
 Async arrow function has too many lines (167). Maximum allowed is 50.
 Async arrow function has too many lines (51). Maximum allowed is 50.
 Async arrow function has too many lines (59). Maximum allowed is 50.
 Async arrow function has too many lines (63). Maximum allowed is 50.
 Async arrow function has too many lines (66). Maximum allowed is 50.
 Async arrow function has too many lines (69). Maximum allowed is 50.
 Async arrow function has too many lines (76). Maximum allowed is 50.
 Async arrow function has too many lines (86). Maximum allowed is 50.
 Async arrow function has too many lines (91). Maximum allowed is 50.
 Async arrow function has too many statements (11). Maximum allowed is 10.
 Async arrow function has too many statements (12). Maximum allowed is 10.
 Async arrow function has too many statements (13). Maximum allowed is 10.
 Async arrow function has too many statements (14). Maximum allowed is 10.
 Async arrow function has too many statements (17). Maximum allowed is 10.
 Async arrow function has too many statements (20). Maximum allowed is 10.
 Async arrow function has too many statements (22). Maximum allowed is 10.
 Async arrow function has too many statements (23). Maximum allowed is 10.
 Async arrow function has too many statements (25). Maximum allowed is 10.
 Async arrow function has too many statements (27). Maximum allowed is 10.
 Async arrow function has too many statements (30). Maximum allowed is 10.
 Async arrow function has too many statements (39). Maximum allowed is 10.
 Async arrow function has too many statements (46). Maximum allowed is 10.
 Async arrow function has too many statements (49). Maximum allowed is 10.
 Async function 'fetchDirectIntegrations' has no 'await' expression.
 Async method 'addAndBindWalletClient' has too many statements (12). Maximum allowed is 10.
 Async method 'addCard' has no 'await' expression.
 Async method 'addCustomToken' has too many lines (63). Maximum allowed is 50.
 Async method 'addSwapTokensAdvertisement' has no 'await' expression.
 Async method 'apiCall' has too many statements (13). Maximum allowed is 10.
 Async method 'approveRequest' has a complexity of 14. Maximum allowed is 10.
 Async method 'approveRequest' has too many lines (80). Maximum allowed is 50.
 Async method 'approveRequest' has too many statements (16). Maximum allowed is 10.
 Async method 'approveSession' has no 'await' expression.
 Async method 'archive' has no 'await' expression.
 Async method 'bindWalletClient' has a complexity of 17. Maximum allowed is 10.
 Async method 'bindWalletClient' has too many lines (150). Maximum allowed is 50.
 Async method 'bindWalletClient' has too many statements (65). Maximum allowed is 10.
 Async method 'checkAppleWallet' has no 'await' expression.
 Async method 'checkCardEnabled' has too many statements (12). Maximum allowed is 10.
 Async method 'completeAddApplePaymentPass' has too many statements (14). Maximum allowed is 10.
 Async method 'countReleaseHeaderTaps' has no 'await' expression.
 Async method 'createTx' has a complexity of 20. Maximum allowed is 10.
 Async method 'createTx' has too many lines (112). Maximum allowed is 50.
 Async method 'createTx' has too many statements (44). Maximum allowed is 10.
 Async method 'createUnauthenticatedBitpayInvoice' has no 'await' expression.
 Async method 'fetchAllCards' has no 'await' expression.
 Async method 'fetchAvailableCards' has no 'await' expression.
 Async method 'fetchCachedApiCardConfig' has no 'await' expression.
 Async method 'fetchCardConfigMap' has no 'await' expression.
 Async method 'getAvailableCards' has no 'await' expression.
 Async method 'getData' has no 'await' expression.
 Async method 'getExchangesCurrencies' has a complexity of 16. Maximum allowed is 10.
 Async method 'getExchangesCurrencies' has too many lines (243). Maximum allowed is 50.
 Async method 'getExchangesCurrencies' has too many statements (50). Maximum allowed is 10.
 Async method 'getInvoiceData' has no 'await' expression.
 Async method 'getPayProDetails' has too many lines (53). Maximum allowed is 50.
 Async method 'getPayProDetails' has too many statements (16). Maximum allowed is 10.
 Async method 'getTotalAmount' has no 'await' expression.
 Async method 'goToCard' has no 'await' expression.
 Async method 'goToConfirm' has too many lines (56). Maximum allowed is 50.
 Async method 'goToConfirm' has too many statements (12). Maximum allowed is 10.
 Async method 'graphRequest' has too many statements (12). Maximum allowed is 10.
 Async method 'handleBitPayInvoice' has too many lines (59). Maximum allowed is 50.
 Async method 'handleBitPayInvoice' has too many statements (25). Maximum allowed is 10.
 Async method 'handlePayPro' has too many lines (56). Maximum allowed is 50.
 Async method 'handlePayPro' has too many statements (24). Maximum allowed is 10.
 Async method 'handleUnlock' has too many lines (57). Maximum allowed is 50.
 Async method 'handleUnlock' has too many statements (17). Maximum allowed is 10.
 Async method 'hideDiscountItem' has no 'await' expression.
 Async method 'initGiftCards' has no 'await' expression.
 Async method 'init' has too many statements (14). Maximum allowed is 10.
 Async method 'initializeCoinbase' has too many lines (68). Maximum allowed is 50.
 Async method 'initializeCoinbase' has too many statements (29). Maximum allowed is 10.
 Async method 'initialize' has too many statements (21). Maximum allowed is 10.
 Async method 'initWalletConnect' has too many statements (14). Maximum allowed is 10.
 Async method 'initWallet' has too many statements (12). Maximum allowed is 10.
 Async method 'instantiateMultisigContract' has no 'await' expression.
 Async method 'instantiateMultisigContract' has too many lines (61). Maximum allowed is 50.
 Async method 'ionViewDidLoad' has no 'await' expression.
 Async method 'ionViewWillEnter' has no 'await' expression.
 Async method 'ionViewWillEnter' has too many statements (11). Maximum allowed is 10.
 Async method 'ionViewWillEnter' has too many statements (22). Maximum allowed is 10.
 Async method 'killSession' has too many statements (19). Maximum allowed is 10.
 Async method 'ngAfterViewInit' has no 'await' expression.
 Async method 'ngOnInit' has a complexity of 14. Maximum allowed is 10.
 Async method 'ngOnInit' has no 'await' expression.
 Async method 'onAppLoad' has too many lines (200). Maximum allowed is 50.
 Async method 'onAppLoad' has too many statements (49). Maximum allowed is 10.
 Async method 'onCountryCodeClick' has no 'await' expression.
 Async method 'oneInchGetRates' has a complexity of 15. Maximum allowed is 10.
 Async method 'oneInchGetRates' has too many lines (90). Maximum allowed is 50.
 Async method 'oneInchGetRates' has too many statements (31). Maximum allowed is 10.
 Async method 'onWalletSelect' has no 'await' expression.
 Async method 'openFinishModal' has too many statements (11). Maximum allowed is 10.
 Async method 'openOnlyOneCountrySupportedSheet' has no 'await' expression.
 Async method 'orderBitPayCard' has no 'await' expression.
 Async method 'pairing' has too many lines (101). Maximum allowed is 50.
 Async method 'ping' has no 'await' expression.
 Async method 'prefillPhone' has no 'await' expression.
 Async method 'prepareDebitCards' has no 'await' expression.
 Async method 'prepareDebitCards' has too many lines (53). Maximum allowed is 50.
 Async method 'present' has no 'await' expression.
 Async method 'processInput' has a complexity of 17. Maximum allowed is 10.
 Async method 'processInput' has too many lines (66). Maximum allowed is 50.
 Async method 'processInput' has too many statements (25). Maximum allowed is 10.
 Async method 'processNewTxs' has too many statements (23). Maximum allowed is 10.
 Async method 'purchaseAttempt' has too many statements (18). Maximum allowed is 10.
 Async method 'refEthereumRequests' has a complexity of 16. Maximum allowed is 10.
 Async method 'retrieveWalletConnector' has no 'await' expression.
 Async method 'retrieveWalletConnector' has too many statements (12). Maximum allowed is 10.
 Async method 'runCardAudienceEvents' has too many statements (24). Maximum allowed is 10.
 Async method 'save' has no 'await' expression.
 Async method 'sendFeedback' has no 'await' expression.
 Async method 'sendFeedback' has too many lines (53). Maximum allowed is 50.
 Async method 'sendFeedback' has too many statements (13). Maximum allowed is 10.
 Async method 'setAddress' has no 'await' expression.
 Async method 'setConnectionData' has too many statements (13). Maximum allowed is 10.
 Async method 'setEthAddressNonce' has no 'await' expression.
 Async method 'setEthAddressNonce' has too many lines (77). Maximum allowed is 50.
 Async method 'setEthAddressNonce' has too many statements (15). Maximum allowed is 10.
 Async method 'setOptsAndJoin' has a complexity of 19. Maximum allowed is 10.
 Async method 'setOptsAndJoin' has too many lines (133). Maximum allowed is 50.
 Async method 'setOptsAndJoin' has too many statements (54). Maximum allowed is 10.
 Async method 'setTokenInfo' has too many statements (15). Maximum allowed is 10.
 Async method 'setWallet' has a complexity of 13. Maximum allowed is 10.
 Async method 'setWallet' has too many lines (65). Maximum allowed is 50.
 Async method 'setWallet' has too many statements (25). Maximum allowed is 10.
 Async method 'showHideDiscountItemSheet' has no 'await' expression.
 Async method 'showStatusModalAndPrepCard' has too many statements (13). Maximum allowed is 10.
 Async method 'startAddApplePaymentPass' has too many lines (67). Maximum allowed is 50.
 Async method 'startAddApplePaymentPass' has too many statements (23). Maximum allowed is 10.
 Async method 'subscribeToEvents' has no 'await' expression.
 Async method 'subscribeToEvents' has too many lines (70). Maximum allowed is 50.
 Async method 'toggleShow' has too many statements (13). Maximum allowed is 10.
 Async method 'updateEthWalletNonce' has no 'await' expression.
 Async method 'viewGiftCards' has no 'await' expression.
 Async method 'viewOnBlockchain' has too many statements (15). Maximum allowed is 10.
 Async method 'walletAudienceEvents' has a complexity of 11. Maximum allowed is 10.
 Async method 'walletAudienceEvents' has too many statements (25). Maximum allowed is 10.
 Avoid calling back inside of a promise.
 Avoid creating new promises.
 Avoid nesting promises.
 Avoid using promises inside of callbacks.
 Avoid wrapping return values in Promise.resolve
 ["backupText"] is better written in dot notation.
 Blocks are nested too deeply (5). Maximum allowed is 4.
 Blocks are nested too deeply (6). Maximum allowed is 4.
 ["body"] is better written in dot notation.
 ["bp_partner"] is better written in dot notation.
 ["bp_partner_version"] is better written in dot notation.
 'brandCards' is already declared in the upper scope on line 133 column 11.
 'btcFeeLevels' is already declared in the upper scope on line 137 column 15.
 ["btc"] is better written in dot notation.
 ["buycrypto"] is better written in dot notation.
 ["bwsURL"] is better written in dot notation.
 '_changes' is defined but never used.
 'ClaimCodeType' is already declared in the upper scope on line 3 column 13.
 ["code"] is better written in dot notation.
 ["coinbase"] is better written in dot notation.
 'Coin' is already declared in the upper scope on line 11 column 13.
 'coin' is already declared in the upper scope on line 851 column 31.
 ["coin"] is better written in dot notation.
 'color' is already declared in the upper scope on line 18 column 29.
 Combine this with the previous 'var' statement.
 Component class names should end with one of these suffixes
 ["ConfirmPage"] is better written in dot notation.
 Constructor has a complexity of 12. Maximum allowed is 10.
 Constructor has a complexity of 14. Maximum allowed is 10.
 Constructor has too many lines (119). Maximum allowed is 50.
 Constructor has too many lines (121). Maximum allowed is 50.
 Constructor has too many lines (51). Maximum allowed is 50.
 Constructor has too many lines (52). Maximum allowed is 50.
 Constructor has too many lines (54). Maximum allowed is 50.
 Constructor has too many lines (58). Maximum allowed is 50.
 Constructor has too many lines (62). Maximum allowed is 50.
 Constructor has too many lines (63). Maximum allowed is 50.
 Constructor has too many lines (65). Maximum allowed is 50.
 Constructor has too many lines (68). Maximum allowed is 50.
 Constructor has too many lines (71). Maximum allowed is 50.
 Constructor has too many lines (84). Maximum allowed is 50.
 Constructor has too many lines (88). Maximum allowed is 50.
 Constructor has too many lines (91). Maximum allowed is 50.
 Constructor has too many lines (93). Maximum allowed is 50.
 Constructor has too many parameters (10). Maximum allowed is 5.
 Constructor has too many parameters (11). Maximum allowed is 5.
 Constructor has too many parameters (12). Maximum allowed is 5.
 Constructor has too many parameters (13). Maximum allowed is 5.
 Constructor has too many parameters (14). Maximum allowed is 5.
 Constructor has too many parameters (15). Maximum allowed is 5.
 Constructor has too many parameters (16). Maximum allowed is 5.
 Constructor has too many parameters (17). Maximum allowed is 5.
 Constructor has too many parameters (18). Maximum allowed is 5.
 Constructor has too many parameters (19). Maximum allowed is 5.
 Constructor has too many parameters (20). Maximum allowed is 5.
 Constructor has too many parameters (21). Maximum allowed is 5.
 Constructor has too many parameters (22). Maximum allowed is 5.
 Constructor has too many parameters (26). Maximum allowed is 5.
 Constructor has too many parameters (28). Maximum allowed is 5.
 Constructor has too many parameters (32). Maximum allowed is 5.
 Constructor has too many parameters (37). Maximum allowed is 5.
 Constructor has too many parameters (38). Maximum allowed is 5.
 Constructor has too many parameters (41). Maximum allowed is 5.
 Constructor has too many parameters (6). Maximum allowed is 5.
 Constructor has too many parameters (7). Maximum allowed is 5.
 Constructor has too many parameters (8). Maximum allowed is 5.
 Constructor has too many parameters (9). Maximum allowed is 5.
 Constructor has too many statements (11). Maximum allowed is 10.
 Constructor has too many statements (12). Maximum allowed is 10.
 Constructor has too many statements (13). Maximum allowed is 10.
 Constructor has too many statements (14). Maximum allowed is 10.
 Constructor has too many statements (15). Maximum allowed is 10.
 Constructor has too many statements (16). Maximum allowed is 10.
 Constructor has too many statements (17). Maximum allowed is 10.
 Constructor has too many statements (18). Maximum allowed is 10.
 Constructor has too many statements (19). Maximum allowed is 10.
 Constructor has too many statements (20). Maximum allowed is 10.
 Constructor has too many statements (21). Maximum allowed is 10.
 Constructor has too many statements (23). Maximum allowed is 10.
 Constructor has too many statements (27). Maximum allowed is 10.
 Constructor has too many statements (37). Maximum allowed is 10.
 Constructor has too many statements (38). Maximum allowed is 10.
 ["created"] is better written in dot notation.
 ["dark"] is better written in dot notation.
 ["dashboardRedirect"] is better written in dot notation.
 'data' is already declared in the upper scope on line 106 column 38.
 'data' is already declared in the upper scope on line 1124 column 11.
 'data' is already declared in the upper scope on line 120 column 50.
 'data' is already declared in the upper scope on line 130 column 31.
 'data' is already declared in the upper scope on line 130 column 39.
 'data' is already declared in the upper scope on line 138 column 19.
 'data' is already declared in the upper scope on line 16 column 13.
 'data' is already declared in the upper scope on line 178 column 38.
 'data' is already declared in the upper scope on line 287 column 11.
 'data' is already declared in the upper scope on line 288 column 13.
 'data' is already declared in the upper scope on line 296 column 23.
 'data' is already declared in the upper scope on line 307 column 13.
 'data' is already declared in the upper scope on line 321 column 11.
 'data' is already declared in the upper scope on line 347 column 13.
 'data' is already declared in the upper scope on line 443 column 15.
 'data' is already declared in the upper scope on line 519 column 17.
 'data' is already declared in the upper scope on line 635 column 11.
 'data' is already declared in the upper scope on line 66 column 19.
 'data' is already declared in the upper scope on line 740 column 11.
 'data' is already declared in the upper scope on line 75 column 24.
 'data' is already declared in the upper scope on line 83 column 33.
 'data' is already declared in the upper scope on line 911 column 11.
 'data' is already declared in the upper scope on line 959 column 11.
 'data' is already declared in the upper scope on line 95 column 15.
 ["data"] is better written in dot notation.
 '_data' is defined but never used.
 'DateRanges' is already declared in the upper scope on line 16 column 13.
 ["debitcard"] is better written in dot notation.
 Default clause should be the last clause.
 Dependency cycle detected.
 ["derivationPath"] is better written in dot notation.
 'desc' is already declared in the upper scope on line 43 column 11.
 Directive class names should end with one of these suffixes
 Do not access Object.prototype method 'hasOwnProperty' from target object.
 Do not use 'new' for side effects.
 Do not use "@ts-ignore" because it alters compilation errors.
 Don't use `{}` as a type. `{}` actually means "any non-nullish value".
 Each then() should return a value or throw
 'e' is already declared in the upper scope on line 177 column 31.
 'e' is already declared in the upper scope on line 49 column 14.
 'e' is already declared in the upper scope on line 53 column 16.
 'e' is already declared in the upper scope on line 65 column 18.
 'e' is already declared in the upper scope on line 77 column 20.
 'e' is already declared in the upper scope on line 81 column 22.
 ["email"] is better written in dot notation.
 Empty block statement.
 '_entropySource' is defined but never used.
 'env' is already declared in the upper scope on line 4 column 8.
 'env' is already declared in the upper scope on line 7 column 8.
 'err' is already declared in the upper scope on line 1396 column 46.
 'err' is already declared in the upper scope on line 1589 column 10.
 'err' is already declared in the upper scope on line 183 column 10.
 'err' is already declared in the upper scope on line 2006 column 23.
 'err' is already declared in the upper scope on line 205 column 31.
 'err' is already declared in the upper scope on line 212 column 9.
 'err' is already declared in the upper scope on line 259 column 14.
 'err' is already declared in the upper scope on line 274 column 22.
 'err' is already declared in the upper scope on line 31 column 42.
 'err' is already declared in the upper scope on line 339 column 57.
 'err' is already declared in the upper scope on line 43 column 44.
 'err' is already declared in the upper scope on line 59 column 52.
 'err' is already declared in the upper scope on line 644 column 33.
 'err' is already declared in the upper scope on line 65 column 10.
 'err' is already declared in the upper scope on line 696 column 24.
 '_err' is defined but never used.
 'ethAvgTime' is already declared in the upper scope on line 18 column 6.
 ["eth"] is better written in dot notation.
 eval can be harmful.
 ["exchangecrypto"] is better written in dot notation.
 Expected ab to have a type annotation.
 Expected accepted to have a type annotation.
 Expected accessKey to have a type annotation.
 Expected access to have a type annotation.
 Expected accessToken to have a type annotation.
 Expected accountCoin to have a type annotation.
 Expected accountId to have a type annotation.
 Expected account_name to have a type annotation.
 Expected accountsArray to have a type annotation.
 Expected accounts to have a type annotation.
 Expected account to have a type annotation.
 Expected acctData to have a type annotation.
 Expected acObject to have a type annotation.
 Expected actionDescriptions to have a type annotation.
 Expected actionList to have a type annotation.
 Expected ACTION_SHEET_COMPONENTS to have a type annotation.
 Expected actionSheetSpy to have a type annotation.
 Expected actionSheet to have a type annotation.
 Expected action to have a type annotation.
 Expected activationFees to have a type annotation.
 Expected activationFee to have a type annotation.
 Expected activeAd to have a type annotation.
 Expected activeBrands to have a type annotation.
 Expected activeCardNames to have a type annotation.
 Expected activeCardsGroupedByBrand to have a type annotation.
 Expected activeCards to have a type annotation.
 Expected activeElement to have a type annotation.
 Expected activePage to have a type annotation.
 Expected activeSlideIndex to have a type annotation.
 Expected activityList to have a type annotation.
 Expected ac to have a type annotation.
 Expected additionalBytesPerLevel to have a type annotation.
 Expected additionalExpectedStatusInfo to have a type annotation.
 Expected _addrData to have a type annotation.
 Expected addrData to have a type annotation.
 Expected addressbook to have a type annotation.
 Expected addressBook to have a type annotation.
 Expected AddressCash to have a type annotation.
 Expected AddressDoge to have a type annotation.
 Expected addresses to have a type annotation.
 Expected addressInfo to have a type annotation.
 Expected AddressLtc to have a type annotation.
 Expected addressObj to have a type annotation.
 Expected addressRequested to have a type annotation.
 Expected address to have a type annotation.
 Expected Address to have a type annotation.
 Expected addressToShow to have a type annotation.
 Expected addressTo to have a type annotation.
 Expected _addr to have a type annotation.
 Expected addr to have a type annotation.
 Expected adMessage to have a type annotation.
 Expected ads to have a type annotation.
 Expected ad to have a type annotation.
 Expected advertisementName to have a type annotation.
 Expected advertisement to have a type annotation.
 Expected adv to have a type annotation.
 Expected { after 'else'.
 Expected { after 'if' condition.
 Expected agent to have a type annotation.
 Expected alert to have a type annotation.
 Expected alias to have a type annotation.
 Expected allAccounts to have a type annotation.
 Expected allAddresses to have a type annotation.
 Expected allCards to have a type annotation.
 Expected allCountries to have a type annotation.
 Expected allCurations to have a type annotation.
 Expected allFees to have a type annotation.
 Expected allGiftCards to have a type annotation.
 Expected allMerchants to have a type annotation.
 Expected allowancesData to have a type annotation.
 Expected allowedCountries to have a type annotation.
 Expected AllowedCountries to have a type annotation.
 Expected allowedPhoneCountries to have a type annotation.
 Expected allSum to have a type annotation.
 Expected all to have a type annotation.
 Expected allTokens to have a type annotation.
 Expected allUrls to have a type annotation.
 Expected allWallets to have a type annotation.
 Expected alreadyExist to have a type annotation.
 Expected alreadyVisible to have a type annotation.
 Expected altAmountStr to have a type annotation.
 Expected altCurrencyList to have a type annotation.
 Expected altCurrency to have a type annotation.
 Expected alternativeConversionRate to have a type annotation.
 Expected alternativeCurrency to have a type annotation.
 Expected alternativeIsoCode to have a type annotation.
 Expected alternatives to have a type annotation.
 Expected amount1 to have a type annotation.
 Expected amount2 to have a type annotation.
 Expected amountAboveMaxSizeStr to have a type annotation.
 Expected amountBelowFeeStr to have a type annotation.
 Expected amountFromRedirParams to have a type annotation.
 Expected amountParam to have a type annotation.
 Expected amountSat to have a type annotation.
 Expected amountStr to have a type annotation.
 Expected _amount to have a type annotation.
 Expected amount to have a type annotation.
 Expected amount_ to have a type annotation.
 Expected amountUnitStr to have a type annotation.
 Expected amountUnit to have a type annotation.
 Expected amountUsd to have a type annotation.
 Expected amTime to have a type annotation.
 Expected analyticsWhitelist to have a type annotation.
 Expected an assignment or function call and instead saw an expression.
 Expected '===' and instead saw '=='.
 Expected '!==' and instead saw '!='.
 Expected an error object to be thrown.
 Expected angle to have a type annotation.
 Expected angularProviders to have a type annotation.
 Expected animationStartPos to have a type annotation.
 Expected annotations to have a type annotation.
 Expected any to have a type annotation.
 Expected apiCardConfigCache to have a type annotation.
 Expected apiCardConfigMap to have a type annotation.
 Expected apiCardConfig to have a type annotation.
 Expected apiContext to have a type annotation.
 Expected api_host to have a type annotation.
 Expected _appIdentity to have a type annotation.
 Expected appIdentity to have a type annotation.
 Expected appName to have a type annotation.
 Expected appProvider to have a type annotation.
 Expected appSheet to have a type annotation.
 Expected app to have a type annotation.
 Expected appVersion to have a type annotation.
 Expected archivedCard to have a type annotation.
 Expected archivePromise to have a type annotation.
 Expected archiveSheet to have a type annotation.
 Expected args to have a type annotation.
 Expected argsValues to have a type annotation.
 Expected arrayData to have a type annotation.
 Expected array to have a type annotation.
 Expected aSortValue to have a type annotation.
 Expected aTag to have a type annotation.
 Expected atLeastOneLivenetWallet to have a type annotation.
 Expected a to have a type annotation.
 Expected attachment to have a type annotation.
 Expected attempts to have a type annotation.
 Expected a type annotation.
 Expected authChangeEvents to have a type annotation.
 Expected authChangeEvent to have a type annotation.
 Expected authRequiredInfoSheet to have a type annotation.
 Expected availableAlternative to have a type annotation.
 Expected availableBalanceAlternative to have a type annotation.
 Expected availableBalanceFiat to have a type annotation.
 Expected availableBalanceStr to have a type annotation.
 Expected availableCardMap to have a type annotation.
 Expected availableCardNames to have a type annotation.
 Expected availableCards to have a type annotation.
 Expected availableChains to have a type annotation.
 Expected availableCoins to have a type annotation.
 Expected _availableCoin to have a type annotation.
 Expected availableCoin to have a type annotation.
 Expected availableCustomTokens to have a type annotation.
 Expected availableNavigationTypes to have a type annotation.
 Expected availableOptions to have a type annotation.
 Expected availablePendingFiat to have a type annotation.
 Expected availableThemes to have a type annotation.
 Expected available to have a type annotation.
 Expected availableUnits to have a type annotation.
 Expected availableWallets to have a type annotation.
 Expected availableWallet to have a type annotation.
 Expected averageTxSize to have a type annotation.
 Expected avgConfirmationTime to have a type annotation.
 Expected backText to have a type annotation.
 Expected back to have a type annotation.
 Expected backupFile to have a type annotation.
 Expected backupInfo to have a type annotation.
 Expected backupText to have a type annotation.
 Expected backup to have a type annotation.
 Expected backupWalletPlainText to have a type annotation.
 Expected badgeStatus to have a type annotation.
 Expected balanceByAddress to have a type annotation.
 Expected balanceCache to have a type annotation.
 Expected balanceLastDay to have a type annotation.
 Expected balances to have a type annotation.
 Expected balance to have a type annotation.
 Expected balanceToSweep to have a type annotation.
 Expected bannedUntil to have a type annotation.
 Expected barcodeHeight to have a type annotation.
 Expected BARCODE_HEIGHT to have a type annotation.
 Expected base64Image to have a type annotation.
 Expected baseCard to have a type annotation.
 Expected baseConfig to have a type annotation.
 Expected baseCurations to have a type annotation.
 Expected baseImports to have a type annotation.
 Expected baseMerkleInputValidationSize to have a type annotation.
 Expected baseProviders to have a type annotation.
 Expected baseRedeemScriptSize to have a type annotation.
 Expected baseSize to have a type annotation.
 Expected basicInfo to have a type annotation.
 Expected bchResponse to have a type annotation.
 Expected biggestUtxo to have a type annotation.
 Expected bitcoreCash to have a type annotation.
 Expected bitcoreDoge to have a type annotation.
 Expected bitcoreLibCash to have a type annotation.
 Expected bitcoreLtc to have a type annotation.
 Expected bitcoreLTC to have a type annotation.
 Expected bitcore to have a type annotation.
 Expected bitpayCardItems to have a type annotation.
 Expected bitpayCard to have a type annotation.
 Expected bitpayCardTransactionHistoryCompleted to have a type annotation.
 Expected bitpayCardTransactionHistoryConfirming to have a type annotation.
 Expected bitpayCardTransactionHistoryPreAuth to have a type annotation.
 Expected bitpayIdSettings to have a type annotation.
 Expected blank line before this statement.
 Expected blobMock to have a type annotation.
 Expected blob to have a type annotation.
 Expected blockchainNetworkTx to have a type annotation.
 Expected blockExplorerUrlsTestnet to have a type annotation.
 Expected blockExplorerUrls to have a type annotation.
 Expected blockexplorerUrl to have a type annotation.
 Expected block to have a type annotation.
 Expected body to have a type annotation.
 Expected boolean to have a type annotation.
 Expected boundClient to have a type annotation.
 Expected boundWalletClients to have a type annotation.
 Expected bpTranCodesTemp to have a type annotation.
 Expected bpTranCodes to have a type annotation.
 Expected brandCards to have a type annotation.
 Expected brandImageDirectory to have a type annotation.
 Expected brandName to have a type annotation.
 Expected brands to have a type annotation.
 Expected brand to have a type annotation.
 Expected brazeUserSet to have a type annotation.
 Expected broadcastedOn to have a type annotation.
 Expected broadcastedTxp to have a type annotation.
 Expected browserLang to have a type annotation.
 Expected browsers to have a type annotation.
 Expected BrowserWindow to have a type annotation.
 Expected bSortValue to have a type annotation.
 Expected btcFeeLevels to have a type annotation.
 Expected btcParsedAmount to have a type annotation.
 Expected btcResponse to have a type annotation.
 Expected b to have a type annotation.
 Expected btx to have a type annotation.
 Expected busdResponse to have a type annotation.
 Expected buttonConstraints to have a type annotation.
 Expected button to have a type annotation.
 Expected bwc to have a type annotation.
 Expected bwcUtils to have a type annotation.
 Expected bwsFor to have a type annotation.
 Expected bwsReq to have a type annotation.
 Expected bws to have a type annotation.
 Expected bws_url to have a type annotation.
 Expected byAddress to have a type annotation.
 Expected cacheBalance to have a type annotation.
 Expected cachedCardNames to have a type annotation.
 Expected cachedConfig to have a type annotation.
 Expected cacheStatus to have a type annotation.
 Expected cache to have a type annotation.
 Expected calldata to have a type annotation.
 Expected cancelClicked to have a type annotation.
 Expected canceledErrors to have a type annotation.
 Expected cancelText to have a type annotation.
 Expected cancel to have a type annotation.
 Expected canChooseFeeLevel to have a type annotation.
 Expected canCreateit to have a type annotation.
 Expected canSign to have a type annotation.
 Expected capabilities to have a type annotation.
 Expected cardChanged to have a type annotation.
 Expected cardConfigMap to have a type annotation.
 Expected cardConfigs to have a type annotation.
 Expected cardConfig to have a type annotation.
 Expected cardExperimentEnabled to have a type annotation.
 Expected cardHasBalance to have a type annotation.
 Expected CARD_IAB_CONFIG to have a type annotation.
 Expected cardId to have a type annotation.
 Expected cardImagePath to have a type annotation.
 Expected cardMap to have a type annotation.
 Expected cardNames to have a type annotation.
 Expected cardName to have a type annotation.
 Expected cardNotificationBadgeText to have a type annotation.
 Expected cardOrder to have a type annotation.
 Expected cardPromises to have a type annotation.
 Expected cardServices to have a type annotation.
 Expected cardsGroup to have a type annotation.
 Expected cardsNeedingUpdate to have a type annotation.
 Expected cardsRoot to have a type annotation.
 Expected cards to have a type annotation.
 Expected _card to have a type annotation.
 Expected card to have a type annotation.
 Expected cardTopupAmountEventName to have a type annotation.
 Expected cardTopupEventInfo to have a type annotation.
 Expected cardTopUpEventInfo to have a type annotation.
 Expected cardTopupFinishEventName to have a type annotation.
 Expected cashAddr to have a type annotation.
 Expected cashAdrr to have a type annotation.
 Expected catch() or return
 Expected categories to have a type annotation.
 Expected categoryOrCuration to have a type annotation.
 Expected category to have a type annotation.
 Expected _cb to have a type annotation.
 Expected cb to have a type annotation.
 Expected cc to have a type annotation.
 Expected certOnlyTapped to have a type annotation.
 Expected _chainCoin to have a type annotation.
 Expected chainData to have a type annotation.
 Expected chainId to have a type annotation.
 Expected chain to have a type annotation.
 Expected changellyData to have a type annotation.
 Expected changes to have a type annotation.
 Expected characters to have a type annotation.
 Expected chartOptions to have a type annotation.
 Expected _chart to have a type annotation.
 Expected chart to have a type annotation.
 Expected checkAndUpdateAdddress to have a type annotation.
 Expected checked to have a type annotation.
 Expected checkedUA to have a type annotation.
 Expected checkIfContact to have a type annotation.
 Expected checkoutPage to have a type annotation.
 Expected chooseFeeLevelModal to have a type annotation.
 Expected ch to have a type annotation.
 Expected ClaimCodeType to have a type annotation.
 Expected clearClipboardSpy to have a type annotation.
 Expected clearSpy to have a type annotation.
 Expected clear to have a type annotation.
 Expected clickPosition to have a type annotation.
 Expected clients to have a type annotation.
 Expected client to have a type annotation.
 Expected Client to have a type annotation.
 Expected codes to have a type annotation.
 Expected code to have a type annotation.
 Expected coinbaseAccounts to have a type annotation.
 Expected coinbaseAccount to have a type annotation.
 Expected coinbaseData to have a type annotation.
 Expected coinbaseExchange to have a type annotation.
 Expected coinbase to have a type annotation.
 Expected coinCode to have a type annotation.
 Expected coinColor to have a type annotation.
 Expected coinName to have a type annotation.
 Expected coinRates to have a type annotation.
 Expected coinsSelected to have a type annotation.
 Expected coins to have a type annotation.
 Expected coinsToRemove to have a type annotation.
 Expected _coin to have a type annotation.
 Expected coin to have a type annotation.
 Expected COIN to have a type annotation.
 Expected collapsedGroups to have a type annotation.
 Expected collection to have a type annotation.
 Expected colors to have a type annotation.
 Expected color to have a type annotation.
 Expected _comment to have a type annotation.
 Expected comment to have a type annotation.
 Expected commonCountriesList to have a type annotation.
 Expected comparison to have a type annotation.
 Expected compiled to have a type annotation.
 Expected completeAlternativeList to have a type annotation.
 Expected completeBalance to have a type annotation.
 Expected completeCountryList to have a type annotation.
 Expected completeHistory to have a type annotation.
 Expected completeTxHistory to have a type annotation.
 Expected componentRef to have a type annotation.
 Expected components to have a type annotation.
 Expected COMPONENTS to have a type annotation.
 Expected component to have a type annotation.
 Expected configGet to have a type annotation.
 Expected configMap to have a type annotation.
 Expected configProviderSetSpy to have a type annotation.
 Expected config to have a type annotation.
 Expected configWallet to have a type annotation.
 Expected confirmedTxs to have a type annotation.
 Expected confirmPassword to have a type annotation.
 Expected confirm to have a type annotation.
 Expected connectionError to have a type annotation.
 Expected contactsList to have a type annotation.
 Expected contacts to have a type annotation.
 Expected contactStr to have a type annotation.
 Expected contact to have a type annotation.
 Expected contentMock to have a type annotation.
 Expected context to have a type annotation.
 Expected contractInfo to have a type annotation.
 Expected contract to have a type annotation.
 Expected copayerId to have a type annotation.
 Expected copayerModal to have a type annotation.
 Expected COPAYER_PAIR_LIMITS to have a type annotation.
 Expected copayerRegistered to have a type annotation.
 Expected _copayers to have a type annotation.
 Expected copayers to have a type annotation.
 Expected copayer to have a type annotation.
 Expected copyMessage to have a type annotation.
 Expected copySpy to have a type annotation.
 Expected core to have a type annotation.
 Expected countDown to have a type annotation.
 Expected countries to have a type annotation.
 Expected countriesWithMultiplePhoneCodes to have a type annotation.
 Expected countriesWithSinglePhoneCode to have a type annotation.
 Expected countryCodeObj to have a type annotation.
 Expected countryCodes to have a type annotation.
 Expected countryCode to have a type annotation.
 Expected countryList to have a type annotation.
 Expected countryListWithCodes to have a type annotation.
 Expected country to have a type annotation.
 Expected count to have a type annotation.
 Expected create2ndWallets to have a type annotation.
 Expected createdAt to have a type annotation.
 Expected createdOn to have a type annotation.
 Expected createdTxp to have a type annotation.
 Expected createdTx to have a type annotation.
 Expected creatorId to have a type annotation.
 Expected _creator to have a type annotation.
 Expected credentials to have a type annotation.
 Expected credential to have a type annotation.
 Expected cssClasses to have a type annotation.
 Expected cssClass to have a type annotation.
 Expected cssProperty to have a type annotation.
 Expected csvContent to have a type annotation.
 Expected csvFilename to have a type annotation.
 Expected csv to have a type annotation.
 Expected ctc to have a type annotation.
 Expected c to have a type annotation.
 Expected ctxp to have a type annotation.
 Expected ctx to have a type annotation.
 Expected curated to have a type annotation.
 Expected curations to have a type annotation.
 Expected curation to have a type annotation.
 Expected currencies to have a type annotation.
 Expected currencyIsoCode to have a type annotation.
 Expected currencySymbols to have a type annotation.
 Expected currencySymbol to have a type annotation.
 Expected _currency to have a type annotation.
 Expected currency to have a type annotation.
 Expected currentAppVersion to have a type annotation.
 Expected currentCards to have a type annotation.
 Expected currentCard to have a type annotation.
 Expected currentCurrency to have a type annotation.
 Expected currentEmail to have a type annotation.
 Expected currentGiftCards to have a type annotation.
 Expected currentIndex to have a type annotation.
 Expected currentLanguage to have a type annotation.
 Expected currentTask to have a type annotation.
 Expected currentTime to have a type annotation.
 Expected current to have a type annotation.
 Expected currentValue to have a type annotation.
 Expected currentVersion to have a type annotation.
 Expected currentView to have a type annotation.
 Expected currentVs to have a type annotation.
 Expected curTx to have a type annotation.
 Expected customData to have a type annotation.
 Expected customERC20CoinsData to have a type annotation.
 Expected customERC20Opts to have a type annotation.
 Expected customPrecision to have a type annotation.
 Expected customRate to have a type annotation.
 Expected customSentence to have a type annotation.
 Expected customTokenData to have a type annotation.
 Expected customTokenOpts to have a type annotation.
 Expected customTokens to have a type annotation.
 Expected customToken to have a type annotation.
 Expected customWordList to have a type annotation.
 Expected customWords to have a type annotation.
 Expected dataArray to have a type annotation.
 Expected dataCoin to have a type annotation.
 Expected dataError to have a type annotation.
 Expected dataFromClipboard to have a type annotation.
 Expected dataLabels to have a type annotation.
 Expected dataMenu to have a type annotation.
 Expected dataSeries to have a type annotation.
 Expected dataSrc to have a type annotation.
 Expected _data to have a type annotation.
 Expected data to have a type annotation.
 Expected dataToSign to have a type annotation.
 Expected dataType to have a type annotation.
 Expected date1 to have a type annotation.
 Expected date2 to have a type annotation.
 Expected dateObj to have a type annotation.
 Expected dateRange to have a type annotation.
 Expected dateTime to have a type annotation.
 Expected date to have a type annotation.
 Expected datum to have a type annotation.
 Expected day to have a type annotation.
 Expected debounceSetCoinbase to have a type annotation.
 Expected debounceSetData to have a type annotation.
 Expected debounceSetWallets to have a type annotation.
 Expected debounceUpdateAll to have a type annotation.
 Expected debugSpy to have a type annotation.
 Expected decay to have a type annotation.
 Expected decodedData to have a type annotation.
 Expected deepLink to have a type annotation.
 Expected defaultCoin to have a type annotation.
 Expected defaultColors to have a type annotation.
 Expected defaultOpts to have a type annotation.
 Expected defaultPayPro to have a type annotation.
 Expected DEFAULT_RBF_SEQNUMBER to have a type annotation.
 Expected defaults to have a type annotation.
 Expected defaultText to have a type annotation.
 Expected defaultWeight to have a type annotation.
 Expected depositSat to have a type annotation.
 Expected deregisterBackButtonAction to have a type annotation.
 Expected derivationPath to have a type annotation.
 Expected derivationStrategy to have a type annotation.
 Expected description to have a type annotation.
 Expected desc to have a type annotation.
 Expected destAmount to have a type annotation.
 Expected destCurrency to have a type annotation.
 Expected destinationTag to have a type annotation.
 Expected destination to have a type annotation.
 Expected destroySpy to have a type annotation.
 Expected dest to have a type annotation.
 Expected details to have a type annotation.
 Expected deviceInfo to have a type annotation.
 Expected deviceName to have a type annotation.
 Expected deviceUUID to have a type annotation.
 Expected difference to have a type annotation.
 Expected diff to have a type annotation.
 Expected directIntegrationMerchants to have a type annotation.
 Expected directIntegrations to have a type annotation.
 Expected directory to have a type annotation.
 Expected dir to have a type annotation.
 Expected disableAddCard to have a type annotation.
 Expected disableLightSpy to have a type annotation.
 Expected disableLoader to have a type annotation.
 Expected disclaimerAccepted to have a type annotation.
 Expected disclaimerAgreed to have a type annotation.
 Expected disclaimerFlag to have a type annotation.
 Expected discountedCard to have a type annotation.
 Expected discounts to have a type annotation.
 Expected discountText to have a type annotation.
 Expected discount to have a type annotation.
 Expected dismissData to have a type annotation.
 Expected dismissedVersion to have a type annotation.
 Expected dismissFlag to have a type annotation.
 Expected dismissFlagVersion to have a type annotation.
 Expected dismissFunction to have a type annotation.
 Expected dismissSubject to have a type annotation.
 Expected displayDate to have a type annotation.
 Expected displayName to have a type annotation.
 Expected doFetchStatus to have a type annotation.
 Expected dogeResponse to have a type annotation.
 Expected domain to have a type annotation.
 Expected domElem to have a type annotation.
 Expected done to have a type annotation.
 Expected dotArray to have a type annotation.
 Expected dot to have a type annotation.
 Expected downloadText to have a type annotation.
 Expected d to have a type annotation.
 Expected dutchWords to have a type annotation.
 Expected dynLink to have a type annotation.
 Expected easterEggStatus to have a type annotation.
 Expected ECDSA to have a type annotation.
 Expected economyFeeIdx to have a type annotation.
 Expected electron to have a type annotation.
 Expected elementCount to have a type annotation.
 Expected elements to have a type annotation.
 Expected element to have a type annotation.
 Expected ele to have a type annotation.
 Expected eligibleWallets to have a type annotation.
 Expected el to have a type annotation.
 Expected emailComponent to have a type annotation.
 Expected emailNotificationsProvider to have a type annotation.
 Expected emails to have a type annotation.
 Expected email to have a type annotation.
 Expected emptyOpts to have a type annotation.
 Expected enableBackdropDismiss to have a type annotation.
 Expected enabled to have a type annotation.
 Expected enableLightSpy to have a type annotation.
 Expected encodingType to have a type annotation.
 Expected encryptedMessage to have a type annotation.
 Expected encryptPasswordModal to have a type annotation.
 Expected enc to have a type annotation.
 Expected endDate to have a type annotation.
 Expected endingTs to have a type annotation.
 Expected endingTxid to have a type annotation.
 Expected endpoint to have a type annotation.
 Expected env to have a type annotation.
 Expected ERC20Abi to have a type annotation.
 Expected erc20Decoder to have a type annotation.
 Expected errData to have a type annotation.
 Expected errLivenet to have a type annotation.
 Expected errMessage to have a type annotation.
 Expected err_msg to have a type annotation.
 Expected errorActionSheet to have a type annotation.
 Expected errorCallback to have a type annotation.
 Expected errorCoin to have a type annotation.
 Expected errorInfoSheet to have a type annotation.
 Expected errorMessage to have a type annotation.
 Expected errorModalSpy to have a type annotation.
 Expected errorMsg to have a type annotation.
 Expected errorSheet to have a type annotation.
 Expected errors to have a type annotation.
 Expected errorText to have a type annotation.
 Expected error to have a type annotation.
 Expected errStr to have a type annotation.
 Expected err_title to have a type annotation.
 Expected _err to have a type annotation.
 Expected err to have a type annotation.
 Expected escrowAddressIndex to have a type annotation.
 Expected escrowAddressPath to have a type annotation.
 Expected escrowAddress to have a type annotation.
 Expected escrowReclaimTx to have a type annotation.
 Expected escrowSatoshis to have a type annotation.
 Expected estimatedFee to have a type annotation.
 Expected ethResponse to have a type annotation.
 Expected ETH_STANDARD_PATH to have a type annotation.
 Expected ethWalletClient to have a type annotation.
 Expected ethWallet to have a type annotation.
 Expected e to have a type annotation.
 Expected eventData to have a type annotation.
 Expected eventEmitter to have a type annotation.
 Expected eventsPublishSpy to have a type annotation.
 Expected eventsSpy to have a type annotation.
 Expected _event to have a type annotation.
 Expected $event to have a type annotation.
 Expected event to have a type annotation.
 Expected evObj to have a type annotation.
 Expected ew to have a type annotation.
 Expected exactResult to have a type annotation.
 Expected exchangeServices to have a type annotation.
 Expected existentWallets to have a type annotation.
 Expected existsAddress to have a type annotation.
 Expected existsContact to have a type annotation.
 Expected exit to have a type annotation.
 Expected EXPANDABLE_HEADER_COMPONENTS to have a type annotation.
 Expected expectedGroups to have a type annotation.
 Expected expectedResult to have a type annotation.
 Expected expectedStatus to have a type annotation.
 Expected expected to have a type annotation.
 Expected expectedTxHistory to have a type annotation.
 Expected expirationDate to have a type annotation.
 Expected EXPIRATION_TIME_MS to have a type annotation.
 Expected expirationTime to have a type annotation.
 Expected expires to have a type annotation.
 Expected expression to have a type annotation.
 Expected EXTENDED_UPDATE_PERIOD to have a type annotation.
 Expected externalServices to have a type annotation.
 Expected extractAddress to have a type annotation.
 Expected extractedAddress to have a type annotation.
 Expected extractedAmount to have a type annotation.
 Expected fadeStartPosition to have a type annotation.
 Expected failedPromises to have a type annotation.
 Expected failureRedirectUrl to have a type annotation.
 Expected fallbackIcon to have a type annotation.
 Expected fcmInterval to have a type annotation.
 Expected feature_list to have a type annotation.
 Expected feeAlternative to have a type annotation.
 Expected feeCoin to have a type annotation.
 Expected feedbackInfo to have a type annotation.
 Expected feedbackTextarea to have a type annotation.
 Expected feeLevelRate to have a type annotation.
 Expected feeLevelsLenght to have a type annotation.
 Expected feelevels to have a type annotation.
 Expected feeLevels to have a type annotation.
 Expected feeLevel to have a type annotation.
 Expected feeLevesAllowed to have a type annotation.
 Expected feeOpts to have a type annotation.
 Expected feePerKb to have a type annotation.
 Expected feePerSatByte to have a type annotation.
 Expected feeRate to have a type annotation.
 Expected _fee to have a type annotation.
 Expected fee to have a type annotation.
 Expected FEE_TOO_HIGH_LIMIT_PER to have a type annotation.
 Expected fetchAllWalletsStatus to have a type annotation.
 Expected fetchBatches to have a type annotation.
 Expected fetchData to have a type annotation.
 Expected fetchWalletStatus to have a type annotation.
 Expected fettis to have a type annotation.
 Expected fetti to have a type annotation.
 Expected fiatAmountTo to have a type annotation.
 Expected fiatCodes to have a type annotation.
 Expected fiatIsoCode to have a type annotation.
 Expected fiatName to have a type annotation.
 Expected fiatOfAmount to have a type annotation.
 Expected fiatOfFee to have a type annotation.
 Expected fiatResponse to have a type annotation.
 Expected fiat to have a type annotation.
 Expected fileEntry to have a type annotation.
 Expected fileMock to have a type annotation.
 Expected filename to have a type annotation.
 Expected file to have a type annotation.
 Expected fileWriter to have a type annotation.
 Expected fill to have a type annotation.
 Expected filteredBrands to have a type annotation.
 Expected filteredContactsList to have a type annotation.
 Expected filteredLogs to have a type annotation.
 Expected filteredPopularTokens to have a type annotation.
 Expected filteredTokens to have a type annotation.
 Expected filteredTxHistory to have a type annotation.
 Expected filteredWalletsByKeys to have a type annotation.
 Expected filteredWallets to have a type annotation.
 Expected finalOpacity to have a type annotation.
 Expected finalTranslateX to have a type annotation.
 Expected finalValue to have a type annotation.
 Expected finishComment to have a type annotation.
 Expected finishInstantiation to have a type annotation.
 Expected finishSpy to have a type annotation.
 Expected finishText to have a type annotation.
 Expected finish to have a type annotation.
 Expected first4Numbers to have a type annotation.
 Expected firstBrandCurrency to have a type annotation.
 Expected firstDateTs to have a type annotation.
 Expected FIRST_LIMIT to have a type annotation.
 Expected firstWalletData to have a type annotation.
 Expected fixedContent to have a type annotation.
 Expected fixedFee to have a type annotation.
 Expected fixed to have a type annotation.
 Expected fixture to have a type annotation.
 Expected fixTxsUnit to have a type annotation.
 Expected flag to have a type annotation.
 Expected fl to have a type annotation.
 Expected footerMenu to have a type annotation.
 Expected force to have a type annotation.
 Expected formatedValue to have a type annotation.
 Expected formats to have a type annotation.
 Expected formatTagNumber to have a type annotation.
 Expected formattedAmount to have a type annotation.
 Expected formattedNumber to have a type annotation.
 Expected formFile to have a type annotation.
 Expected frenchWords to have a type annotation.
 Expected freshConfig to have a type annotation.
 Expected fromAddress to have a type annotation.
 Expected fromCoinbase to have a type annotation.
 Expected fromCoin to have a type annotation.
 Expected fromTokenBalance to have a type annotation.
 Expected fromToken to have a type annotation.
 Expected fromWalletSelected to have a type annotation.
 Expected fromWallets to have a type annotation.
 Expected fromWallet to have a type annotation.
 Expected f to have a type annotation.
 Expected fullCard to have a type annotation.
 Expected fullDirectory to have a type annotation.
 Expected fullImageString to have a type annotation.
 Expected _function to have a type annotation.
 Expected fundedWallets to have a type annotation.
 Expected galileoCards to have a type annotation.
 Expected gasPrice to have a type annotation.
 Expected gcMap to have a type annotation.
 Expected gc to have a type annotation.
 Expected genericKey to have a type annotation.
 Expected germanWords to have a type annotation.
 Expected getAddressBookPromise to have a type annotation.
 Expected getAddressBookSpy to have a type annotation.
 Expected getBitPayIdInfo to have a type annotation.
 Expected getBrandImagePath to have a type annotation.
 Expected getCompleted to have a type annotation.
 Expected getDirectIntegrations to have a type annotation.
 Expected getDiscountTextColor to have a type annotation.
 Expected getGiftCardUserInfo to have a type annotation.
 Expected getImagesForBrand to have a type annotation.
 Expected getNewTxs to have a type annotation.
 Expected getPayProDetailsSpy to have a type annotation.
 Expected getPayProOptionsSpy to have a type annotation.
 Expected getPayProV2Spy to have a type annotation.
 Expected getPending to have a type annotation.
 Expected getPreAuth to have a type annotation.
 Expected getProfileSpy to have a type annotation.
 Expected getStatusSpy to have a type annotation.
 Expected getTime to have a type annotation.
 Expected giftCardMerchants to have a type annotation.
 Expected GIFT_CARD_PAGES to have a type annotation.
 Expected giftCardProvider to have a type annotation.
 Expected globalNav to have a type annotation.
 Expected globalTabs to have a type annotation.
 Expected GnosisFactories to have a type annotation.
 Expected goBack to have a type annotation.
 Expected GOERLI_CHAIN_ID to have a type annotation.
 Expected googlePay to have a type annotation.
 Expected grid to have a type annotation.
 Expected groupBackupInfo to have a type annotation.
 Expected groupedHistory to have a type annotation.
 Expected groupedTxs to have a type annotation.
 Expected groups to have a type annotation.
 Expected g to have a type annotation.
 Expected gusdResponse to have a type annotation.
 Expected handleEncryptedWalletSpy to have a type annotation.
 Expected hasAcceptedDisclaimer to have a type annotation.
 Expected hasAtLeastOneMnemonicEncrypted to have a type annotation.
 Expected hasContacts to have a type annotation.
 Expected hasCreatedWallet to have a type annotation.
 Expected hasFirstView to have a type annotation.
 Expected hasFundedWallet to have a type annotation.
 Expected hasGalileo to have a type annotation.
 Expected _hashbuf to have a type annotation.
 Expected hash to have a type annotation.
 Expected Hash to have a type annotation.
 Expected hasMeet to have a type annotation.
 Expected hasNotFundedWallet to have a type annotation.
 Expected hasPhysicalCard to have a type annotation.
 Expected hasPromotion to have a type annotation.
 Expected hasReportedFirebaseHasFundedCard to have a type annotation.
 Expected hasReportedFirebaseHasPhysicalCard to have a type annotation.
 Expected hasReportedFirebaseHasVirtualCard to have a type annotation.
 Expected hasSecuredWalletFlag to have a type annotation.
 Expected hasSession to have a type annotation.
 Expected hasTx to have a type annotation.
 Expected hasVirtualCard to have a type annotation.
 Expected hasWallets to have a type annotation.
 Expected hasWalletWithFunds to have a type annotation.
 Expected headers to have a type annotation.
 Expected hexString to have a type annotation.
 Expected hideDiscountSheet to have a type annotation.
 Expected hidePrint to have a type annotation.
 Expected hideSpy to have a type annotation.
 Expected historicalRate to have a type annotation.
 Expected historyCache to have a type annotation.
 Expected HISTORY_SHOW_LIMIT to have a type annotation.
 Expected history to have a type annotation.
 Expected historyToSave to have a type annotation.
 Expected historyUpdateOnProgress to have a type annotation.
 Expected HOME_GIFT_CARD_COMPONENTS to have a type annotation.
 Expected homeLogoCollageSupportedCurrencies to have a type annotation.
 Expected homeRoot to have a type annotation.
 Expected host to have a type annotation.
 Expected htmlArrowElem to have a type annotation.
 Expected htmlButtonElem to have a type annotation.
 Expected htmlContainerElem to have a type annotation.
 Expected htmlTextElem to have a type annotation.
 Expected h to have a type annotation.
 Expected httpHeaders to have a type annotation.
 Expected _IABLoaded to have a type annotation.
 Expected IABLoaded$ to have a type annotation.
 Expected IAB_LOADING_ATTEMPTS to have a type annotation.
 Expected IAB_LOADING_INTERVAL to have a type annotation.
 Expected iconMap to have a type annotation.
 Expected icon to have a type annotation.
 Expected identityMock to have a type annotation.
 Expected idfaOrAaid to have a type annotation.
 Expected idfaPlugin to have a type annotation.
 Expected id to have a type annotation.
 Expected idx2 to have a type annotation.
 Expected idxAccount to have a type annotation.
 Expected idx to have a type annotation.
 Expected imagePath to have a type annotation.
 Expected imagesPerCard to have a type annotation.
 Expected images to have a type annotation.
 Expected image to have a type annotation.
 Expected img to have a type annotation.
 Expected importMnemonicSpy to have a type annotation.
 Expected incentiveLevelId to have a type annotation.
 Expected incoming to have a type annotation.
 Expected indexes to have a type annotation.
 Expected indexFound to have a type annotation.
 Expected index to have a type annotation.
 Expected INFO_SHEET_COMPONENTS to have a type annotation.
 Expected infoSheetSpy to have a type annotation.
 Expected infoSheetTitle to have a type annotation.
 Expected infoSheet to have a type annotation.
 Expected infoSheetType to have a type annotation.
 Expected infoSpy to have a type annotation.
 Expected info to have a type annotation.
 Expected initCb to have a type annotation.
 Expected initializeSpy to have a type annotation.
 Expected initialTranslateX to have a type annotation.
 Expected inMonth to have a type annotation.
 Expected inputSize to have a type annotation.
 Expected inputs to have a type annotation.
 Expected input to have a type annotation.
 Expected inputType to have a type annotation.
 Expected inputValidationScriptSize to have a type annotation.
 Expected instance to have a type annotation.
 Expected instantiationInfo to have a type annotation.
 Expected instructions to have a type annotation.
 Expected insufficientFundsInfoSheet to have a type annotation.
 Expected integrationServices to have a type annotation.
 Expected integrations to have a type annotation.
 Expected integration to have a type annotation.
 Expected interval to have a type annotation.
 Expected invitationCode to have a type annotation.
 Expected InvoiceAbi to have a type annotation.
 Expected invoiceData to have a type annotation.
 Expected invoiceDecoder to have a type annotation.
 Expected invoiceFee to have a type annotation.
 Expected invoiceIds to have a type annotation.
 Expected invoiceId to have a type annotation.
 Expected invoiceID to have a type annotation.
 Expected invoices to have a type annotation.
 Expected invoice to have a type annotation.
 Expected invoiceUrl to have a type annotation.
 Expected invoiceWarning to have a type annotation.
 Expected inv to have a type annotation.
 Expected ionContent to have a type annotation.
 Expected ionicProviders to have a type annotation.
 Expected isActive to have a type annotation.
 Expected isApproveRequest to have a type annotation.
 Expected isAvailable to have a type annotation.
 Expected isBchLegacy to have a type annotation.
 Expected isConfirm to have a type annotation.
 Expected isConnected to have a type annotation.
 Expected isCordova to have a type annotation.
 Expected isDarkMode to have a type annotation.
 Expected isDeferred to have a type annotation.
 Expected isDeletedSeed to have a type annotation.
 Expected isDismissed to have a type annotation.
 Expected isERC20Transfer to have a type annotation.
 Expected isERC20Wallet to have a type annotation.
 Expected isERCToken to have a type annotation.
 Expected isError to have a type annotation.
 Expected isEthWallet to have a type annotation.
 Expected isGradient to have a type annotation.
 Expected _isHidden to have a type annotation.
 Expected isHidden to have a type annotation.
 Expected isInsufficientFundsErr to have a type annotation.
 Expected isInsufficientFundsForFeeErr to have a type annotation.
 Expected isInsufficientLinkedEthFundsForFeeErr to have a type annotation.
 Expected isInvoiceLessThanOneDayOld to have a type annotation.
 Expected isInvoiceUnderpaid to have a type annotation.
 Expected isJA to have a type annotation.
 Expected isLegacy to have a type annotation.
 Expected isManuallyClaimed to have a type annotation.
 Expected isNew to have a type annotation.
 Expected isNotDuplicatedFromAnotherChain to have a type annotation.
 Expected isNull to have a type annotation.
 Expected isObject to have a type annotation.
 Expected isoCode to have a type annotation.
 Expected isOK to have a type annotation.
 Expected isOpenSelector to have a type annotation.
 Expected isPaired to have a type annotation.
 Expected isPayPro to have a type annotation.
 Expected isPrivKeyEncrypted to have a type annotation.
 Expected isSetSeed to have a type annotation.
 Expected isSingleAddress to have a type annotation.
 Expected isSingleSigBch to have a type annotation.
 Expected isStatusCached to have a type annotation.
 Expected isTopUp to have a type annotation.
 Expected ISTORAGE to have a type annotation.
 Expected isUndefined to have a type annotation.
 Expected isUntrustedCaError to have a type annotation.
 Expected isUrlWhitelisted to have a type annotation.
 Expected isUS to have a type annotation.
 Expected isUtxo to have a type annotation.
 Expected isValidEthAddress to have a type annotation.
 Expected isValidMap to have a type annotation.
 Expected isValid to have a type annotation.
 Expected isValidXrpAddress to have a type annotation.
 Expected isVersionUpdatedSpy to have a type annotation.
 Expected isVersionUpdated to have a type annotation.
 Expected italianWords to have a type annotation.
 Expected itemizedDetails to have a type annotation.
 Expected item to have a type annotation.
 Expected i to have a type annotation.
 Expected it to have a type annotation.
 Expected japaneseWords to have a type annotation.
 Expected joinWarningSheet to have a type annotation.
 Expected jsonResult to have a type annotation.
 Expected json to have a type annotation.
 Expected j to have a type annotation.
 Expected k1 to have a type annotation.
 Expected _key1 to have a type annotation.
 Expected key1 to have a type annotation.
 Expected _key2 to have a type annotation.
 Expected key2 to have a type annotation.
 Expected key3 to have a type annotation.
 Expected key4 to have a type annotation.
 Expected key5 to have a type annotation.
 Expected keyClient to have a type annotation.
 Expected keyIdIndex to have a type annotation.
 Expected keyId to have a type annotation.
 Expected keyIndex to have a type annotation.
 Expected keyInUse to have a type annotation.
 Expected keyObject to have a type annotation.
 Expected keyObj to have a type annotation.
 Expected keysArrayFromStorage to have a type annotation.
 Expected keysToAdd to have a type annotation.
 Expected keys to have a type annotation.
 Expected Keys to have a type annotation.
 Expected keysWithMnemonics to have a type annotation.
 Expected keysWithoutMnemonics to have a type annotation.
 Expected keyToAdd to have a type annotation.
 Expected _key to have a type annotation.
 Expected key to have a type annotation.
 Expected Key to have a type annotation.
 Expected keyToReImport to have a type annotation.
 Expected knownContract to have a type annotation.
 Expected KOVAN_CHAIN_ID to have a type annotation.
 Expected k to have a type annotation.
 Expected lang to have a type annotation.
 Expected languages to have a type annotation.
 Expected last4Numbers to have a type annotation.
 Expected lastCountryUsed to have a type annotation.
 Expected lastCurrencyUsed to have a type annotation.
 Expected lastDayRatesArray to have a type annotation.
 Expected lastFourDigits to have a type annotation.
 Expected lastHyphenPosition to have a type annotation.
 Expected lastKnownBalance to have a type annotation.
 Expected lastRate to have a type annotation.
 Expected lastSigner to have a type annotation.
 Expected lastSurveyCardDismissed to have a type annotation.
 Expected lastUsedAltCurrencyList to have a type annotation.
 Expected lastUsedAltCurrency to have a type annotation.
 Expected lastUsedCountry to have a type annotation.
 Expected latestAppVersion to have a type annotation.
 Expected latestEmail to have a type annotation.
 Expected latestReleaseAPIUrl to have a type annotation.
 Expected latest to have a type annotation.
 Expected latestUnused to have a type annotation.
 Expected latestWithBalance to have a type annotation.
 Expected learnText to have a type annotation.
 Expected legacyAddrModalSpy to have a type annotation.
 Expected legacyAddr to have a type annotation.
 Expected legacyGiftCardKey to have a type annotation.
 Expected legend to have a type annotation.
 Expected levels to have a type annotation.
 Expected level to have a type annotation.
 Expected limit to have a type annotation.
 Expected LIMIT to have a type annotation.
 Expected linearGradient to have a type annotation.
 Expected lineHeight to have a type annotation.
 Expected line to have a type annotation.
 Expected linkedEthWalletName to have a type annotation.
 Expected linkedEthWallet to have a type annotation.
 Expected linked to have a type annotation.
 Expected linkifiedTerms to have a type annotation.
 Expected link to have a type annotation.
 Expected linkTo to have a type annotation.
 Expected list to have a type annotation.
 Expected livenetBCH to have a type annotation.
 Expected livenetBTC to have a type annotation.
 Expected livenetContacts to have a type annotation.
 Expected loading to have a type annotation.
 Expected LOADING_WRAPPER_TIMEOUT to have a type annotation.
 Expected localAddressBook to have a type annotation.
 Expected localStorageBackup to have a type annotation.
 Expected localTxs to have a type annotation.
 Expected lockedBalanceAlternative to have a type annotation.
 Expected lockMethod to have a type annotation.
 Expected lockOptions to have a type annotation.
 Expected LOCK_TIMEOUT to have a type annotation.
 Expected lock to have a type annotation.
 Expected loggerErrorSpy to have a type annotation.
 Expected loggerMock to have a type annotation.
 Expected loggerSpy to have a type annotation.
 Expected logLevels to have a type annotation.
 Expected logOptions to have a type annotation.
 Expected logs to have a type annotation.
 Expected lowAmount to have a type annotation.
 Expected lowercaseFormats to have a type annotation.
 Expected lowercaseKeys to have a type annotation.
 Expected lowUtxos to have a type annotation.
 Expected ls to have a type annotation.
 Expected l to have a type annotation.
 Expected mainAddress to have a type annotation.
 Expected MAINNET_CHAIN_ID to have a type annotation.
 Expected majorAppVersion to have a type annotation.
 Expected map to have a type annotation.
 Expected markers to have a type annotation.
 Expected maskedInput to have a type annotation.
 Expected matchableText to have a type annotation.
 Expected matched to have a type annotation.
 Expected match to have a type annotation.
 Expected math to have a type annotation.
 Expected maxAllowedFee to have a type annotation.
 Expected maxAmountFeeSat to have a type annotation.
 Expected maxAmountSat to have a type annotation.
 Expected maxAmount to have a type annotation.
 Expected maxRanges to have a type annotation.
 Expected maxReq to have a type annotation.
 Expected MAX to have a type annotation.
 Expected maxValues to have a type annotation.
 Expected maxValue to have a type annotation.
 Expected maxWidth to have a type annotation.
 Expected mdesCertOnlyFlag to have a type annotation.
 Expected memoComponent to have a type annotation.
 Expected memo to have a type annotation.
 Expected merchantCurations to have a type annotation.
 Expected merchantCuration to have a type annotation.
 Expected merchantName to have a type annotation.
 Expected merchants to have a type annotation.
 Expected merchant to have a type annotation.
 Expected mergeAddressBook to have a type annotation.
 Expected merkleValidationScriptSize to have a type annotation.
 Expected messageData to have a type annotation.
 Expected messageId to have a type annotation.
 Expected _message to have a type annotation.
 Expected message to have a type annotation.
 Expected method to have a type annotation.
 Expected metrics to have a type annotation.
 Expected migrated to have a type annotation.
 Expected _migrating to have a type annotation.
 Expected migrating to have a type annotation.
 Expected minerFeeNoticeInfoSheet to have a type annotation.
 Expected minerFeeWarning to have a type annotation.
 Expected minFeeRate to have a type annotation.
 Expected minFee to have a type annotation.
 Expected minFiatCurrency to have a type annotation.
 Expected minorAppVersion to have a type annotation.
 Expected minPrice to have a type annotation.
 Expected min to have a type annotation.
 Expected minUnitAmount to have a type annotation.
 Expected MIN_UPDATE_TIME to have a type annotation.
 Expected minutes to have a type annotation.
 Expected minValue to have a type annotation.
 Expected minXrpBalance to have a type annotation.
 Expected _misunderstoodOutputsMsg to have a type annotation.
 Expected mnemonicHasPassphrase to have a type annotation.
 Expected mnemonic to have a type annotation.
 Expected mockPayPro to have a type annotation.
 Expected mockWallet to have a type annotation.
 Expected modalSpy to have a type annotation.
 Expected modal to have a type annotation.
 Expected momentSpy to have a type annotation.
 Expected month to have a type annotation.
 Expected monthYear1 to have a type annotation.
 Expected monthYear2 to have a type annotation.
 Expected monthYear to have a type annotation.
 Expected msg1 to have a type annotation.
 Expected msg2 to have a type annotation.
 Expected msg3 to have a type annotation.
 Expected msg4 to have a type annotation.
 Expected msg to have a type annotation.
 Expected m to have a type annotation.
 Expected multiplePhoneCodesFlattened to have a type annotation.
 Expected multiRecipients to have a type annotation.
 Expected multisigContractAddress to have a type annotation.
 Expected multisigContractInstantiationInfo to have a type annotation.
 Expected multisigContract to have a type annotation.
 Expected multisigEthCredentials to have a type annotation.
 Expected multisigEthInfo to have a type annotation.
 Expected multisigEthWalletClient to have a type annotation.
 Expected multisigWallet to have a type annotation.
 Expected myName to have a type annotation.
 Expected myParam to have a type annotation.
 Expected name to have a type annotation.
 Expected nativeBalance to have a type annotation.
 Expected nativeCurrency to have a type annotation.
 Expected needsBackup to have a type annotation.
 Expected needsFallback to have a type annotation.
 Expected networkFee to have a type annotation.
 Expected networkName to have a type annotation.
 Expected networks to have a type annotation.
 Expected _network to have a type annotation.
 Expected network to have a type annotation.
 Expected NETWORK to have a type annotation.
 Expected newABFile to have a type annotation.
 Expected newAltCurrency to have a type annotation.
 Expected newAmountSat to have a type annotation.
 Expected newAvailableUnits to have a type annotation.
 Expected newBlob to have a type annotation.
 Expected newCache to have a type annotation.
 Expected newContactJson to have a type annotation.
 Expected newCrededentials to have a type annotation.
 Expected newData to have a type annotation.
 Expected newDate to have a type annotation.
 Expected newDirectory to have a type annotation.
 Expected newHeaderHeight to have a type annotation.
 Expected newHeight to have a type annotation.
 Expected newHistory to have a type annotation.
 Expected newKeys to have a type annotation.
 Expected newLog to have a type annotation.
 Expected newMap to have a type annotation.
 Expected newNetwork to have a type annotation.
 Expected newOpts to have a type annotation.
 Expected newRate to have a type annotation.
 Expected newRecipient to have a type annotation.
 Expected newSeries to have a type annotation.
 Expected newSession to have a type annotation.
 Expected newSessionUri to have a type annotation.
 Expected newStatus to have a type annotation.
 Expected newSupportedAmounts to have a type annotation.
 Expected newTerms to have a type annotation.
 Expected _newTxs to have a type annotation.
 Expected newTxs to have a type annotation.
 Expected newUri to have a type annotation.
 Expected newWalletClient to have a type annotation.
 Expected newWalletsCount to have a type annotation.
 Expected newWallets to have a type annotation.
 Expected newWallet to have a type annotation.
 Expected newWord to have a type annotation.
 Expected nextPage to have a type annotation.
 Expected nextView to have a type annotation.
 Expected noBalance to have a type annotation.
 Expected nonce to have a type annotation.
 Expected nonceWallet to have a type annotation.
 Expected nonEligibleWallet to have a type annotation.
 Expected nonEscrowReclaimTxs to have a type annotation.
 Expected noOpenModal to have a type annotation.
 Expected normalizedFormat to have a type annotation.
 Expected normalLevelRate to have a type annotation.
 Expected notes to have a type annotation.
 Expected _note to have a type annotation.
 Expected note to have a type annotation.
 Expected notificationConfig to have a type annotation.
 Expected notificationEmail to have a type annotation.
 Expected notifications to have a type annotation.
 Expected notification to have a type annotation.
 Expected notifyOnly to have a type annotation.
 Expected noWalletWarningInfoSheet to have a type annotation.
 Expected now to have a type annotation.
 Expected nrKeys to have a type annotation.
 Expected n to have a type annotation.
 Expected numActiveCards to have a type annotation.
 Expected number to have a type annotation.
 Expected numericValue to have a type annotation.
 Expected numInputs to have a type annotation.
 Expected numLevels to have a type annotation.
 Expected obj to have a type annotation.
 Expected offer to have a type annotation.
 Expected okText to have a type annotation.
 Expected ok to have a type annotation.
 Expected oldABFile to have a type annotation.
 Expected oldAddr to have a type annotation.
 Expected oldCardConfig to have a type annotation.
 Expected oldCard to have a type annotation.
 Expected oldContacts to have a type annotation.
 Expected _oldCredentials to have a type annotation.
 Expected oldData to have a type annotation.
 Expected oldGiftCards to have a type annotation.
 Expected oldLinked to have a type annotation.
 Expected oldProfile to have a type annotation.
 Expected old to have a type annotation.
 Expected onboardingState to have a type annotation.
 Expected onbordingState to have a type annotation.
 Expected onDismiss to have a type annotation.
 Expected oneInchAllSupportedCoins to have a type annotation.
 Expected oneInchApproveData to have a type annotation.
 Expected oneInchData to have a type annotation.
 Expected oneInchDisabledWarningSheet to have a type annotation.
 Expected oneInchSupportedCoinsFull to have a type annotation.
 Expected onError to have a type annotation.
 Expected one to have a type annotation.
 Expected onFailure to have a type annotation.
 Expected ongoingProcess to have a type annotation.
 Expected onlyIntegers to have a type annotation.
 Expected onSuccess to have a type annotation.
 Expected opacityCss to have a type annotation.
 Expected opacity to have a type annotation.
 Expected openBlockChainEvent to have a type annotation.
 Expected openLink to have a type annotation.
 Expected openSettingsSpy to have a type annotation.
 Expected openWalletId to have a type annotation.
 Expected opPickIndexBytes to have a type annotation.
 Expected optIn to have a type annotation.
 Expected optionClicked to have a type annotation.
 Expected optionsSheet to have a type annotation.
 Expected options to have a type annotation.
 Expected _option to have a type annotation.
 Expected option to have a type annotation.
 Expected optsDisabled to have a type annotation.
 Expected _opts to have a type annotation.
 Expected opts to have a type annotation.
 Expected optsWithoutEmail to have a type annotation.
 Expected _opt to have a type annotation.
 Expected opt to have a type annotation.
 Expected orderBy to have a type annotation.
 Expected orderedWalletsGroups to have a type annotation.
 Expected orderId to have a type annotation.
 Expected order to have a type annotation.
 Expected originalCard to have a type annotation.
 Expected origin to have a type annotation.
 Expected OS to have a type annotation.
 Expected otherCardCountries to have a type annotation.
 Expected otherParams to have a type annotation.
 Expected o to have a type annotation.
 Expected otp to have a type annotation.
 Expected outputAddresses to have a type annotation.
 Expected outputAddr to have a type annotation.
 Expected outputAmount to have a type annotation.
 Expected outputIndex to have a type annotation.
 Expected outputSize to have a type annotation.
 Expected outputsNr to have a type annotation.
 Expected outputs to have a type annotation.
 Expected output to have a type annotation.
 Expected out to have a type annotation.
 Expected overhead to have a type annotation.
 Expected ownerAddress to have a type annotation.
 Expected owner to have a type annotation.
 Expected pageArray to have a type annotation.
 Expected pageMap to have a type annotation.
 Expected PAGES to have a type annotation.
 Expected pageTitle to have a type annotation.
 Expected page to have a type annotation.
 Expected pairData to have a type annotation.
 Expected pairedWallet to have a type annotation.
 Expected pairingReason to have a type annotation.
 Expected pair to have a type annotation.
 Expected params to have a type annotation.
 Expected param to have a type annotation.
 Expected parentWalletCoin to have a type annotation.
 Expected parsedAmount to have a type annotation.
 Expected parsedCode to have a type annotation.
 Expected parsedData to have a type annotation.
 Expected parsed to have a type annotation.
 Expected parseSecret to have a type annotation.
 Expected PASSTHROUGH_URI_DEV to have a type annotation.
 Expected PASSTHROUGH_URI_PROD to have a type annotation.
 Expected _pass to have a type annotation.
 Expected pass to have a type annotation.
 Expected password to have a type annotation.
 Expected patchAppVersion to have a type annotation.
 Expected pathData to have a type annotation.
 Expected path to have a type annotation.
 Expected pausedOngoingProcess to have a type annotation.
 Expected _pausedState to have a type annotation.
 Expected pausePreviewSpy to have a type annotation.
 Expected paxResponse to have a type annotation.
 Expected payDetails to have a type annotation.
 Expected _payload to have a type annotation.
 Expected payload to have a type annotation.
 Expected paymentCode to have a type annotation.
 Expected paymentId to have a type annotation.
 Expected paymentMethodName to have a type annotation.
 Expected paymentMethodsAvailable to have a type annotation.
 Expected paymentMethod to have a type annotation.
 Expected paymentOptions to have a type annotation.
 Expected paymentRequestData to have a type annotation.
 Expected paymentRequests to have a type annotation.
 Expected paymentRequest to have a type annotation.
 Expected paymentUrl to have a type annotation.
 Expected payOpts to have a type annotation.
 Expected payProDetails to have a type annotation.
 Expected payProFeeSat to have a type annotation.
 Expected payproOptions to have a type annotation.
 Expected payProOptions to have a type annotation.
 Expected paypro to have a type annotation.
 Expected payProUrl to have a type annotation.
 Expected peerMeta to have a type annotation.
 Expected pendingBalanceAlternative to have a type annotation.
 Expected pendingInstantiations to have a type annotation.
 Expected pendingInstantiation to have a type annotation.
 Expected pendingMessages to have a type annotation.
 Expected pendingWallets to have a type annotation.
 Expected pendingWallet to have a type annotation.
 Expected persistenceProvider to have a type annotation.
 Expected per to have a type annotation.
 Expected phoneCountryCode to have a type annotation.
 Expected phoneCountryInfo to have a type annotation.
 Expected phoneMask to have a type annotation.
 Expected phoneSheet to have a type annotation.
 Expected pinChanges to have a type annotation.
 Expected PIN_COMPONENTS to have a type annotation.
 Expected pin to have a type annotation.
 Expected pinValue to have a type annotation.
 Expected PKregex to have a type annotation.
 Expected placeholder to have a type annotation.
 Expected platformMock to have a type annotation.
 Expected platformReady to have a type annotation.
 Expected platformReady$ to have a type annotation.
 Expected platform to have a type annotation.
 Expected plat to have a type annotation.
 Expected plotOptions to have a type annotation.
 Expected pointIndex to have a type annotation.
 Expected polishWords to have a type annotation.
 Expected popularBrands to have a type annotation.
 Expected popupSpy to have a type annotation.
 Expected portugueseWords to have a type annotation.
 Expected posCss to have a type annotation.
 Expected po to have a type annotation.
 Expected precision to have a type annotation.
 Expected prefix to have a type annotation.
 Expected prefs to have a type annotation.
 Expected _pref to have a type annotation.
 Expected preparingMessage to have a type annotation.
 Expected previousCache to have a type annotation.
 Expected previousValue to have a type annotation.
 Expected previousView to have a type annotation.
 Expected prevTx to have a type annotation.
 Expected priceCard to have a type annotation.
 Expected priceChange to have a type annotation.
 Expected printAlertShown to have a type annotation.
 Expected priv to have a type annotation.
 Expected processedArgs to have a type annotation.
 Expected processedInfo to have a type annotation.
 Expected processedParams to have a type annotation.
 Expected processed to have a type annotation.
 Expected processNames to have a type annotation.
 Expected processPendingTxps to have a type annotation.
 Expected profileLength to have a type annotation.
 Expected profileOld to have a type annotation.
 Expected profileProvider to have a type annotation.
 Expected profile to have a type annotation.
 Expected progressFn to have a type annotation.
 Expected progress to have a type annotation.
 Expected promiseObj to have a type annotation.
 Expected promises to have a type annotation.
 Expected promise to have a type annotation.
 Expected promotedCard to have a type annotation.
 Expected promo to have a type annotation.
 Expected prompt to have a type annotation.
 Expected prom to have a type annotation.
 Expected property to have a type annotation.
 Expected protoAddr to have a type annotation.
 Expected protocol to have a type annotation.
 Expected protocolUrl to have a type annotation.
 Expected providers to have a type annotation.
 Expected provider to have a type annotation.
 Expected provide to have a type annotation.
 Expected p to have a type annotation.
 Expected pubKeys to have a type annotation.
 Expected pubkey to have a type annotation.
 Expected pubKey to have a type annotation.
 Expected publishedTxp to have a type annotation.
 Expected publishedTx to have a type annotation.
 Expected publishSpy to have a type annotation.
 Expected purchaseAmount to have a type annotation.
 Expected purchasedBrands to have a type annotation.
 Expected purchasedCardPromises to have a type annotation.
 Expected PURCHASED_CARDS_PAGE_COMPONENTS to have a type annotation.
 Expected purchasedCards to have a type annotation.
 Expected purpose to have a type annotation.
 Expected pushDataBytes to have a type annotation.
 Expected query to have a type annotation.
 Expected quoteData to have a type annotation.
 Expected quoteId to have a type annotation.
 Expected radAngle to have a type annotation.
 Expected radSpread to have a type annotation.
 Expected randomInt to have a type annotation.
 Expected random to have a type annotation.
 Expected range to have a type annotation.
 Expected rateFromFiat to have a type annotation.
 Expected ratesApi to have a type annotation.
 Expected ratesAvailable to have a type annotation.
 Expected rateServiceUrl to have a type annotation.
 Expected rates to have a type annotation.
 Expected rate to have a type annotation.
 Expected raw to have a type annotation.
 Expected rawTxLength to have a type annotation.
 Expected rawWallets to have a type annotation.
 Expected reader to have a type annotation.
 Expected readySource to have a type annotation.
 Expected realNavigator to have a type annotation.
 Expected realUserAgent to have a type annotation.
 Expected reason to have a type annotation.
 Expected receiveModal to have a type annotation.
 Expected receive to have a type annotation.
 Expected receivingPercentage to have a type annotation.
 Expected recentlyPurchasedAvailableBrandNames to have a type annotation.
 Expected recentlyPurchasedBrands to have a type annotation.
 Expected recipients to have a type annotation.
 Expected recipient to have a type annotation.
 Expected recipientType to have a type annotation.
 Expected reclaimAddressIndex to have a type annotation.
 Expected reclaimAddressPath to have a type annotation.
 Expected reclaimAddress to have a type annotation.
 Expected reclaimSignatureSring to have a type annotation.
 Expected reclaimSignatureString to have a type annotation.
 Expected reclaimTxFee to have a type annotation.
 Expected reclaimTxp to have a type annotation.
 Expected reclaimTxSize to have a type annotation.
 Expected record to have a type annotation.
 Expected redeemScriptSize to have a type annotation.
 Expected redeemUrl to have a type annotation.
 Expected redirectUrl to have a type annotation.
 Expected redirParams to have a type annotation.
 Expected redirSpy to have a type annotation.
 Expected redir to have a type annotation.
 Expected REFERRAL_SOCIAL_SHARING_MESSAGE to have a type annotation.
 Expected reflect to have a type annotation.
 Expected refresher to have a type annotation.
 Expected ref to have a type annotation.
 Expected regex to have a type annotation.
 Expected rejectedTxp to have a type annotation.
 Expected reject to have a type annotation.
 Expected rej to have a type annotation.
 Expected releaseInfoTaps to have a type annotation.
 Expected remoteData to have a type annotation.
 Expected removeTxConfirmNotificationSpy to have a type annotation.
 Expected replaceKey to have a type annotation.
 Expected replaceSpy to have a type annotation.
 Expected req to have a type annotation.
 Expected requestId to have a type annotation.
 Expected requestLimit to have a type annotation.
 Expected requests to have a type annotation.
 Expected request to have a type annotation.
 Expected requiredFeeParam to have a type annotation.
 Expected requiredFeeRate to have a type annotation.
 Expected resolve to have a type annotation.
 Expected response to have a type annotation.
 Expected responsive to have a type annotation.
 Expected resp to have a type annotation.
 Expected res to have a type annotation.
 Expected results to have a type annotation.
 Expected result to have a type annotation.
 Expected resumePreviewSpy to have a type annotation.
 Expected retry to have a type annotation.
 Expected ret to have a type annotation.
 Expected returnParam to have a type annotation.
 Expected rgbString to have a type annotation.
 Expected RINKEBY_CHAIN_ID to have a type annotation.
 Expected rootPath to have a type annotation.
 Expected root to have a type annotation.
 Expected ROPSTEN_CHAIN_ID to have a type annotation.
 Expected _r to have a type annotation.
 Expected r to have a type annotation.
 Expected runningBalance to have a type annotation.
 Expected russianWords to have a type annotation.
 Expected s1 to have a type annotation.
 Expected s2 to have a type annotation.
 Expected safetyMargin to have a type annotation.
 Expected satToUnit to have a type annotation.
 Expected savedPhoneCountry to have a type annotation.
 Expected saved to have a type annotation.
 Expected savedVersion to have a type annotation.
 Expected savePromise to have a type annotation.
 Expected scale to have a type annotation.
 Expected scanButtonAreaHeight to have a type annotation.
 Expected scannerStates to have a type annotation.
 Expected scanRoot to have a type annotation.
 Expected scanSpy to have a type annotation.
 Expected scans to have a type annotation.
 Expected scanSub to have a type annotation.
 Expected script to have a type annotation.
 Expected scrollContent to have a type annotation.
 Expected scrollEventMock to have a type annotation.
 Expected scrollSpy to have a type annotation.
 Expected searchableDate to have a type annotation.
 Expected searchQuery to have a type annotation.
 Expected search to have a type annotation.
 Expected secondBtnText to have a type annotation.
 Expected _secret to have a type annotation.
 Expected secret to have a type annotation.
 Expected seedOptions to have a type annotation.
 Expected seed to have a type annotation.
 Expected selectedAlternative to have a type annotation.
 Expected selectedCoins to have a type annotation.
 Expected selectedCountry to have a type annotation.
 Expected selectedInputs to have a type annotation.
 Expected selectedKey to have a type annotation.
 Expected selectedLevel to have a type annotation.
 Expected selectedNavigationType to have a type annotation.
 Expected selectedTheme to have a type annotation.
 Expected selected to have a type annotation.
 Expected selectedTokens to have a type annotation.
 Expected selectedToken to have a type annotation.
 Expected selectedWallet to have a type annotation.
 Expected sendMaxInfoMock to have a type annotation.
 Expected sendMaxInfo to have a type annotation.
 Expected sendTxAtSameTimeAsMove to have a type annotation.
 Expected separator to have a type annotation.
 Expected SEP to have a type annotation.
 Expected series to have a type annotation.
 Expected serverMessage to have a type annotation.
 Expected serviceInfo to have a type annotation.
 Expected serviceName to have a type annotation.
 Expected servicesInfo to have a type annotation.
 Expected services to have a type annotation.
 Expected service to have a type annotation.
 Expected session to have a type annotation.
 Expected setAddressBookPromise to have a type annotation.
 Expected setBackupGroupFlagSpy to have a type annotation.
 Expected setExpirationTime to have a type annotation.
 Expected setLang to have a type annotation.
 Expected setNonce to have a type annotation.
 Expected setNotificationsIntervalSpy to have a type annotation.
 Expected setSeed to have a type annotation.
 Expected setSpy to have a type annotation.
 Expected settingsChanged to have a type annotation.
 Expected settingsRoot to have a type annotation.
 Expected settingsTabIndex to have a type annotation.
 Expected settings to have a type annotation.
 Expected setTxConfirmNotificationSpy to have a type annotation.
 Expected setWalletSelectorSpy to have a type annotation.
 Expected shareText to have a type annotation.
 Expected sheetHeight to have a type annotation.
 Expected sheetName to have a type annotation.
 Expected sheet to have a type annotation.
 Expected sheetType to have a type annotation.
 Expected shortContactsList to have a type annotation.
 Expected shouldContinue to have a type annotation.
 Expected shouldHideBalance to have a type annotation.
 Expected shouldHidePin to have a type annotation.
 Expected shouldHideWallet to have a type annotation.
 Expected shouldNotify to have a type annotation.
 Expected shouldSync to have a type annotation.
 Expected showAtHome to have a type annotation.
 Expected showCard to have a type annotation.
 Expected showCoinbase to have a type annotation.
 Expected showCustomizeNonce to have a type annotation.
 Expected showEnableRBF to have a type annotation.
 Expected showErrorInfoSheetSpy to have a type annotation.
 Expected showInHome to have a type annotation.
 Expected showLegacyAddrMessageSpy to have a type annotation.
 Expected showName to have a type annotation.
 Expected showNotification to have a type annotation.
 Expected showOpts to have a type annotation.
 Expected showRequest to have a type annotation.
 Expected showShare to have a type annotation.
 Expected showSuccess to have a type annotation.
 Expected show to have a type annotation.
 Expected shuffledMnemonicWords to have a type annotation.
 Expected _signatures to have a type annotation.
 Expected signatures to have a type annotation.
 Expected signature to have a type annotation.
 Expected signedData to have a type annotation.
 Expected signedReclaimTxp to have a type annotation.
 Expected signedTxp to have a type annotation.
 Expected signErr to have a type annotation.
 Expected sigObj to have a type annotation.
 Expected simplexData to have a type annotation.
 Expected simplifiedChineseWords to have a type annotation.
 Expected singleLivenetWallet to have a type annotation.
 Expected size to have a type annotation.
 Expected sjcl to have a type annotation.
 Expected skipDeviceValidation to have a type annotation.
 Expected skipKeyValidation to have a type annotation.
 Expected sleep to have a type annotation.
 Expected slideButton to have a type annotation.
 Expected slideDone to have a type annotation.
 Expected slideIndex to have a type annotation.
 Expected slippage to have a type annotation.
 Expected sort to have a type annotation.
 Expected sourceAmount to have a type annotation.
 Expected sourceCurrency to have a type annotation.
 Expected spacePosition to have a type annotation.
 Expected spanishWords to have a type annotation.
 Expected speedUpTxFee to have a type annotation.
 Expected speedUpTxInfo to have a type annotation.
 Expected spendableAmount to have a type annotation.
 Expected spendableBalanceAlternative to have a type annotation.
 Expected spenderAddress to have a type annotation.
 Expected spendUnconfirmed to have a type annotation.
 Expected spread to have a type annotation.
 Expected spyAskPassword to have a type annotation.
 Expected spySet to have a type annotation.
 Expected spy to have a type annotation.
 Expected startDate to have a type annotation.
 Expected startIndex to have a type annotation.
 Expected startsNumeric to have a type annotation.
 Expected startVelocity to have a type annotation.
 Expected stateParams to have a type annotation.
 Expected states to have a type annotation.
 Expected state to have a type annotation.
 Expected statusMock to have a type annotation.
 Expected status to have a type annotation.
 Expected statusUpdateOnProgress to have a type annotation.
 Expected statusWallet to have a type annotation.
 Expected s to have a type annotation.
 Expected storedCustomTokenData to have a type annotation.
 Expected storedCustomTokenOpts to have a type annotation.
 Expected storeName to have a type annotation.
 Expected storeNewProfileSpy to have a type annotation.
 Expected storeProfileSpy to have a type annotation.
 Expected stringValue to have a type annotation.
 Expected stroke to have a type annotation.
 Expected str to have a type annotation.
 Expected subject to have a type annotation.
 Expected subscribeEvents to have a type annotation.
 Expected subscribeSpy to have a type annotation.
 Expected subscription to have a type annotation.
 Expected subtitle to have a type annotation.
 Expected subtotalAmountFeeInfoSheet to have a type annotation.
 Expected subtract to have a type annotation.
 Expected successCallback to have a type annotation.
 Expected successfulPromises to have a type annotation.
 Expected success to have a type annotation.
 Expected suffix to have a type annotation.
 Expected sum to have a type annotation.
 Expected superEconomyFeeIdx to have a type annotation.
 Expected supportedAmounts to have a type annotation.
 Expected supportedCardNames to have a type annotation.
 Expected supportedCards to have a type annotation.
 Expected supportedChains to have a type annotation.
 Expected supportedCoins to have a type annotation.
 Expected supportedCoinsWithFixRateEnabled to have a type annotation.
 Expected supportedDiscountTypes to have a type annotation.
 Expected supportedFiatAltCurrencies to have a type annotation.
 Expected supportedFormats to have a type annotation.
 Expected supportedPaymentMethods to have a type annotation.
 Expected supportedTokens to have a type annotation.
 Expected swapData to have a type annotation.
 Expected swapRequestData to have a type annotation.
 Expected swapTxData to have a type annotation.
 Expected symbolMap to have a type annotation.
 Expected symbol to have a type annotation.
 Expected tabBarElement to have a type annotation.
 Expected tabs to have a type annotation.
 Expected tab to have a type annotation.
 Expected tagParam to have a type annotation.
 Expected tag to have a type annotation.
 Expected _takeover_image to have a type annotation.
 Expected _takeover_sig to have a type annotation.
 Expected _takeover_url to have a type annotation.
 Expected tapped to have a type annotation.
 Expected terms to have a type annotation.
 Expected termsWithPlaceholders to have a type annotation.
 Expected term to have a type annotation.
 Expected testAdsStatus to have a type annotation.
 Expected testBed to have a type annotation.
 Expected testEnv to have a type annotation.
 Expected testing to have a type annotation.
 Expected testLine to have a type annotation.
 Expected testnetContacts to have a type annotation.
 Expected testnet to have a type annotation.
 Expected testTx to have a type annotation.
 Expected testWidth to have a type annotation.
 Expected textarea to have a type annotation.
 Expected text to have a type annotation.
 Expected theme to have a type annotation.
 Expected the Promise rejection reason to be an Error.
 Expected throttledBwsEvent to have a type annotation.
 Expected throttleSearch to have a type annotation.
 Expected throw instead of Promise.reject
 Expected tick to have a type annotation.
 Expected timeExceeded to have a type annotation.
 Expected TIMEOUT_FOR_REFRESHER to have a type annotation.
 Expected timeout to have a type annotation.
 Expected timeProvider to have a type annotation.
 Expected timestamp to have a type annotation.
 Expected time to have a type annotation.
 Expected title to have a type annotation.
 Expected toAddressName to have a type annotation.
 Expected toAddress to have a type annotation.
 Expected toCoin to have a type annotation.
 Expected toFiatSpy to have a type annotation.
 Expected _ to have a type annotation.
 Expected tokenAddress to have a type annotation.
 Expected tokenClients to have a type annotation.
 Expected tokenContractInfo to have a type annotation.
 Expected tokenCredentials to have a type annotation.
 Expected tokenDisabled to have a type annotation.
 Expected tokenObjs to have a type annotation.
 Expected tokenObj to have a type annotation.
 Expected tokenOpts to have a type annotation.
 Expected TokenOpts to have a type annotation.
 Expected tokenSearchResults to have a type annotation.
 Expected TokensListAPIUrl to have a type annotation.
 Expected tokensSelected to have a type annotation.
 Expected tokens to have a type annotation.
 Expected tokenSymbol to have a type annotation.
 Expected _token to have a type annotation.
 Expected token to have a type annotation.
 Expected tokenWalletClient to have a type annotation.
 Expected tokenWalletIds to have a type annotation.
 Expected tokenWallet to have a type annotation.
 Expected toolbarBg to have a type annotation.
 Expected tooltip to have a type annotation.
 Expected topic to have a type annotation.
 Expected topPadding to have a type annotation.
 Expected totalAmountArray to have a type annotation.
 Expected totalAmountFeeInfoSheet to have a type annotation.
 Expected totalAmountStr to have a type annotation.
 Expected totalAmount to have a type annotation.
 Expected totalBalanceAlternativeLastDay to have a type annotation.
 Expected totalBalanceAlternative to have a type annotation.
 Expected totalBalanceChange to have a type annotation.
 Expected totalBalanceStr to have a type annotation.
 Expected totalBalance to have a type annotation.
 Expected totalDiscount to have a type annotation.
 Expected totalFee to have a type annotation.
 Expected totalLow to have a type annotation.
 Expected totalSecs to have a type annotation.
 Expected totalTicks to have a type annotation.
 Expected total to have a type annotation.
 Expected toToken to have a type annotation.
 Expected toWalletSelectedByDefault to have a type annotation.
 Expected toWalletSelected to have a type annotation.
 Expected toWallets to have a type annotation.
 Expected toWallet to have a type annotation.
 Expected traditionalChineseWords to have a type annotation.
 Expected transactionFee to have a type annotation.
 Expected transactionSignature to have a type annotation.
 Expected transactions to have a type annotation.
 Expected transferId to have a type annotation.
 Expected transferTo to have a type annotation.
 Expected transformations to have a type annotation.
 Expected transformSpy to have a type annotation.
 Expected transform to have a type annotation.
 Expected translateX to have a type annotation.
 Expected translateY to have a type annotation.
 Expected tryNumber to have a type annotation.
 Expected ts to have a type annotation.
 Expected t to have a type annotation.
 Expected tx2 to have a type annotation.
 Expected txCreated to have a type annotation.
 Expected txDate to have a type annotation.
 Expected txDateUtc to have a type annotation.
 Expected txDetailModal to have a type annotation.
 Expected txHistorySearchResults to have a type annotation.
 Expected txHistory to have a type annotation.
 Expected txHistoryUnique to have a type annotation.
 Expected txid to have a type annotation.
 Expected txId to have a type annotation.
 Expected txInd to have a type annotation.
 Expected txNotification to have a type annotation.
 Expected txns to have a type annotation.
 Expected txn to have a type annotation.
 Expected txObject to have a type annotation.
 Expected _txpid to have a type annotation.
 Expected txpPublished to have a type annotation.
 Expected txpr to have a type annotation.
 Expected txpsByStatus to have a type annotation.
 Expected txpsByWallet to have a type annotation.
 Expected txpsData to have a type annotation.
 Expected txpsPerWallet to have a type annotation.
 Expected txps to have a type annotation.
 Expected txpToBeSigned to have a type annotation.
 Expected _txp to have a type annotation.
 Expected txp to have a type annotation.
 Expected txpToSign to have a type annotation.
 Expected _txSent to have a type annotation.
 Expected txSent to have a type annotation.
 Expected txsFromLocal to have a type annotation.
 Expected txsFromServer to have a type annotation.
 Expected txSize to have a type annotation.
 Expected _txs to have a type annotation.
 Expected txs to have a type annotation.
 Expected txTime to have a type annotation.
 Expected _tx to have a type annotation.
 Expected tx to have a type annotation.
 Expected type to have a type annotation.
 Expected ua to have a type annotation.
 Expected uniqueCardNames to have a type annotation.
 Expected uniqueCurations to have a type annotation.
 Expected uniqueCurrencies to have a type annotation.
 Expected unit to have a type annotation.
 Expected unregisterBackButtonAction to have a type annotation.
 Expected unregisterSpy to have a type annotation.
 Expected unregister to have a type annotation.
 Expected unusedCurrencyList to have a type annotation.
 Expected updateAll to have a type annotation.
 Expected updatedActiveGiftCardsPromise to have a type annotation.
 Expected updatedCardBalances to have a type annotation.
 Expected updatedCards to have a type annotation.
 Expected updatedCard to have a type annotation.
 Expected updatedMap to have a type annotation.
 Expected updatedOn to have a type annotation.
 Expected updateHistory to have a type annotation.
 Expected updateLowAmount to have a type annotation.
 Expected updateNotes to have a type annotation.
 Expected updateOptions to have a type annotation.
 Expected updatePendingProposals to have a type annotation.
 Expected UPDATE_PERIOD_FAST to have a type annotation.
 Expected _updatePeriod to have a type annotation.
 Expected UPDATE_PERIOD to have a type annotation.
 Expected updatePrefs to have a type annotation.
 Expected updateStatusError to have a type annotation.
 Expected updateStatus to have a type annotation.
 Expected updates to have a type annotation.
 Expected update to have a type annotation.
 Expected updateTxDebounced to have a type annotation.
 Expected updateWalletSpy to have a type annotation.
 Expected urgentFee to have a type annotation.
 Expected URICash to have a type annotation.
 Expected URI_DEV to have a type annotation.
 Expected URIDoge to have a type annotation.
 Expected URILtc to have a type annotation.
 Expected URI_PROD to have a type annotation.
 Expected uri to have a type annotation.
 Expected URI to have a type annotation.
 Expected urlRegex to have a type annotation.
 Expected urlSearchParams to have a type annotation.
 Expected urls to have a type annotation.
 Expected urlsWithoutProtocol to have a type annotation.
 Expected url to have a type annotation.
 Expected URL to have a type annotation.
 Expected urlWithoutParams to have a type annotation.
 Expected usdcResponse to have a type annotation.
 Expected useAsModal to have a type annotation.
 Expected useBackCameraSpy to have a type annotation.
 Expected useClass to have a type annotation.
 Expected used to have a type annotation.
 Expected useFrontCameraSpy to have a type annotation.
 Expected useIdeograms to have a type annotation.
 Expected userAgent to have a type annotation.
 Expected userBasicInfo to have a type annotation.
 Expected userCountryCode to have a type annotation.
 Expected userId to have a type annotation.
 Expected userInfo to have a type annotation.
 Expected user to have a type annotation.
 Expected user$ to have a type annotation.
 Expected useValue to have a type annotation.
 Expected usMask to have a type annotation.
 Expected u to have a type annotation.
 Expected utxos to have a type annotation.
 Expected v1num to have a type annotation.
 Expected v1str to have a type annotation.
 Expected v1 to have a type annotation.
 Expected val2 to have a type annotation.
 Expected validDataByCoin to have a type annotation.
 Expected validDataFromClipboard to have a type annotation.
 Expected validDataTypeMap to have a type annotation.
 Expected validEmail to have a type annotation.
 Expected validSavedPhone to have a type annotation.
 Expected validSchema to have a type annotation.
 Expected val to have a type annotation.
 Expected value to have a type annotation.
 Expected verificationRequiredInfoSheet to have a type annotation.
 Expected verificationResult to have a type annotation.
 Expected verifyTagFormat to have a type annotation.
 Expected version to have a type annotation.
 Expected view to have a type annotation.
 Expected visibleCards to have a type annotation.
 Expected vs to have a type annotation.
 Expected v to have a type annotation.
 Expected waitList to have a type annotation.
 Expected walletBalanceModal to have a type annotation.
 Expected walletBch to have a type annotation.
 Expected walletClientMock to have a type annotation.
 Expected walletClients to have a type annotation.
 Expected walletClient to have a type annotation.
 Expected walletConnectData to have a type annotation.
 Expected walletConnectIsApproveRequest to have a type annotation.
 Expected walletConnectPeerMeta to have a type annotation.
 Expected walletConnectTokenInfo to have a type annotation.
 Expected _walletData to have a type annotation.
 Expected walletData to have a type annotation.
 Expected walletDetailsModal to have a type annotation.
 Expected walletExport to have a type annotation.
 Expected walletGroup to have a type annotation.
 Expected walletIdGetter to have a type annotation.
 Expected walletIdHashed to have a type annotation.
 Expected walletIdHash to have a type annotation.
 Expected walletid to have a type annotation.
 Expected walletId to have a type annotation.
 Expected walletIdWithoutTokenAddress to have a type annotation.
 Expected walletInfo to have a type annotation.
 Expected walletList to have a type annotation.
 Expected walletMock to have a type annotation.
 Expected walletName to have a type annotation.
 Expected walletOptions to have a type annotation.
 Expected walletPrivKey to have a type annotation.
 Expected walletsBCH to have a type annotation.
 Expected walletsByKeys to have a type annotation.
 Expected walletsData to have a type annotation.
 Expected walletSelector to have a type annotation.
 Expected walletSettings to have a type annotation.
 Expected walletsForActionSheet to have a type annotation.
 Expected walletsGroups to have a type annotation.
 Expected walletsGroup to have a type annotation.
 Expected walletsRoot to have a type annotation.
 Expected wallets to have a type annotation.
 Expected walletTabOptionsAction to have a type annotation.
 Expected _wallet to have a type annotation.
 Expected wallet to have a type annotation.
 Expected walletToImport to have a type annotation.
 Expected walletTotalBalanceAlternativeLastDay to have a type annotation.
 Expected walletTotalBalanceAlternative to have a type annotation.
 Expected warningMsg to have a type annotation.
 Expected warningSheet to have a type annotation.
 Expected warnMsg to have a type annotation.
 Expected warnSpy to have a type annotation.
 Expected wcSession to have a type annotation.
 Expected weight to have a type annotation.
 Expected wideHeader to have a type annotation.
 Expected win to have a type annotation.
 Expected withBalance to have a type annotation.
 Expected withNotification to have a type annotation.
 Expected wobbleX to have a type annotation.
 Expected wobbleY to have a type annotation.
 Expected wordList to have a type annotation.
 Expected words to have a type annotation.
 Expected word to have a type annotation.
 Expected wrappedCb to have a type annotation.
 Expected wrapperContent to have a type annotation.
 Expected wrapper to have a type annotation.
 Expected writeToClipboardSpy to have a type annotation.
 Expected w to have a type annotation.
 Expected wyreData to have a type annotation.
 Expected x1 to have a type annotation.
 Expected x2 to have a type annotation.
 Expected xaxis to have a type annotation.
 Expected xDisplacement to have a type annotation.
 Expected xPrivKey to have a type annotation.
 Expected xpriv to have a type annotation.
 Expected xPubKeyIndex to have a type annotation.
 Expected xrpResponse to have a type annotation.
 Expected _x to have a type annotation.
 Expected x to have a type annotation.
 Expected xTranslate to have a type annotation.
 Expected yaxis to have a type annotation.
 Expected year to have a type annotation.
 Expected y to have a type annotation.
 Expected zceTx to have a type annotation.
 Expected zone to have a type annotation.
 ["expirationTime"] is better written in dot notation.
 '_extendedPublicKey' is defined but never used.
 '_externalSource' is defined but never used.
 'fee' is already declared in the upper scope on line 1594 column 19.
 File has too many lines (1107). Maximum allowed is 400.
 File has too many lines (1121). Maximum allowed is 400.
 File has too many lines (1137). Maximum allowed is 400.
 File has too many lines (1153). Maximum allowed is 400.
 File has too many lines (1224). Maximum allowed is 400.
 File has too many lines (1282). Maximum allowed is 400.
 File has too many lines (1346). Maximum allowed is 400.
 File has too many lines (1360). Maximum allowed is 400.
 File has too many lines (1539). Maximum allowed is 400.
 File has too many lines (1783). Maximum allowed is 400.
 File has too many lines (1919). Maximum allowed is 400.
 File has too many lines (1994). Maximum allowed is 400.
 File has too many lines (404). Maximum allowed is 400.
 File has too many lines (411). Maximum allowed is 400.
 File has too many lines (424). Maximum allowed is 400.
 File has too many lines (427). Maximum allowed is 400.
 File has too many lines (429). Maximum allowed is 400.
 File has too many lines (457). Maximum allowed is 400.
 File has too many lines (458). Maximum allowed is 400.
 File has too many lines (464). Maximum allowed is 400.
 File has too many lines (465). Maximum allowed is 400.
 File has too many lines (471). Maximum allowed is 400.
 File has too many lines (484). Maximum allowed is 400.
 File has too many lines (497). Maximum allowed is 400.
 File has too many lines (524). Maximum allowed is 400.
 File has too many lines (529). Maximum allowed is 400.
 File has too many lines (541). Maximum allowed is 400.
 File has too many lines (607). Maximum allowed is 400.
 File has too many lines (667). Maximum allowed is 400.
 File has too many lines (698). Maximum allowed is 400.
 File has too many lines (800). Maximum allowed is 400.
 File has too many lines (869). Maximum allowed is 400.
 File has too many lines (872). Maximum allowed is 400.
 File has too many lines (884). Maximum allowed is 400.
 File has too many lines (917). Maximum allowed is 400.
 File has too many lines (921). Maximum allowed is 400.
 File has too many lines (970). Maximum allowed is 400.
 '_function' is defined but never used.
 Functions that return promises must be async.
 Function 'wrapText' has too many parameters (6). Maximum allowed is 5.
 Function 'wrapText' has too many statements (12). Maximum allowed is 10.
 ["giftcards"] is better written in dot notation.
 'hasAcceptedDisclaimer' is already declared in the upper scope on line 1001 column 11.
 'history' is already declared in the upper scope on line 147 column 25.
 ["id3"] is better written in dot notation.
 Identifier 'access_token' is not in camel case.
 Identifier 'account_details' is not in camel case.
 Identifier 'account_name' is not in camel case.
 Identifier 'api_host' is not in camel case.
 Identifier 'app_end_user_id' is not in camel case.
 Identifier 'app_install_date' is not in camel case.
 Identifier 'app_provider_id' is not in camel case.
 Identifier 'app_version_id' is not in camel case.
 Identifier 'bp_partner' is not in camel case.
 Identifier 'bp_partner_version' is not in camel case.
 Identifier 'button_title' is not in camel case.
 Identifier 'bws_url' is not in camel case.
 Identifier 'cardIAB_Ref' is not in camel case.
 Identifier 'chain_id' is not in camel case.
 Identifier 'checkout_option' is not in camel case.
 Identifier 'checkout_step' is not in camel case.
 Identifier 'client_id' is not in camel case.
 Identifier 'client_secret' is not in camel case.
 Identifier 'created_on' is not in camel case.
 Identifier 'crypto_amount' is not in camel case.
 Identifier 'destination_tag' is not in camel case.
 Identifier 'destination_wallet' is not in camel case.
 Identifier 'digital_currency' is not in camel case.
 Identifier 'end_user_id' is not in camel case.
 Identifier 'err_msg' is not in camel case.
 Identifier 'err_title' is not in camel case.
 Identifier 'feature_list' is not in camel case.
 Identifier 'fiat_base_amount' is not in camel case.
 Identifier 'fiat_currency' is not in camel case.
 Identifier 'fiat_total_amount_currency' is not in camel case.
 Identifier 'fiat_total_amount' is not in camel case.
 Identifier 'grant_type' is not in camel case.
 Identifier 'handleOpenURL_LastURL' is not in camel case.
 Identifier 'native_currency' is not in camel case.
 Identifier 'network_id' is not in camel case.
 Identifier 'notification_type' is not in camel case.
 Identifier 'order_id' is not in camel case.
 Identifier 'original_http_ref_url' is not in camel case.
 Identifier 'passthrough_uri' is not in camel case.
 Identifier 'payment_details' is not in camel case.
 Identifier 'payment_flow_type' is not in camel case.
 Identifier 'payment_id' is not in camel case.
 Identifier 'payment_methods' is not in camel case.
 Identifier 'quote_id' is not in camel case.
 Identifier 'redirect_uri' is not in camel case.
 Identifier 'refresh_token' is not in camel case.
 Identifier 'requested_amount' is not in camel case.
 Identifier 'requested_currency' is not in camel case.
 Identifier 'requested_digital_amount' is not in camel case.
 Identifier 'return_url_fail' is not in camel case.
 Identifier 'return_url_success' is not in camel case.
 Identifier 'rpc_url' is not in camel case.
 Identifier 'short_name' is not in camel case.
 Identifier 'signTypedData_v4' is not in camel case.
 Identifier 'signup_login' is not in camel case.
 Identifier '_takeover_image' is not in camel case.
 Identifier '_takeover_sig' is not in camel case.
 Identifier '_takeover_url' is not in camel case.
 Identifier 'transaction_details' is not in camel case.
 Identifier 'user_agent' is not in camel case.
 Identifier 'user_id' is not in camel case.
 'info' is already declared in the upper scope on line 28 column 15.
 'info' is already declared in the upper scope on line 929 column 52.
 Input bindings should not be aliased (https
 Interface name `Advertisement` must have one of the following prefixes
 Interface name `Advertising` must have one of the following prefixes
 Interface name `ApiCard` must have one of the following prefixes
 Interface name `AvailableCardMap` must have one of the following prefixes
 Interface name `CardConfigMap` must have one of the following prefixes
 Interface name `CardConfig` must have one of the following prefixes
 Interface name `Card` must have one of the following prefixes
 Interface name `CategoriesObject` must have one of the following prefixes
 Interface name `CoinFeePolicies` must have one of the following prefixes
 Interface name `CoinNetwork` must have one of the following prefixes
 Interface name `CoinOpts` must have one of the following prefixes
 Interface name `CommonCardConfig` must have one of the following prefixes
 Interface name `Config` must have one of the following prefixes
 Interface name `Contact` must have one of the following prefixes
 Interface name `CryptoOffer` must have one of the following prefixes
 Interface name `CurationsObject` must have one of the following prefixes
 Interface name `DirectIntegrationApiObject` must have one of the following prefixes
 Interface name `DirectIntegrationMap` must have one of the following prefixes
 Interface name `DirectIntegration` must have one of the following prefixes
 Interface name `DirectoryCategoryApiObject` must have one of the following prefixes
 Interface name `DirectoryCategory` must have one of the following prefixes
 Interface name `DirectoryCurationApiObject` must have one of the following prefixes
 Interface name `DirectoryCuration` must have one of the following prefixes
 Interface name `Directory` must have one of the following prefixes
 Interface name `DirectoryRawData` must have one of the following prefixes
 Interface name `EnvironmentSchema` must have one of the following prefixes
 Interface name `ExchangeRate` must have one of the following prefixes
 Interface name `FeatureList` must have one of the following prefixes
 Interface name `Feature` must have one of the following prefixes
 Interface name `FeedbackValues` must have one of the following prefixes
 Interface name `FeeOpts` must have one of the following prefixes
 Interface name `FeePolicyObject` must have one of the following prefixes
 Interface name `FlatWallet` must have one of the following prefixes
 Interface name `FooterMenuParams` must have one of the following prefixes
 Interface name `GiftCardActivationFee` must have one of the following prefixes
 Interface name `GiftCardDiscount` must have one of the following prefixes
 Interface name `GiftCardMap` must have one of the following prefixes
 Interface name `GiftCard` must have one of the following prefixes
 Interface name `GiftCardPromotion` must have one of the following prefixes
 Interface name `GnosisFactories` must have one of the following prefixes
 Interface name `HistoricalRates` must have one of the following prefixes
 Interface name `HistoryOptionsI` must have one of the following prefixes
 Interface name `Image` trimmed as `mage` must match one of the following formats
 Interface name `InAppBrowserRef` trimmed as `nAppBrowserRef` must match one of the following formats
 Interface name `Merchant` must have one of the following prefixes
 Interface name `PaymentMethod` must have one of the following prefixes
 Interface name `PeerMeta` must have one of the following prefixes
 Interface name `PhoneCountryCode` must have one of the following prefixes
 Interface name `PinButton` must have one of the following prefixes
 Interface name `RedirParams` must have one of the following prefixes
 Interface name `StatusMock` must have one of the following prefixes
 Interface name `Storage` must have one of the following prefixes
 Interface name `Token` must have one of the following prefixes
 Interface name `TransactionProposal` must have one of the following prefixes
 Interface name `TryIt` must have one of the following prefixes
 Interface name `UpdateWalletOptsI` must have one of the following prefixes
 Interface name `User` must have one of the following prefixes
 Interface name `Version` must have one of the following prefixes
 Interface name `WalletBindTypeOpts` must have one of the following prefixes
 Interface name `WalletGroups` must have one of the following prefixes
 Interface name `WalletOptions` must have one of the following prefixes
 Interface name `WalletReceiveParams` must have one of the following prefixes
 Interface name `WalletSelectorParams` must have one of the following prefixes
 Interface name `WalletTabOptionsParams` must have one of the following prefixes
 ["invitationCode"] is better written in dot notation.
 '_' is already declared in the upper scope on line 10 column 13.
 '_' is already declared in the upper scope on line 12 column 13.
 '_' is already declared in the upper scope on line 18 column 13.
 '_' is already declared in the upper scope on line 190 column 24.
 '_' is already declared in the upper scope on line 26 column 13.
 '_' is already declared in the upper scope on line 2 column 13.
 '_' is already declared in the upper scope on line 33 column 13.
 '_' is already declared in the upper scope on line 3 column 13.
 '_' is already declared in the upper scope on line 4 column 13.
 '_' is already declared in the upper scope on line 5 column 13.
 '_' is defined but never used.
 ["isoCode"] is better written in dot notation.
 '_key1' is defined but never used.
 '_key2' is defined but never used.
 ["keyId"] is better written in dot notation.
 ["key"] is better written in dot notation.
 '_key' is defined but never used.
 'keys' is already declared in the upper scope on line 16 column 7.
 Lifecycle interface 'AfterViewInit' should be implemented for method 'ngAfterViewInit'. (https
 Lifecycle interface 'OnChanges' should be implemented for method 'ngOnChanges'. (https
 Lifecycle interface 'OnDestroy' should be implemented for method 'ngOnDestroy'. (https
 Lifecycle interface 'OnInit' should be implemented for method 'ngOnInit'. (https
 Lifecycle methods should not be empty
 ["light"] is better written in dot notation.
 ["location"] is better written in dot notation.
 'lodash' import is restricted from being used.
 'maxAmount' is assigned a value but never used.
 'memo' is already declared in the upper scope on line 2115 column 19.
 '_message' is defined but never used.
 Method 'addAddress' has too many statements (13). Maximum allowed is 10.
 Method 'add' has too many lines (53). Maximum allowed is 50.
 Method 'analizeAddress' has too many statements (20). Maximum allowed is 10.
 Method 'backwardCompatibility' has a complexity of 23. Maximum allowed is 10.
 Method 'backwardCompatibility' has too many lines (70). Maximum allowed is 50.
 Method 'backwardCompatibility' has too many statements (44). Maximum allowed is 10.
 Method 'buildTxp' has too many lines (59). Maximum allowed is 50.
 Method 'bwsEventHandler' has a complexity of 14. Maximum allowed is 10.
 Method 'calculateAmount' has too many lines (125). Maximum allowed is 50.
 Method 'canContinue' has a complexity of 13. Maximum allowed is 10.
 Method 'canSpeedUpTx' has a complexity of 15. Maximum allowed is 10.
 Method 'changellyGetRates' has too many lines (147). Maximum allowed is 50.
 Method 'checkAccountCreation' has a complexity of 35. Maximum allowed is 10.
 Method 'checkAccountCreation' has too many lines (64). Maximum allowed is 50.
 Method 'checkAccountCreation' has too many statements (17). Maximum allowed is 10.
 Method 'checkCoinAndNetwork' has too many statements (12). Maximum allowed is 10.
 Method 'checkCoinAndNetwork' has too many statements (15). Maximum allowed is 10.
 Method 'checkIfAlreadyExist' has too many statements (11). Maximum allowed is 10.
 Method 'checkPaymentMethod' has too many statements (11). Maximum allowed is 10.
 Method 'collectEmail' has too many statements (11). Maximum allowed is 10.
 Method 'continueToSimplex' has too many lines (77). Maximum allowed is 50.
 Method 'createElement' has a complexity of 22. Maximum allowed is 10.
 Method 'createElement' has too many lines (68). Maximum allowed is 50.
 Method 'createElement' has too many statements (45). Maximum allowed is 10.
 Method 'createFixTransaction' has too many lines (151). Maximum allowed is 50.
 Method 'create' has too many lines (58). Maximum allowed is 50.
 Method 'createIABInstance' has too many lines (76). Maximum allowed is 50.
 Method 'createTx' has too many lines (115). Maximum allowed is 50.
 Method 'createTx' has too many lines (54). Maximum allowed is 50.
 Method 'createTx' has too many lines (62). Maximum allowed is 50.
 Method 'createTx' has too many lines (71). Maximum allowed is 50.
 Method '_createWallet' has too many lines (73). Maximum allowed is 50.
 Method 'createWallet' has too many parameters (6). Maximum allowed is 5.
 Method 'csvHistory' has too many lines (89). Maximum allowed is 50.
 Method 'deposit' has too many lines (70). Maximum allowed is 50.
 Method 'deposit' has too many statements (13). Maximum allowed is 10.
 Method 'dragButton' has too many statements (12). Maximum allowed is 10.
 Method 'duplicate' has too many lines (70). Maximum allowed is 50.
 Method '_fetchAllWallets' has too many statements (15). Maximum allowed is 10.
 Method 'fetchStatus' has too many lines (263). Maximum allowed is 50.
 Method 'fetchWalletStatus' has too many lines (65). Maximum allowed is 50.
 Method 'filter' has too many lines (53). Maximum allowed is 50.
 Method 'filter' has too many lines (54). Maximum allowed is 50.
 Method 'filter' has too many statements (19). Maximum allowed is 10.
 Method 'finalStep' has too many statements (22). Maximum allowed is 10.
 Method 'finish' has a complexity of 22. Maximum allowed is 10.
 Method 'finish' has too many lines (82). Maximum allowed is 50.
 Method 'finish' has too many statements (38). Maximum allowed is 10.
 Method 'formatFiatAmount' has too many statements (24). Maximum allowed is 10.
 Method 'generatePairingToken' has too many lines (101). Maximum allowed is 50.
 Method 'getApproveCalldata' has too many lines (104). Maximum allowed is 50.
 Method 'getBalance' has a complexity of 11. Maximum allowed is 10.
 Method 'getBalances' has too many lines (65). Maximum allowed is 50.
 Method 'getCards' has too many lines (102). Maximum allowed is 50.
 Method 'getCoinAndNetwork' has too many lines (53). Maximum allowed is 50.
 Method 'getCoinAndNetwork' has too many statements (24). Maximum allowed is 10.
 Method 'getEncodedWalletInfo' has too many lines (56). Maximum allowed is 50.
 Method 'getFeeLevels' has too many lines (55). Maximum allowed is 50.
 Method 'getNewSaveableGiftCardMap' has too many statements (12). Maximum allowed is 10.
 Method 'getOS' has too many statements (12). Maximum allowed is 10.
 Method 'getPaymentUrl' has too many lines (52). Maximum allowed is 50.
 Method 'getProcessNames' has too many lines (67). Maximum allowed is 50.
 Method 'getRate' has a complexity of 12. Maximum allowed is 10.
 Method 'getSendMaxInfo' has too many lines (60). Maximum allowed is 50.
 Method 'getSimplexQuote' has too many lines (70). Maximum allowed is 50.
 Method 'getStatusDetails' has a complexity of 11. Maximum allowed is 10.
 Method 'getStatusDetails' has too many lines (73). Maximum allowed is 50.
 Method 'getSwap1inch' has too many lines (120). Maximum allowed is 50.
 Method 'getTxp' has too many lines (255). Maximum allowed is 50.
 Method 'getWalletsFromGroup' has a complexity of 21. Maximum allowed is 10.
 Method 'getWalletsFromGroup' has too many lines (110). Maximum allowed is 50.
 Method 'getWalletsFromGroup' has too many statements (39). Maximum allowed is 10.
 Method 'getWyreQuote' has too many lines (71). Maximum allowed is 50.
 Method 'goFeedbackFlow' has too many statements (11). Maximum allowed is 10.
 Method 'goSend' has too many parameters (6). Maximum allowed is 5.
 Method 'goTo' has too many statements (14). Maximum allowed is 10.
 Method 'goToJoinWallet' has too many statements (15). Maximum allowed is 10.
 Method 'goToNextView' has too many statements (12). Maximum allowed is 10.
 Method 'goToWyreBuyPage' has too many lines (56). Maximum allowed is 50.
 Method 'goToWyre' has too many lines (61). Maximum allowed is 50.
 Method 'goToWyre' has too many statements (29). Maximum allowed is 10.
 Method 'handleBitcoinCashUri' has too many statements (12). Maximum allowed is 10.
 Method 'handleBitcoinCashUriLegacyAddress' has too many statements (13). Maximum allowed is 10.
 Method 'handleBitPayUri' has too many statements (13). Maximum allowed is 10.
 Method 'handleError' has a complexity of 11. Maximum allowed is 10.
 Method 'handleError' has too many lines (66). Maximum allowed is 50.
 Method '_handleError' has too many statements (15). Maximum allowed is 10.
 Method '_handleError' has too many statements (16). Maximum allowed is 10.
 Method 'handleError' has too many statements (22). Maximum allowed is 10.
 Method 'handleEthereumUri' has too many statements (17). Maximum allowed is 10.
 Method 'handleRippleUri' has too many statements (19). Maximum allowed is 10.
 Method 'handleSuccessfulScan' has a complexity of 14. Maximum allowed is 10.
 Method 'handleSuccessfulScan' has too many statements (22). Maximum allowed is 10.
 Method 'importBlob' has too many statements (15). Maximum allowed is 10.
 Method '_importFile' has too many lines (88). Maximum allowed is 50.
 Method 'importFromFile' has too many statements (17). Maximum allowed is 10.
 Method 'importFromMnemonic' has a complexity of 22. Maximum allowed is 10.
 Method 'importFromMnemonic' has too many lines (101). Maximum allowed is 50.
 Method 'importFromMnemonic' has too many statements (48). Maximum allowed is 10.
 Method 'incomingDataRedirEvent' has too many lines (140). Maximum allowed is 50.
 Method 'initChartData' has too many lines (105). Maximum allowed is 50.
 Method 'init' has too many lines (124). Maximum allowed is 50.
 Method 'init' has too many lines (172). Maximum allowed is 50.
 Method 'initializeCoinbaseTopUp' has too many statements (11). Maximum allowed is 10.
 Method 'initializeTopUp' has too many lines (72). Maximum allowed is 50.
 Method 'initializeTopUp' has too many statements (13). Maximum allowed is 10.
 Method 'ionViewDidEnter' has too many lines (58). Maximum allowed is 50.
 Method 'ionViewDidLoad' has a complexity of 24. Maximum allowed is 10.
 Method 'ionViewDidLoad' has too many lines (129). Maximum allowed is 50.
 Method 'ionViewDidLoad' has too many statements (13). Maximum allowed is 10.
 Method 'ionViewDidLoad' has too many statements (47). Maximum allowed is 10.
 Method 'ionViewWillEnter' has too many lines (51). Maximum allowed is 50.
 Method 'ionViewWillEnter' has too many lines (60). Maximum allowed is 50.
 Method 'ionViewWillEnter' has too many lines (72). Maximum allowed is 50.
 Method 'ionViewWillEnter' has too many lines (79). Maximum allowed is 50.
 Method 'ionViewWillEnter' has too many lines (86). Maximum allowed is 50.
 Method 'ionViewWillEnter' has too many statements (11). Maximum allowed is 10.
 Method 'ionViewWillEnter' has too many statements (16). Maximum allowed is 10.
 Method 'ionViewWillEnter' has too many statements (17). Maximum allowed is 10.
 Method 'ionViewWillEnter' has too many statements (19). Maximum allowed is 10.
 Method 'isValid' has a complexity of 18. Maximum allowed is 10.
 Method 'isValid' has too many statements (27). Maximum allowed is 10.
 Method 'isVersionUpdated' has too many statements (11). Maximum allowed is 10.
 Method 'itemTapped' has a complexity of 11. Maximum allowed is 10.
 Method 'itemTapped' has too many statements (12). Maximum allowed is 10.
 Method '_joinWallet' has too many lines (58). Maximum allowed is 50.
 Method 'loadAds' has too many lines (73). Maximum allowed is 50.
 Method 'msg' has a complexity of 64. Maximum allowed is 10.
 Method 'msg' has too many lines (233). Maximum allowed is 50.
 Method 'newRecipient' has a complexity of 16. Maximum allowed is 10.
 Method 'newRecipient' has a complexity of 17. Maximum allowed is 10.
 Method 'newRecipient' has too many lines (55). Maximum allowed is 50.
 Method 'newRecipient' has too many lines (64). Maximum allowed is 50.
 Method 'newRecipient' has too many statements (23). Maximum allowed is 10.
 Method 'newRecipient' has too many statements (29). Maximum allowed is 10.
 Method 'ngOnInit' has too many statements (13). Maximum allowed is 10.
 Method 'onFromWalletSelect' has too many statements (12). Maximum allowed is 10.
 Method 'onProfileLoad' has too many statements (12). Maximum allowed is 10.
 Method 'onToWalletSelect' has too many statements (12). Maximum allowed is 10.
 Method 'onWalletSelect' has too many statements (20). Maximum allowed is 10.
 Method 'openAuthenticateWindow' has too many statements (12). Maximum allowed is 10.
 Method 'open' has too many parameters (6). Maximum allowed is 5.
 Method 'openLockModal' has a complexity of 11. Maximum allowed is 10.
 Method 'openLockModal' has too many statements (12). Maximum allowed is 10.
 Method 'pair' has too many lines (86). Maximum allowed is 50.
 Method 'parseAmount' has too many statements (18). Maximum allowed is 10.
 Method 'parseData' has a complexity of 26. Maximum allowed is 10.
 Method 'parseData' has too many lines (144). Maximum allowed is 50.
 Method 'parseData' has too many statements (26). Maximum allowed is 10.
 Method 'parseErrorsAsString' has a complexity of 11. Maximum allowed is 10.
 Method 'parseErrorsAsString' has too many statements (16). Maximum allowed is 10.
 Method 'processAmount' has a complexity of 12. Maximum allowed is 10.
 Method 'processAmount' has too many statements (15). Maximum allowed is 10.
 Method 'processInput' has too many statements (11). Maximum allowed is 10.
 Method 'processInvitation' has too many statements (11). Maximum allowed is 10.
 Method '_processTransactions' has a complexity of 20. Maximum allowed is 10.
 Method '_processTransactions' has too many lines (64). Maximum allowed is 50.
 Method '_processTransactions' has too many statements (26). Maximum allowed is 10.
 Method 'processTx' has a complexity of 25. Maximum allowed is 10.
 Method 'processTx' has too many lines (58). Maximum allowed is 50.
 Method 'processTx' has too many statements (28). Maximum allowed is 10.
 Method 'processUrl' has too many statements (17). Maximum allowed is 10.
 Method 'processWalletInfo' has too many statements (11). Maximum allowed is 10.
 Method 'publishAndSign' has too many lines (61). Maximum allowed is 50.
 Method 'redir' has a complexity of 53. Maximum allowed is 10.
 Method 'redir' has too many lines (175). Maximum allowed is 50.
 Method 'redir' has too many statements (81). Maximum allowed is 10.
 Method 'registerIntegrations' has too many statements (12). Maximum allowed is 10.
 Method 'resetButton' has too many statements (11). Maximum allowed is 10.
 Method 'runNotificationsQueue' has too many lines (64). Maximum allowed is 50.
 Method 'save' has too many statements (11). Maximum allowed is 10.
 Method 'seedWallet' has too many lines (114). Maximum allowed is 50.
 Method 'sendByEmail' has too many lines (52). Maximum allowed is 50.
 Method '_sendTransaction' has too many lines (52). Maximum allowed is 50.
 Method 'sendWalletBackup' has too many lines (56). Maximum allowed is 50.
 Method 'setAvailableUnits' has a complexity of 14. Maximum allowed is 10.
 Method 'setAvailableUnits' has too many lines (58). Maximum allowed is 50.
 Method 'setAvailableUnits' has too many statements (24). Maximum allowed is 10.
 Method 'setButtonText' has a complexity of 18. Maximum allowed is 10.
 Method 'setButtonText' has too many lines (51). Maximum allowed is 50.
 Method 'setButtonText' has too many statements (14). Maximum allowed is 10.
 Method 'setBuyCryptoParams' has too many statements (12). Maximum allowed is 10.
 Method 'setCoinbaseAccount' has too many statements (11). Maximum allowed is 10.
 Method 'setCredentials' has too many lines (68). Maximum allowed is 50.
 Method 'setCredentials' has too many statements (19). Maximum allowed is 10.
 Method 'setExchangeToUse' has a complexity of 15. Maximum allowed is 10.
 Method 'setExchangeToUse' has too many lines (69). Maximum allowed is 50.
 Method 'setExchangeToUse' has too many statements (16). Maximum allowed is 10.
 Method 'setExpirationTime' has too many statements (11). Maximum allowed is 10.
 Method 'setFixedAndScrollContentBgColor' has too many statements (15). Maximum allowed is 10.
 Method 'setOptsAndCreate' has a complexity of 16. Maximum allowed is 10.
 Method 'setOptsAndCreate' has a complexity of 21. Maximum allowed is 10.
 Method 'setOptsAndCreate' has too many lines (93). Maximum allowed is 50.
 Method 'setOptsAndCreate' has too many lines (98). Maximum allowed is 50.
 Method 'setOptsAndCreate' has too many statements (35). Maximum allowed is 10.
 Method 'setOptsAndCreate' has too many statements (39). Maximum allowed is 10.
 Method 'setTrackingPermissions' has too many lines (55). Maximum allowed is 50.
 Method 'showDesktopNotifications' has a complexity of 19. Maximum allowed is 10.
 Method 'showDesktopNotifications' has too many lines (78). Maximum allowed is 50.
 Method 'showDesktopNotifications' has too many statements (17). Maximum allowed is 10.
 Method 'showErrorInfoSheet' has too many statements (11). Maximum allowed is 10.
 Method 'showErrorInfoSheet' has too many statements (13). Maximum allowed is 10.
 Method 'showErrorInfoSheet' has too many statements (14). Maximum allowed is 10.
 Method 'showToWallets' has too many lines (72). Maximum allowed is 50.
 Method 'showToWallets' has too many statements (19). Maximum allowed is 10.
 Method 'showWallets' has too many lines (57). Maximum allowed is 50.
 Method 'showWallets' has too many statements (12). Maximum allowed is 10.
 Method 'showWarningSheet' has too many statements (11). Maximum allowed is 10.
 Method 'showWarningSheet' has too many statements (13). Maximum allowed is 10.
 Method 'signAndBroadcast' has too many lines (57). Maximum allowed is 50.
 Method signature is mutable, use property signature with readonly modifier instead.
 Method 'signTx' has too many lines (52). Maximum allowed is 50.
 Method 'speedUpTx' has too many lines (58). Maximum allowed is 50.
 Method 'subscribeEvents' has too many lines (69). Maximum allowed is 50.
 Method '_sweepWallet' has too many lines (56). Maximum allowed is 50.
 Method 'transform' has a complexity of 12. Maximum allowed is 10.
 Method 'transform' has too many lines (68). Maximum allowed is 50.
 Method 'trySetName' has too many statements (11). Maximum allowed is 10.
 Method 'updateConfig' has too many statements (12). Maximum allowed is 10.
 Method 'updateFetti' has too many statements (13). Maximum allowed is 10.
 Method 'updateHistory' has too many lines (77). Maximum allowed is 50.
 Method 'updateHistory' has too many statements (19). Maximum allowed is 10.
 Method 'updateLocalTxHistory' has too many lines (219). Maximum allowed is 50.
 Method 'updatePendingProposals' has too many lines (51). Maximum allowed is 50.
 Method 'updateReceivingAmount' has too many lines (61). Maximum allowed is 50.
 Method 'updateReceivingAmount' has too many statements (13). Maximum allowed is 10.
 Method 'updateStatus' has too many statements (25). Maximum allowed is 10.
 Method 'updateTx' has too many lines (74). Maximum allowed is 50.
 Method 'updateTx' has too many lines (87). Maximum allowed is 50.
 Method 'upgradeMultipleCredentials' has too many statements (14). Maximum allowed is 10.
 Method 'verifyAllowances' has too many lines (121). Maximum allowed is 50.
 Method 'verifySignature' has too many statements (11). Maximum allowed is 10.
 Method 'verifySignature' has too many statements (13). Maximum allowed is 10.
 Method 'viewOnBlockchain' has too many statements (11). Maximum allowed is 10.
 Method 'walletExport' has too many statements (23). Maximum allowed is 10.
 Method 'withdraw' has too many statements (12). Maximum allowed is 10.
 Method 'writeText' has too many statements (23). Maximum allowed is 10.
 'minAmount' is assigned a value but never used.
 ["minerFees"] is better written in dot notation.
 Missing return type on function.
 Missing trailing comma.
 '/mnt/disk273/doc/coding/linters-article/src/providers/wallet-connect/web3-providers/web3-providers.ts' imported multiple times.
 'multisigContract' is already declared in the upper scope on line 1531 column 15.
 ["name"] is better written in dot notation.
 ["native_currency"] is better written in dot notation.
 'Network' is already declared in the upper scope on line 12 column 13.
 ["network"] is better written in dot notation.
 '_network' is defined but never used.
 'newMap' is already declared in the upper scope on line 379 column 11.
 ["newWalletConnect"] is better written in dot notation.
 'numInputs' is already declared in the upper scope on line 116 column 33.
 Object pattern argument should be typed.
 '_oldCredentials' is defined but never used.
 '_optionalParams' is defined but never used.
 '_option' is defined but never used.
 'opts' is already declared in the upper scope on line 22 column 22.
 '_opts' is already declared in the upper scope on line 307 column 25.
 '_opts' is defined but never used.
 'order' is already declared in the upper scope on line 128 column 13.
 'order' is already declared in the upper scope on line 143 column 13.
 ["order"] is better written in dot notation.
 ["origToAddress"] is better written in dot notation.
 ["params"] is better written in dot notation.
 '_payload' is defined but never used.
 ["paymentUrl"] is better written in dot notation.
 ["paypro"] is better written in dot notation.
 Prefer await to then()/catch()/finally().
 Promise.catch() requires 1 argument, but received 0
 Promise constructor parameters must be named resolve, reject
 Promise executor functions should not be async.
 'property' is already declared in the upper scope on line 53 column 13.
 ["recoveryPhrase"] is better written in dot notation.
 Redundant double negation.
 ["refresh_token"] is better written in dot notation.
 Regular expression literal is unnecessarily wrapped within a 'RegExp' constructor.
 'reject' is already declared in the upper scope on line 157 column 34.
 'reject' is already declared in the upper scope on line 773 column 34.
 ["requiredCopayers"] is better written in dot notation.
 'res' is already declared in the upper scope on line 1314 column 39.
 'res' is already declared in the upper scope on line 1338 column 13.
 'resolve' is already declared in the upper scope on line 157 column 25.
 'resolve' is already declared in the upper scope on line 773 column 25.
 'response' is already declared in the upper scope on line 136 column 55.
 'scannedKey' is already declared in the upper scope on line 147 column 5.
 ["selectedSeed"] is better written in dot notation.
 ["shortCode"] is better written in dot notation.
 'shouldSync' is already declared in the upper scope on line 152 column 11.
 ["simplex"] is better written in dot notation.
 Split 'let' declarations into multiple statements.
 Static async method 'configurePageTestingModule' has too many lines (52). Maximum allowed is 50.
 ["statusUpdatedOn"] is better written in dot notation.
 '_str' is defined but never used.
 ["success"] is better written in dot notation.
 ["supportedTransactionCurrencies"] is better written in dot notation.
 ["tag"] is better written in dot notation.
 ["testnetEnabled"] is better written in dot notation.
 ["testnet"] is better written in dot notation.
 The function binding is unnecessary.
 This number literal will lose precision at runtime.
 ["tokenAddress"] is better written in dot notation.
 ["tokenDecimals"] is better written in dot notation.
 ["token"] is better written in dot notation.
 ["tokenName"] is better written in dot notation.
 ["tokenSymbol"] is better written in dot notation.
 ["totalCopayers"] is better written in dot notation.
 ["totalFee"] is better written in dot notation.
 'TouchIdErrors' is already declared in the upper scope on line 10 column 13.
 ["transform"] is better written in dot notation.
 'txp' is already declared in the upper scope on line 1787 column 28.
 'txp' is already declared in the upper scope on line 212 column 34.
 'txp' is already declared in the upper scope on line 283 column 34.
 'txp' is already declared in the upper scope on line 318 column 34.
 'txp' is already declared in the upper scope on line 483 column 34.
 '_txSent' is defined but never used.
 'txsFromLocal' is already declared in the upper scope on line 67 column 14.
 'txs' is already declared in the upper scope on line 920 column 19.
 ["txs"] is better written in dot notation.
 '_txs' is defined but never used.
 Type Alias name `ApiCardConfig` must have one of the following prefixes
 Type Alias name `CardItemAction` must have one of the following prefixes
 Type Alias name `CoinsMap` must have one of the following prefixes
 Type Alias name `dismissFunction` must have one of the following prefixes
 Type Alias name `GiftCardSaveParams` must have one of the following prefixes
 Type Alias name `InfoSheetType` must have one of the following prefixes
 Type Alias name `OptionsSheetType` must have one of the following prefixes
 Type Alias name `TryItType` trimmed as `ryItType` must match one of the following formats
 Type boolean trivially inferred from a boolean literal, remove type annotation.
 'type' is assigned a value but never used.
 ["type"] is better written in dot notation.
 '_type' is defined but never used.
 Type number trivially inferred from a number literal, remove type annotation.
 Type RegExp trivially inferred from a RegExp literal, remove type annotation.
 Type string trivially inferred from a string literal, remove type annotation.
 Unexpected any. Specify a different type.
 Unexpected `await` inside a loop.
 Unexpected chained assignment.
 Unexpected console statement.
 Unexpected control character(s) in regular expression
 Unexpected empty arrow function.
 Unexpected empty constructor.
 Unexpected empty method 'appendToDom'.
 Unexpected empty method 'dismiss'.
 Unexpected empty method 'ionViewDidLoad'.
 Unexpected empty method 'log'.
 Unexpected empty method 'onDidDismiss'.
 Unexpected empty method 'present'.
 Unexpected empty method 'removeAllListeners'.
 Unexpected empty method 'setNotificationsInterval'.
 Unexpected empty method 'setShowRateCard'.
 Unexpected empty object pattern.
 Unexpected lexical declaration in case block.
 Unexpected literal in error position of callback.
 Unexpected newline before ')'.
 Unexpected use of undefined.
 Unexpected var, use let or const instead.
 Unnecessarily computed property ['Amazon.com'] found.
 Unnecessary escape character
 Unnecessary return statement.
 Unnecessary try/catch wrapper.
 Unnecessary use of boolean literals in conditional expression.
 Unnecessary use of conditional expression for default assignment.
 '_updatePeriod' is defined but never used.
 'url' is already declared in the upper scope on line 200 column 19.
 'url' is already declared in the upper scope on line 55 column 37.
 ["USD"] is better written in dot notation.
 Use a regular expression literal instead of the 'RegExp' constructor.
 Use @HostBinding or @HostListener rather than the `host` metadata property (https
 Use `@Input` rather than the `inputs` metadata property (https
 ["useNativeSegwit"] is better written in dot notation.
 ["user"] is better written in dot notation.
 Use the rest parameters instead of 'arguments'.
 Use the spread operator instead of '.apply()'.
 Variable name `accessKey` must match one of the following formats
 Variable name `accountCoin` must match one of the following formats
 Variable name `accountId` must match one of the following formats
 Variable name `account` must match one of the following formats
 Variable name `account_name` must match one of the following formats
 Variable name `accounts` must match one of the following formats
 Variable name `acObject` must match one of the following formats
 Variable name `action` must match one of the following formats
 Variable name `actionSheet` must match one of the following formats
 Variable name `actionSheetProvider` must match one of the following formats
 Variable name `activationData` must match one of the following formats
 Variable name `activationFee` must match one of the following formats
 Variable name `activationFees` must match one of the following formats
 Variable name `activeAd` must match one of the following formats
 Variable name `activeBrands` must match one of the following formats
 Variable name `activeCardNames` must match one of the following formats
 Variable name `activeCardsGroupedByBrand` must match one of the following formats
 Variable name `activeCards` must match one of the following formats
 Variable name `activeChainId` must match one of the following formats
 Variable name `activeElement` must match one of the following formats
 Variable name `activePage` must match one of the following formats
 Variable name `activeSlideIndex` must match one of the following formats
 Variable name `additionalBytesPerLevel` must match one of the following formats
 Variable name `additionalExpectedStatusInfo` must match one of the following formats
 Variable name `_addrData` must match one of the following formats
 Variable name `addrData` must match one of the following formats
 Variable name `AddressCash` must match one of the following formats
 Variable name `AddressDoge` must match one of the following formats
 Variable name `addresses` must match one of the following formats
 Variable name `AddressLtc` must match one of the following formats
 Variable name `address` must match one of the following formats
 Variable name `Address` must match one of the following formats
 Variable name `addressRequested` must match one of the following formats
 Variable name `addressToShow` must match one of the following formats
 Variable name `addr` must match one of the following formats
 Variable name `advertisementName` must match one of the following formats
 Variable name `agent` must match one of the following formats
 Variable name `alias` must match one of the following formats
 Variable name `allAccounts` must match one of the following formats
 Variable name `allCards` must match one of the following formats
 Variable name `allCountries` must match one of the following formats
 Variable name `allGiftCards` must match one of the following formats
 Variable name `allMerchants` must match one of the following formats
 Variable name `AllowedCountries` must match one of the following formats
 Variable name `allowedPhoneCountries` must match one of the following formats
 Variable name `allSum` must match one of the following formats
 Variable name `allTokens` must match one of the following formats
 Variable name `allUrls` must match one of the following formats
 Variable name `alreadyExist` must match one of the following formats
 Variable name `alreadyVisible` must match one of the following formats
 Variable name `altCurrency` must match one of the following formats
 Variable name `alternativeConversionRate` must match one of the following formats
 Variable name `alternativeIsoCode` must match one of the following formats
 Variable name `alternatives` must match one of the following formats
 Variable name `amountAboveMaxSizeStr` must match one of the following formats
 Variable name `amountBelowFeeStr` must match one of the following formats
 Variable name `_amount` must match one of the following formats
 Variable name `amount` must match one of the following formats
 Variable name `amountParam` must match one of the following formats
 Variable name `amountSat` must match one of the following formats
 Variable name `amountStr` must match one of the following formats
 Variable name `amountUnit` must match one of the following formats
 Variable name `amountUsd` must match one of the following formats
 Variable name `a` must match one of the following formats
 Variable name `analyticsWhitelist` must match one of the following formats
 Variable name `angularProviders` must match one of the following formats
 Variable name `animationStartPos` must match one of the following formats
 Variable name `apiCardConfigCache` must match one of the following formats
 Variable name `api_host` must match one of the following formats
 Variable name `appIdentity` must match one of the following formats
 Variable name `appName` must match one of the following formats
 Variable name `appProvider` must match one of the following formats
 Variable name `approveSpenderData` must match one of the following formats
 Variable name `approveTxs` must match one of the following formats
 Variable name `appSheet` must match one of the following formats
 Variable name `appVersion` must match one of the following formats
 Variable name `archivedCard` must match one of the following formats
 Variable name `archivePromise` must match one of the following formats
 Variable name `archiveSheet` must match one of the following formats
 Variable name `args` must match one of the following formats
 Variable name `array` must match one of the following formats
 Variable name `aSortValue` must match one of the following formats
 Variable name `attachment` must match one of the following formats
 Variable name `authChangeEvents` must match one of the following formats
 Variable name `authRequiredInfoSheet` must match one of the following formats
 Variable name `availableAlternative` must match one of the following formats
 Variable name `availableAmount` must match one of the following formats
 Variable name `availableBalanceAlternative` must match one of the following formats
 Variable name `availableBalanceFiat` must match one of the following formats
 Variable name `availableBalanceStr` must match one of the following formats
 Variable name `availableCardMap` must match one of the following formats
 Variable name `availableCardNames` must match one of the following formats
 Variable name `availableCards` must match one of the following formats
 Variable name `availableChains` must match one of the following formats
 Variable name `availableCoin` must match one of the following formats
 Variable name `availableCoins` must match one of the following formats
 Variable name `availablePendingFiat` must match one of the following formats
 Variable name `availableWallets` must match one of the following formats
 Variable name `averageTxSize` must match one of the following formats
 Variable name `backgroundColor` must match one of the following formats
 Variable name `backText` must match one of the following formats
 Variable name `backupFile` must match one of the following formats
 Variable name `backupInfo` must match one of the following formats
 Variable name `backupText` must match one of the following formats
 Variable name `balanceLastDay` must match one of the following formats
 Variable name `balance` must match one of the following formats
 Variable name `bannedUntil` must match one of the following formats
 Variable name `barcodeHeight` must match one of the following formats
 Variable name `base64Image` must match one of the following formats
 Variable name `baseCard` must match one of the following formats
 Variable name `baseConfig` must match one of the following formats
 Variable name `baseCurations` must match one of the following formats
 Variable name `baseImports` must match one of the following formats
 Variable name `baseMerkleInputValidationSize` must match one of the following formats
 Variable name `baseProviders` must match one of the following formats
 Variable name `baseRedeemScriptSize` must match one of the following formats
 Variable name `baseSize` must match one of the following formats
 Variable name `bchResponse` must match one of the following formats
 Variable name `bitcore` must match one of the following formats
 Variable name `bitpayIdEmail` must match one of the following formats
 Variable name `bitpaySupportedTokens` must match one of the following formats
 Variable name `blob` must match one of the following formats
 Variable name `blockchainNetworkTx` must match one of the following formats
 Variable name `blockexplorerUrl` must match one of the following formats
 Variable name `blockExplorerUrls` must match one of the following formats
 Variable name `blockExplorerUrlsTestnet` must match one of the following formats
 Variable name `blockTime` must match one of the following formats
 Variable name `b` must match one of the following formats
 Variable name `body` must match one of the following formats
 Variable name `boundClient` must match one of the following formats
 Variable name `boundWalletClients` must match one of the following formats
 Variable name `bpTranCodes` must match one of the following formats
 Variable name `brandCards` must match one of the following formats
 Variable name `brandImageDirectory` must match one of the following formats
 Variable name `brazeUserSet` must match one of the following formats
 Variable name `broadcastedTxp` must match one of the following formats
 Variable name `browserLang` must match one of the following formats
 Variable name `BrowserWindow` must match one of the following formats
 Variable name `bSortValue` must match one of the following formats
 Variable name `btcFeeLevels` must match one of the following formats
 Variable name `btcResponse` must match one of the following formats
 Variable name `btx` must match one of the following formats
 Variable name `busdResponse` must match one of the following formats
 Variable name `button` must match one of the following formats
 Variable name `bwc` must match one of the following formats
 Variable name `bwsFor` must match one of the following formats
 Variable name `bwsReq` must match one of the following formats
 Variable name `bws_url` must match one of the following formats
 Variable name `bwsurl` must match one of the following formats
 Variable name `cacheBalance` must match one of the following formats
 Variable name `cacheCoin` must match one of the following formats
 Variable name `cachedApiCardConfig` must match one of the following formats
 Variable name `cachedCardNames` must match one of the following formats
 Variable name `cachedConfig` must match one of the following formats
 Variable name `cache` must match one of the following formats
 Variable name `cacheStatus` must match one of the following formats
 Variable name `canceledErrors` must match one of the following formats
 Variable name `cancelText` must match one of the following formats
 Variable name `canChooseFeeLevel` must match one of the following formats
 Variable name `capabilities` must match one of the following formats
 Variable name `cardBalance` must match one of the following formats
 Variable name `cardChanged` must match one of the following formats
 Variable name `cardConfigMap` must match one of the following formats
 Variable name `cardConfig` must match one of the following formats
 Variable name `cardConfigs` must match one of the following formats
 Variable name `cardHasBalance` must match one of the following formats
 Variable name `cardImagePath` must match one of the following formats
 Variable name `cardMap` must match one of the following formats
 Variable name `card` must match one of the following formats
 Variable name `cardName` must match one of the following formats
 Variable name `cardNames` must match one of the following formats
 Variable name `cardOrder` must match one of the following formats
 Variable name `cardPromises` must match one of the following formats
 Variable name `cardsGroup` must match one of the following formats
 Variable name `cards` must match one of the following formats
 Variable name `cardsNeedingUpdate` must match one of the following formats
 Variable name `cardTopUpEventInfo` must match one of the following formats
 Variable name `cashAddr` must match one of the following formats
 Variable name `cashAdrr` must match one of the following formats
 Variable name `categories` must match one of the following formats
 Variable name `cb` must match one of the following formats
 Variable name `cert1` must match one of the following formats
 Variable name `cert2` must match one of the following formats
 Variable name `certs` must match one of the following formats
 Variable name `_chainCoin` must match one of the following formats
 Variable name `chainData` must match one of the following formats
 Variable name `chain` must match one of the following formats
 Variable name `changellySwapTxs` must match one of the following formats
 Variable name `characters` must match one of the following formats
 Variable name `checkAndUpdateAdddress` must match one of the following formats
 Variable name `checkIfContact` must match one of the following formats
 Variable name `ch` must match one of the following formats
 Variable name `chooseFeeLevelModal` must match one of the following formats
 Variable name `clearClipboardSpy` must match one of the following formats
 Variable name `clear` must match one of the following formats
 Variable name `clearSpy` must match one of the following formats
 Variable name `client` must match one of the following formats
 Variable name `clients` must match one of the following formats
 Variable name `clipboard` must match one of the following formats
 Variable name `c` must match one of the following formats
 Variable name `code` must match one of the following formats
 Variable name `codes` must match one of the following formats
 Variable name `coinbase` must match one of the following formats
 Variable name `coinCode` must match one of the following formats
 Variable name `coinColor` must match one of the following formats
 Variable name `coinInfo` must match one of the following formats
 Variable name `coin` must match one of the following formats
 Variable name `coinName` must match one of the following formats
 Variable name `coinRates` must match one of the following formats
 Variable name `coins` must match one of the following formats
 Variable name `coinsToRemove` must match one of the following formats
 Variable name `collection` must match one of the following formats
 Variable name `color` must match one of the following formats
 Variable name `completeBalance` must match one of the following formats
 Variable name `componentRef` must match one of the following formats
 Variable name `configGet` must match one of the following formats
 Variable name `configMap` must match one of the following formats
 Variable name `config` must match one of the following formats
 Variable name `configProviderSetSpy` must match one of the following formats
 Variable name `confirmedTxs` must match one of the following formats
 Variable name `confirmPassword` must match one of the following formats
 Variable name `connected` must match one of the following formats
 Variable name `contact` must match one of the following formats
 Variable name `contentHeight` must match one of the following formats
 Variable name `context` must match one of the following formats
 Variable name `contractApprovalWhitelist` must match one of the following formats
 Variable name `copayerModal` must match one of the following formats
 Variable name `copayerRegistered` must match one of the following formats
 Variable name `copyMessage` must match one of the following formats
 Variable name `copySpy` must match one of the following formats
 Variable name `countDown` must match one of the following formats
 Variable name `count` must match one of the following formats
 Variable name `countriesWithMultiplePhoneCodes` must match one of the following formats
 Variable name `countriesWithSinglePhoneCode` must match one of the following formats
 Variable name `countryCode` must match one of the following formats
 Variable name `countryCodes` must match one of the following formats
 Variable name `countryIsoCode` must match one of the following formats
 Variable name `countryList` must match one of the following formats
 Variable name `countryListWithCodes` must match one of the following formats
 Variable name `country` must match one of the following formats
 Variable name `create2ndWallets` must match one of the following formats
 Variable name `createdAt` must match one of the following formats
 Variable name `createdOn` must match one of the following formats
 Variable name `creatorId` must match one of the following formats
 Variable name `credentials` must match one of the following formats
 Variable name `cssClasses` must match one of the following formats
 Variable name `cssProperty` must match one of the following formats
 Variable name `csv` must match one of the following formats
 Variable name `ctc` must match one of the following formats
 Variable name `ctx` must match one of the following formats
 Variable name `ctxp` must match one of the following formats
 Variable name `curated` must match one of the following formats
 Variable name `curations` must match one of the following formats
 Variable name `currencies` must match one of the following formats
 Variable name `_currency` must match one of the following formats
 Variable name `currency` must match one of the following formats
 Variable name `currencySymbols` must match one of the following formats
 Variable name `currentAppVersion` must match one of the following formats
 Variable name `currentCard` must match one of the following formats
 Variable name `currentCards` must match one of the following formats
 Variable name `currentGiftCards` must match one of the following formats
 Variable name `currentIndex` must match one of the following formats
 Variable name `currentTime` must match one of the following formats
 Variable name `currentValue` must match one of the following formats
 Variable name `currentVersion` must match one of the following formats
 Variable name `currentView` must match one of the following formats
 Variable name `currentVs` must match one of the following formats
 Variable name `curTx` must match one of the following formats
 Variable name `customERC20Opts` must match one of the following formats
 Variable name `customPrecision` must match one of the following formats
 Variable name `customRate` must match one of the following formats
 Variable name `customSentence` must match one of the following formats
 Variable name `customTokenData` must match one of the following formats
 Variable name `customToken` must match one of the following formats
 Variable name `customTokens` must match one of the following formats
 Variable name `customWordList` must match one of the following formats
 Variable name `dashboardRedirect` must match one of the following formats
 Variable name `dataArray` must match one of the following formats
 Variable name `dataError` must match one of the following formats
 Variable name `dataFromClipboard` must match one of the following formats
 Variable name `dataMenu` must match one of the following formats
 Variable name `data` must match one of the following formats
 Variable name `dataSeries` must match one of the following formats
 Variable name `dataSrc` must match one of the following formats
 Variable name `dataToSign` must match one of the following formats
 Variable name `dataType` must match one of the following formats
 Variable name `date1` must match one of the following formats
 Variable name `date2` must match one of the following formats
 Variable name `date` must match one of the following formats
 Variable name `dateObj` must match one of the following formats
 Variable name `dateRange` must match one of the following formats
 Variable name `decimals` must match one of the following formats
 Variable name `decodedData` must match one of the following formats
 Variable name `deepLink` must match one of the following formats
 Variable name `defaultCoin` must match one of the following formats
 Variable name `defaultColors` must match one of the following formats
 Variable name `defaultOpts` must match one of the following formats
 Variable name `defaultPayPro` must match one of the following formats
 Variable name `defaults` must match one of the following formats
 Variable name `defaultWeight` must match one of the following formats
 Variable name `depositSat` must match one of the following formats
 Variable name `derivationPath` must match one of the following formats
 Variable name `derivationStrategy` must match one of the following formats
 Variable name `destAmount` must match one of the following formats
 Variable name `destCurrency` must match one of the following formats
 Variable name `dest` must match one of the following formats
 Variable name `destroySpy` must match one of the following formats
 Variable name `details` must match one of the following formats
 Variable name `deviceInfo` must match one of the following formats
 Variable name `deviceUUID` must match one of the following formats
 Variable name `difference` must match one of the following formats
 Variable name `directIntegrationMerchants` must match one of the following formats
 Variable name `directIntegrations` must match one of the following formats
 Variable name `directory` must match one of the following formats
 Variable name `disableLightSpy` must match one of the following formats
 Variable name `disableLoader` must match one of the following formats
 Variable name `disclaimerAccepted` must match one of the following formats
 Variable name `discountedCard` must match one of the following formats
 Variable name `discount` must match one of the following formats
 Variable name `discounts` must match one of the following formats
 Variable name `discountText` must match one of the following formats
 Variable name `dismissFlag` must match one of the following formats
 Variable name `displayDate` must match one of the following formats
 Variable name `displayName` must match one of the following formats
 Variable name `doFetchStatus` must match one of the following formats
 Variable name `dogeResponse` must match one of the following formats
 Variable name `domElem` must match one of the following formats
 Variable name `dot` must match one of the following formats
 Variable name `downloadText` must match one of the following formats
 Variable name `dutchWords` must match one of the following formats
 Variable name `economyFeeIdx` must match one of the following formats
 Variable name `eid` must match one of the following formats
 Variable name `electron` must match one of the following formats
 Variable name `element` must match one of the following formats
 Variable name `elements` must match one of the following formats
 Variable name `ele` must match one of the following formats
 Variable name `eligibleWallets` must match one of the following formats
 Variable name `emailComponent` must match one of the following formats
 Variable name `email` must match one of the following formats
 Variable name `enabled` must match one of the following formats
 Variable name `enableLightSpy` must match one of the following formats
 Variable name `enc` must match one of the following formats
 Variable name `encodingType` must match one of the following formats
 Variable name `encryptedPassData` must match one of the following formats
 Variable name `encryptPasswordModal` must match one of the following formats
 Variable name `endingTs` must match one of the following formats
 Variable name `endingTxid` must match one of the following formats
 Variable name `entry` must match one of the following formats
 Variable name `env` must match one of the following formats
 Variable name `ephemeralPublicKey` must match one of the following formats
 Variable name `ERC20Abi` must match one of the following formats
 Variable name `errMessage` must match one of the following formats
 Variable name `err` must match one of the following formats
 Variable name `errorActionSheet` must match one of the following formats
 Variable name `errorInfoSheet` must match one of the following formats
 Variable name `errorMessage` must match one of the following formats
 Variable name `errorModalSpy` must match one of the following formats
 Variable name `errorMsg` must match one of the following formats
 Variable name `error` must match one of the following formats
 Variable name `errorSheet` must match one of the following formats
 Variable name `escrowAddressIndex` must match one of the following formats
 Variable name `escrowReclaimTx` must match one of the following formats
 Variable name `escrowSatoshis` must match one of the following formats
 Variable name `estimatedAmount` must match one of the following formats
 Variable name `ethResponse` must match one of the following formats
 Variable name `ethWalletClient` must match one of the following formats
 Variable name `eventEmitter` must match one of the following formats
 Variable name `event` must match one of the following formats
 Variable name `eventName` must match one of the following formats
 Variable name `evObj` must match one of the following formats
 Variable name `ew` must match one of the following formats
 Variable name `exchangeList` must match one of the following formats
 Variable name `existentWallets` must match one of the following formats
 Variable name `existsAddress` must match one of the following formats
 Variable name `existsContact` must match one of the following formats
 Variable name `exit` must match one of the following formats
 Variable name `expectedGroups` must match one of the following formats
 Variable name `expectedResult` must match one of the following formats
 Variable name `expectedStatus` must match one of the following formats
 Variable name `expectedTxHistory` must match one of the following formats
 Variable name `experiments` must match one of the following formats
 Variable name `expirationDate` must match one of the following formats
 Variable name `expirationTime` must match one of the following formats
 Variable name `extractAddress` must match one of the following formats
 Variable name `extractedAddress` must match one of the following formats
 Variable name `extractedAmount` must match one of the following formats
 Variable name `fadeStartPosition` must match one of the following formats
 Variable name `failedPromises` must match one of the following formats
 Variable name `failureRedirectUrl` must match one of the following formats
 Variable name `familyName` must match one of the following formats
 Variable name `feeAlternative` must match one of the following formats
 Variable name `feedbackInfo` must match one of the following formats
 Variable name `feeLevel` must match one of the following formats
 Variable name `feeLevelsLenght` must match one of the following formats
 Variable name `feeLevels` must match one of the following formats
 Variable name `feeLevesAllowed` must match one of the following formats
 Variable name `_fee` must match one of the following formats
 Variable name `fee` must match one of the following formats
 Variable name `feeOpts` must match one of the following formats
 Variable name `feePerSatByte` must match one of the following formats
 Variable name `feeRate` must match one of the following formats
 Variable name `feeUnitAmount` must match one of the following formats
 Variable name `feeUnit` must match one of the following formats
 Variable name `fetchBatches` must match one of the following formats
 Variable name `fetchData` must match one of the following formats
 Variable name `fettis` must match one of the following formats
 Variable name `fiatIsoCode` must match one of the following formats
 Variable name `fiatOfAmount` must match one of the following formats
 Variable name `fiatOfFee` must match one of the following formats
 Variable name `fiatResponse` must match one of the following formats
 Variable name `fileMock` must match one of the following formats
 Variable name `filename` must match one of the following formats
 Variable name `filteredBrands` must match one of the following formats
 Variable name `filteredTxs` must match one of the following formats
 Variable name `finalOpacity` must match one of the following formats
 Variable name `finalTranslateX` must match one of the following formats
 Variable name `finalValue` must match one of the following formats
 Variable name `finishComment` must match one of the following formats
 Variable name `finish` must match one of the following formats
 Variable name `finishSpy` must match one of the following formats
 Variable name `finishText` must match one of the following formats
 Variable name `first4Numbers` must match one of the following formats
 Variable name `firstBrandCurrency` must match one of the following formats
 Variable name `firstCard` must match one of the following formats
 Variable name `firstDateTs` must match one of the following formats
 Variable name `firstWalletData` must match one of the following formats
 Variable name `fixedContent` must match one of the following formats
 Variable name `fixedFee` must match one of the following formats
 Variable name `fixed` must match one of the following formats
 Variable name `fixture` must match one of the following formats
 Variable name `fixTxsUnit` must match one of the following formats
 Variable name `footerMenu` must match one of the following formats
 Variable name `force` must match one of the following formats
 Variable name `frenchWords` must match one of the following formats
 Variable name `freshConfig` must match one of the following formats
 Variable name `fromCoin` must match one of the following formats
 Variable name `fromSettings` must match one of the following formats
 Variable name `fromWalletConnect` must match one of the following formats
 Variable name `fullCard` must match one of the following formats
 Variable name `fullDirectory` must match one of the following formats
 Variable name `fullImageString` must match one of the following formats
 Variable name `fundedWallets` must match one of the following formats
 Variable name `galileoCards` must match one of the following formats
 Variable name `gasPrice` must match one of the following formats
 Variable name `germanWords` must match one of the following formats
 Variable name `getAddressBookPromise` must match one of the following formats
 Variable name `getAddressBookSpy` must match one of the following formats
 Variable name `getBitPayIdInfo` must match one of the following formats
 Variable name `getBrandImagePath` must match one of the following formats
 Variable name `getDirectIntegrations` must match one of the following formats
 Variable name `getGiftCardUserInfo` must match one of the following formats
 Variable name `getImagesForBrand` must match one of the following formats
 Variable name `getNewTxs` must match one of the following formats
 Variable name `getPayProDetailsSpy` must match one of the following formats
 Variable name `getStatusSpy` must match one of the following formats
 Variable name `getTime` must match one of the following formats
 Variable name `giftCardEmail` must match one of the following formats
 Variable name `giftCardMap` must match one of the following formats
 Variable name `giftCardMerchants` must match one of the following formats
 Variable name `givenName` must match one of the following formats
 Variable name `globalNav` must match one of the following formats
 Variable name `globalTabs` must match one of the following formats
 Variable name `g` must match one of the following formats
 Variable name `GnosisFactories` must match one of the following formats
 Variable name `googlePay` must match one of the following formats
 Variable name `gradientBackgroundColor` must match one of the following formats
 Variable name `groupedTxs` must match one of the following formats
 Variable name `gusdResponse` must match one of the following formats
 Variable name `hasAcceptedDisclaimer` must match one of the following formats
 Variable name `hasContacts` must match one of the following formats
 Variable name `hasCreatedWallet` must match one of the following formats
 Variable name `hasFirstView` must match one of the following formats
 Variable name `hasFundedWallet` must match one of the following formats
 Variable name `hasGalileo` must match one of the following formats
 Variable name `_hashbuf` must match one of the following formats
 Variable name `Hash` must match one of the following formats
 Variable name `hasMeet` must match one of the following formats
 Variable name `hasNotFundedWallet` must match one of the following formats
 Variable name `hasPhysicalCard` must match one of the following formats
 Variable name `hasReportedFirebaseHasFundedCard` must match one of the following formats
 Variable name `hasReportedFirebaseHasPhysicalCard` must match one of the following formats
 Variable name `hasReportedFirebaseHasVirtualCard` must match one of the following formats
 Variable name `hasSecuredWalletFlag` must match one of the following formats
 Variable name `hasSession` must match one of the following formats
 Variable name `hasTx` must match one of the following formats
 Variable name `hasVirtualCard` must match one of the following formats
 Variable name `hasWalletWithFunds` must match one of the following formats
 Variable name `headers` must match one of the following formats
 Variable name `hideDiscountSheet` must match one of the following formats
 Variable name `hide` must match one of the following formats
 Variable name `hidePrint` must match one of the following formats
 Variable name `hideSpy` must match one of the following formats
 Variable name `historyToSave` must match one of the following formats
 Variable name `homeLogoCollageSupportedCurrencies` must match one of the following formats
 Variable name `host` must match one of the following formats
 Variable name `iconMap` must match one of the following formats
 Variable name `identityMock` must match one of the following formats
 Variable name `idfaPlugin` must match one of the following formats
 Variable name `id` must match one of the following formats
 Variable name `idx` must match one of the following formats
 Variable name `image` must match one of the following formats
 Variable name `imagePath` must match one of the following formats
 Variable name `imagesPerCard` must match one of the following formats
 Variable name `img` must match one of the following formats
 Variable name `importMnemonicSpy` must match one of the following formats
 Variable name `incentiveLevelId` must match one of the following formats
 Variable name `incentiveLevel` must match one of the following formats
 Variable name `incoming` must match one of the following formats
 Variable name `indexFound` must match one of the following formats
 Variable name `index` must match one of the following formats
 Variable name `info` must match one of the following formats
 Variable name `infoSheet` must match one of the following formats
 Variable name `infoSheetSpy` must match one of the following formats
 Variable name `infoSheetTitle` must match one of the following formats
 Variable name `infoSpy` must match one of the following formats
 Variable name `initCb` must match one of the following formats
 Variable name `initializeSpy` must match one of the following formats
 Variable name `initialTranslateX` must match one of the following formats
 Variable name `inMonth` must match one of the following formats
 Variable name `input` must match one of the following formats
 Variable name `inputSize` must match one of the following formats
 Variable name `inputs` must match one of the following formats
 Variable name `inputValidationScriptSize` must match one of the following formats
 Variable name `instance` must match one of the following formats
 Variable name `instruction` must match one of the following formats
 Variable name `instructions` must match one of the following formats
 Variable name `insufficientFundsInfoSheet` must match one of the following formats
 Variable name `integrations` must match one of the following formats
 Variable name `interval` must match one of the following formats
 Variable name `invitationCode` must match one of the following formats
 Variable name `InvoiceAbi` must match one of the following formats
 Variable name `invoiceData` must match one of the following formats
 Variable name `invoiceFee` must match one of the following formats
 Variable name `invoiceId` must match one of the following formats
 Variable name `invoiceIds` must match one of the following formats
 Variable name `invoice` must match one of the following formats
 Variable name `invoiceUrl` must match one of the following formats
 Variable name `ionContent` must match one of the following formats
 Variable name `ionicProviders` must match one of the following formats
 Variable name `ipcRenderer` must match one of the following formats
 Variable name `isApproveRequest` must match one of the following formats
 Variable name `isAvailable` must match one of the following formats
 Variable name `isBchLegacy` must match one of the following formats
 Variable name `isConnected` must match one of the following formats
 Variable name `isDarkMode` must match one of the following formats
 Variable name `isDeepLink` must match one of the following formats
 Variable name `isDeferred` must match one of the following formats
 Variable name `isDismissed` must match one of the following formats
 Variable name `isERC20Transfer` must match one of the following formats
 Variable name `isERC20Wallet` must match one of the following formats
 Variable name `isERCToken` must match one of the following formats
 Variable name `isError` must match one of the following formats
 Variable name `isEthWallet` must match one of the following formats
 Variable name `isGradient` must match one of the following formats
 Variable name `isHidden` must match one of the following formats
 Variable name `isInsufficientFundsErr` must match one of the following formats
 Variable name `isInsufficientFundsForFeeErr` must match one of the following formats
 Variable name `isInsufficientLinkedEthFundsForFeeErr` must match one of the following formats
 Variable name `isInWallet` must match one of the following formats
 Variable name `isInWatch` must match one of the following formats
 Variable name `isJA` must match one of the following formats
 Variable name `isLegacy` must match one of the following formats
 Variable name `isManuallyClaimed` must match one of the following formats
 Variable name `isNotDuplicatedFromAnotherChain` must match one of the following formats
 Variable name `isNull` must match one of the following formats
 Variable name `isObject` must match one of the following formats
 Variable name `isoCode` must match one of the following formats
 Variable name `isPaired` must match one of the following formats
 Variable name `isPrivKeyEncrypted` must match one of the following formats
 Variable name `isSetSeed` must match one of the following formats
 Variable name `isSingleAddress` must match one of the following formats
 Variable name `isSingleSigBch` must match one of the following formats
 Variable name `isStatusCached` must match one of the following formats
 Variable name `isTopUp` must match one of the following formats
 Variable name `isUndefined` must match one of the following formats
 Variable name `isUntrustedCaError` must match one of the following formats
 Variable name `isUrlWhitelisted` must match one of the following formats
 Variable name `isUS` must match one of the following formats
 Variable name `isUtxo` must match one of the following formats
 Variable name `isValidEthAddress` must match one of the following formats
 Variable name `isValidMap` must match one of the following formats
 Variable name `isValid` must match one of the following formats
 Variable name `isValidXrpAddress` must match one of the following formats
 Variable name `isVersionUpdated` must match one of the following formats
 Variable name `isVersionUpdatedSpy` must match one of the following formats
 Variable name `italianWords` must match one of the following formats
 Variable name `itemizedDetails` must match one of the following formats
 Variable name `japaneseWords` must match one of the following formats
 Variable name `joinWarningSheet` must match one of the following formats
 Variable name `json` must match one of the following formats
 Variable name `k1` must match one of the following formats
 Variable name `keyClient` must match one of the following formats
 Variable name `keyIdIndex` must match one of the following formats
 Variable name `keyId` must match one of the following formats
 Variable name `keyIndex` must match one of the following formats
 Variable name `keyInUse` must match one of the following formats
 Variable name `key` must match one of the following formats
 Variable name `Key` must match one of the following formats
 Variable name `keyObject` must match one of the following formats
 Variable name `keyObj` must match one of the following formats
 Variable name `keys` must match one of the following formats
 Variable name `Keys` must match one of the following formats
 Variable name `keysToAdd` must match one of the following formats
 Variable name `keysWithMnemonics` must match one of the following formats
 Variable name `keysWithoutMnemonics` must match one of the following formats
 Variable name `keyToReImport` must match one of the following formats
 Variable name `k` must match one of the following formats
 Variable name `knownContract` must match one of the following formats
 Variable name `label` must match one of the following formats
 Variable name `lang` must match one of the following formats
 Variable name `last4Numbers` must match one of the following formats
 Variable name `lastFourDigits` must match one of the following formats
 Variable name `lastHyphenPosition` must match one of the following formats
 Variable name `lastKnownBalance` must match one of the following formats
 Variable name `lastRate` must match one of the following formats
 Variable name `lastSurveyCardDismissed` must match one of the following formats
 Variable name `lastUrl` must match one of the following formats
 Variable name `latestAppVersion` must match one of the following formats
 Variable name `learnText` must match one of the following formats
 Variable name `legacyAddrModalSpy` must match one of the following formats
 Variable name `legacyAddr` must match one of the following formats
 Variable name `legacyCards` must match one of the following formats
 Variable name `legacyGiftCardKey` must match one of the following formats
 Variable name `levels` must match one of the following formats
 Variable name `linearGradient` must match one of the following formats
 Variable name `lineHeight` must match one of the following formats
 Variable name `linkedEthWallet` must match one of the following formats
 Variable name `linkedEthWalletName` must match one of the following formats
 Variable name `linkifiedTerms` must match one of the following formats
 Variable name `list` must match one of the following formats
 Variable name `livenetBCH` must match one of the following formats
 Variable name `livenetBTC` must match one of the following formats
 Variable name `livenetContacts` must match one of the following formats
 Variable name `loading` must match one of the following formats
 Variable name `lockedBalanceAlternative` must match one of the following formats
 Variable name `lockMethod` must match one of the following formats
 Variable name `lock` must match one of the following formats
 Variable name `loggerErrorSpy` must match one of the following formats
 Variable name `loggerMock` must match one of the following formats
 Variable name `loggerSpy` must match one of the following formats
 Variable name `logLevels` must match one of the following formats
 Variable name `logoURI` must match one of the following formats
 Variable name `logs` must match one of the following formats
 Variable name `lowAmount` must match one of the following formats
 Variable name `lowercaseFormats` must match one of the following formats
 Variable name `lowercaseKeys` must match one of the following formats
 Variable name `lowLevelRate` must match one of the following formats
 Variable name `lowUtxos` must match one of the following formats
 Variable name `majorAppVersion` must match one of the following formats
 Variable name `map` must match one of the following formats
 Variable name `maskedInput` must match one of the following formats
 Variable name `matchableText` must match one of the following formats
 Variable name `match` must match one of the following formats
 Variable name `maxAllowedFee` must match one of the following formats
 Variable name `maxAmountFeeSat` must match one of the following formats
 Variable name `maxAmount` must match one of the following formats
 Variable name `maxAmountSat` must match one of the following formats
 Variable name `maxReq` must match one of the following formats
 Variable name `maxValue` must match one of the following formats
 Variable name `maxWidth` must match one of the following formats
 Variable name `mdesCertOnlyFlag` must match one of the following formats
 Variable name `meetsRequiredTier` must match one of the following formats
 Variable name `memoComponent` must match one of the following formats
 Variable name `memo` must match one of the following formats
 Variable name `merchantName` must match one of the following formats
 Variable name `merchants` must match one of the following formats
 Variable name `mergeAddressBook` must match one of the following formats
 Variable name `merkleValidationScriptSize` must match one of the following formats
 Variable name `messageData` must match one of the following formats
 Variable name `message` must match one of the following formats
 Variable name `migrated` must match one of the following formats
 Variable name `migrating` must match one of the following formats
 Variable name `minAmount` must match one of the following formats
 Variable name `minerFee` must match one of the following formats
 Variable name `minerFeeNoticeInfoSheet` must match one of the following formats
 Variable name `minerFeeWarning` must match one of the following formats
 Variable name `minFeeLevel` must match one of the following formats
 Variable name `minFee` must match one of the following formats
 Variable name `minFeeRate` must match one of the following formats
 Variable name `minFiatCurrency` must match one of the following formats
 Variable name `minorAppVersion` must match one of the following formats
 Variable name `minPrice` must match one of the following formats
 Variable name `minUnitAmount` must match one of the following formats
 Variable name `minXrpBalance` must match one of the following formats
 Variable name `m` must match one of the following formats
 Variable name `mnemonicHasPassphrase` must match one of the following formats
 Variable name `mnemonic` must match one of the following formats
 Variable name `mockPayPro` must match one of the following formats
 Variable name `mockWallet` must match one of the following formats
 Variable name `modal` must match one of the following formats
 Variable name `modalSpy` must match one of the following formats
 Variable name `momentSpy` must match one of the following formats
 Variable name `monthYear1` must match one of the following formats
 Variable name `monthYear2` must match one of the following formats
 Variable name `monthYear` must match one of the following formats
 Variable name `msg1` must match one of the following formats
 Variable name `msg2` must match one of the following formats
 Variable name `msg3` must match one of the following formats
 Variable name `msg4` must match one of the following formats
 Variable name `msg` must match one of the following formats
 Variable name `multiplePhoneCodesFlattened` must match one of the following formats
 Variable name `multiRecipients` must match one of the following formats
 Variable name `multisigContractAddress` must match one of the following formats
 Variable name `multisigContract` must match one of the following formats
 Variable name `multisigEthCredentials` must match one of the following formats
 Variable name `multisigEthInfo` must match one of the following formats
 Variable name `multisigEthWalletClient` must match one of the following formats
 Variable name `myName` must match one of the following formats
 Variable name `name` must match one of the following formats
 Variable name `nativeBalance` must match one of the following formats
 Variable name `needsBackup` must match one of the following formats
 Variable name `needsFallback` must match one of the following formats
 Variable name `networkFee` must match one of the following formats
 Variable name `network` must match one of the following formats
 Variable name `newABFile` must match one of the following formats
 Variable name `newBlob` must match one of the following formats
 Variable name `newCache` must match one of the following formats
 Variable name `newCrededentials` must match one of the following formats
 Variable name `newDirectory` must match one of the following formats
 Variable name `newHeaderHeight` must match one of the following formats
 Variable name `newHeight` must match one of the following formats
 Variable name `newHistory` must match one of the following formats
 Variable name `newKeys` must match one of the following formats
 Variable name `newLog` must match one of the following formats
 Variable name `newMap` must match one of the following formats
 Variable name `newNetwork` must match one of the following formats
 Variable name `newOpts` must match one of the following formats
 Variable name `newRate` must match one of the following formats
 Variable name `newRecipient` must match one of the following formats
 Variable name `newStatus` must match one of the following formats
 Variable name `_newTxs` must match one of the following formats
 Variable name `newWalletsCount` must match one of the following formats
 Variable name `newWallets` must match one of the following formats
 Variable name `newWord` must match one of the following formats
 Variable name `nextView` must match one of the following formats
 Variable name `n` must match one of the following formats
 Variable name `nonce` must match one of the following formats
 Variable name `nonceSignature` must match one of the following formats
 Variable name `nonEscrowReclaimTxs` must match one of the following formats
 Variable name `normalizedFormat` must match one of the following formats
 Variable name `normalLevelRate` must match one of the following formats
 Variable name `notes` must match one of the following formats
 Variable name `notificationConfig` must match one of the following formats
 Variable name `notificationEmail` must match one of the following formats
 Variable name `notifyOnly` must match one of the following formats
 Variable name `noWalletWarningInfoSheet` must match one of the following formats
 Variable name `now` must match one of the following formats
 Variable name `nrKeys` must match one of the following formats
 Variable name `numActiveCards` must match one of the following formats
 Variable name `number` must match one of the following formats
 Variable name `numericValue` must match one of the following formats
 Variable name `numLevels` must match one of the following formats
 Variable name `offsetHeight` must match one of the following formats
 Variable name `offsetTop` must match one of the following formats
 Variable name `okText` must match one of the following formats
 Variable name `oldABFile` must match one of the following formats
 Variable name `oldCardConfig` must match one of the following formats
 Variable name `oldContacts` must match one of the following formats
 Variable name `oldGiftCards` must match one of the following formats
 Variable name `oldProfile` must match one of the following formats
 Variable name `onboardingState` must match one of the following formats
 Variable name `oneInchAllSupportedCoins` must match one of the following formats
 Variable name `oneInchDisabledWarningSheet` must match one of the following formats
 Variable name `oneInchSwapTxs` must match one of the following formats
 Variable name `onError` must match one of the following formats
 Variable name `onFailure` must match one of the following formats
 Variable name `onSuccess` must match one of the following formats
 Variable name `opacity` must match one of the following formats
 Variable name `opc` must match one of the following formats
 Variable name `openLink` must match one of the following formats
 Variable name `openSettingsSpy` must match one of the following formats
 Variable name `opPickIndexBytes` must match one of the following formats
 Variable name `optIn` must match one of the following formats
 Variable name `optionClicked` must match one of the following formats
 Variable name `option` must match one of the following formats
 Variable name `options` must match one of the following formats
 Variable name `optionsSheet` must match one of the following formats
 Variable name `opt` must match one of the following formats
 Variable name `opts` must match one of the following formats
 Variable name `orderBy` must match one of the following formats
 Variable name `orderedWalletsGroups` must match one of the following formats
 Variable name `orderId` must match one of the following formats
 Variable name `order` must match one of the following formats
 Variable name `originalCard` must match one of the following formats
 Variable name `outputAddresses` must match one of the following formats
 Variable name `outputAddr` must match one of the following formats
 Variable name `outputAmount` must match one of the following formats
 Variable name `outputIndex` must match one of the following formats
 Variable name `output` must match one of the following formats
 Variable name `outputSize` must match one of the following formats
 Variable name `outputs` must match one of the following formats
 Variable name `overhead` must match one of the following formats
 Variable name `ownerAddress` must match one of the following formats
 Variable name `owner` must match one of the following formats
 Variable name `page` must match one of the following formats
 Variable name `pairedWallet` must match one of the following formats
 Variable name `pair` must match one of the following formats
 Variable name `params` must match one of the following formats
 Variable name `parentWalletCoin` must match one of the following formats
 Variable name `parsedAmount` must match one of the following formats
 Variable name `parsedCode` must match one of the following formats
 Variable name `parsedData` must match one of the following formats
 Variable name `pass` must match one of the following formats
 Variable name `password` must match one of the following formats
 Variable name `pasteURL` must match one of the following formats
 Variable name `patchAppVersion` must match one of the following formats
 Variable name `path` must match one of the following formats
 Variable name `pausePreviewSpy` must match one of the following formats
 Variable name `paxResponse` must match one of the following formats
 Variable name `payDetails` must match one of the following formats
 Variable name `_payload` must match one of the following formats
 Variable name `payload` must match one of the following formats
 Variable name `paymentCode` must match one of the following formats
 Variable name `paymentId` must match one of the following formats
 Variable name `paymentInfo` must match one of the following formats
 Variable name `paymentMethodName` must match one of the following formats
 Variable name `paymentOptions` must match one of the following formats
 Variable name `paymentRequests` must match one of the following formats
 Variable name `paymentUrl` must match one of the following formats
 Variable name `payOpts` must match one of the following formats
 Variable name `payProDetails` must match one of the following formats
 Variable name `payProFeeSat` must match one of the following formats
 Variable name `payproOptions` must match one of the following formats
 Variable name `payProOptions` must match one of the following formats
 Variable name `payProUrl` must match one of the following formats
 Variable name `peerMeta` must match one of the following formats
 Variable name `pendingBalanceAlternative` must match one of the following formats
 Variable name `pendingInstantiation` must match one of the following formats
 Variable name `pendingInstantiations` must match one of the following formats
 Variable name `pendingMessages` must match one of the following formats
 Variable name `pendingTxp1` must match one of the following formats
 Variable name `pendingTxp2` must match one of the following formats
 Variable name `pendingTxp` must match one of the following formats
 Variable name `pendingWallets` must match one of the following formats
 Variable name `per` must match one of the following formats
 Variable name `persistenceProvider` must match one of the following formats
 Variable name `phoneCountryCode` must match one of the following formats
 Variable name `phoneCountryInfo` must match one of the following formats
 Variable name `phone` must match one of the following formats
 Variable name `phoneSheet` must match one of the following formats
 Variable name `pinChanges` must match one of the following formats
 Variable name `pin` must match one of the following formats
 Variable name `pinValue` must match one of the following formats
 Variable name `platformMock` must match one of the following formats
 Variable name `platform` must match one of the following formats
 Variable name `p` must match one of the following formats
 Variable name `polishWords` must match one of the following formats
 Variable name `po` must match one of the following formats
 Variable name `popularAndFeaturedBrands` must match one of the following formats
 Variable name `popularBrands` must match one of the following formats
 Variable name `popupSpy` must match one of the following formats
 Variable name `portugueseWords` must match one of the following formats
 Variable name `precision` must match one of the following formats
 Variable name `prefix` must match one of the following formats
 Variable name `prefs` must match one of the following formats
 Variable name `preparingMessage` must match one of the following formats
 Variable name `previousCache` must match one of the following formats
 Variable name `previousValue` must match one of the following formats
 Variable name `previousView` must match one of the following formats
 Variable name `prevTx` must match one of the following formats
 Variable name `price` must match one of the following formats
 Variable name `priv` must match one of the following formats
 Variable name `processedInfo` must match one of the following formats
 Variable name `processNames` must match one of the following formats
 Variable name `processPendingTxps` must match one of the following formats
 Variable name `profileLength` must match one of the following formats
 Variable name `profile` must match one of the following formats
 Variable name `profileProvider` must match one of the following formats
 Variable name `progressFn` must match one of the following formats
 Variable name `promise` must match one of the following formats
 Variable name `promises` must match one of the following formats
 Variable name `promo` must match one of the following formats
 Variable name `promotedCard` must match one of the following formats
 Variable name `protoAddr` must match one of the following formats
 Variable name `protocol` must match one of the following formats
 Variable name `protocolUrl` must match one of the following formats
 Variable name `proto` must match one of the following formats
 Variable name `provider` must match one of the following formats
 Variable name `providers` must match one of the following formats
 Variable name `provisioningData` must match one of the following formats
 Variable name `pubKey` must match one of the following formats
 Variable name `publishedTxp` must match one of the following formats
 Variable name `publishSpy` must match one of the following formats
 Variable name `pub` must match one of the following formats
 Variable name `purchaseAmount` must match one of the following formats
 Variable name `purchasedBrands` must match one of the following formats
 Variable name `purchasedCardPromises` must match one of the following formats
 Variable name `purchasedCards` must match one of the following formats
 Variable name `purpose` must match one of the following formats
 Variable name `pushDataBytes` must match one of the following formats
 Variable name `query` must match one of the following formats
 Variable name `quoteData` must match one of the following formats
 Variable name `quoteId` must match one of the following formats
 Variable name `radAngle` must match one of the following formats
 Variable name `radSpread` must match one of the following formats
 Variable name `randomInt` must match one of the following formats
 Variable name `range` must match one of the following formats
 Variable name `rateFromFiat` must match one of the following formats
 Variable name `rate` must match one of the following formats
 Variable name `ratesApi` must match one of the following formats
 Variable name `reader` must match one of the following formats
 Variable name `receiveModal` must match one of the following formats
 Variable name `receive` must match one of the following formats
 Variable name `receivingPercentage` must match one of the following formats
 Variable name `recentlyPurchasedAvailableBrandNames` must match one of the following formats
 Variable name `recentlyPurchasedBrands` must match one of the following formats
 Variable name `recipient` must match one of the following formats
 Variable name `reclaimAddressIndex` must match one of the following formats
 Variable name `reclaimAddress` must match one of the following formats
 Variable name `reclaimAddressPath` must match one of the following formats
 Variable name `reclaimSignatureString` must match one of the following formats
 Variable name `reclaimTxFee` must match one of the following formats
 Variable name `reclaimTxp` must match one of the following formats
 Variable name `reclaimTxSize` must match one of the following formats
 Variable name `redeemScriptSize` must match one of the following formats
 Variable name `redeemUrl` must match one of the following formats
 Variable name `redirectUrl` must match one of the following formats
 Variable name `redir` must match one of the following formats
 Variable name `redirParams` must match one of the following formats
 Variable name `redirSpy` must match one of the following formats
 Variable name `referralCode` must match one of the following formats
 Variable name `referral` must match one of the following formats
 Variable name `reflect` must match one of the following formats
 Variable name `ref` must match one of the following formats
 Variable name `regex` must match one of the following formats
 Variable name `rejectedTxp` must match one of the following formats
 Variable name `remoteData` must match one of the following formats
 Variable name `remote` must match one of the following formats
 Variable name `removeTxConfirmNotificationSpy` must match one of the following formats
 Variable name `replaceKey` must match one of the following formats
 Variable name `replaceSpy` must match one of the following formats
 Variable name `req` must match one of the following formats
 Variable name `request` must match one of the following formats
 Variable name `requests` must match one of the following formats
 Variable name `requiredFeeParam` must match one of the following formats
 Variable name `requiredFeeRate` must match one of the following formats
 Variable name `require` must match one of the following formats
 Variable name `res` must match one of the following formats
 Variable name `response` must match one of the following formats
 Variable name `result` must match one of the following formats
 Variable name `results` must match one of the following formats
 Variable name `resumePreviewSpy` must match one of the following formats
 Variable name `ret` must match one of the following formats
 Variable name `rgbString` must match one of the following formats
 Variable name `r` must match one of the following formats
 Variable name `rootPath` must match one of the following formats
 Variable name `russianWords` must match one of the following formats
 Variable name `safetyMargin` must match one of the following formats
 Variable name `satToUnit` must match one of the following formats
 Variable name `savedPhoneCountry` must match one of the following formats
 Variable name `savedVersion` must match one of the following formats
 Variable name `savePromise` must match one of the following formats
 Variable name `scale` must match one of the following formats
 Variable name `scanButtonAreaHeight` must match one of the following formats
 Variable name `script` must match one of the following formats
 Variable name `scrollContent` must match one of the following formats
 Variable name `scrollEventMock` must match one of the following formats
 Variable name `scrollSpy` must match one of the following formats
 Variable name `scrollTop` must match one of the following formats
 Variable name `secondBtnText` must match one of the following formats
 Variable name `secret` must match one of the following formats
 Variable name `selectedCoins` must match one of the following formats
 Variable name `selectedKey` must match one of the following formats
 Variable name `selectedLevel` must match one of the following formats
 Variable name `selected` must match one of the following formats
 Variable name `selectedTokens` must match one of the following formats
 Variable name `sendMaxInfoMock` must match one of the following formats
 Variable name `sendTxAtSameTimeAsMove` must match one of the following formats
 Variable name `separator` must match one of the following formats
 Variable name `service` must match one of the following formats
 Variable name `session` must match one of the following formats
 Variable name `setAddressBookPromise` must match one of the following formats
 Variable name `setBackupGroupFlagSpy` must match one of the following formats
 Variable name `setLang` must match one of the following formats
 Variable name `setNonce` must match one of the following formats
 Variable name `setNotificationsIntervalSpy` must match one of the following formats
 Variable name `setSeed` must match one of the following formats
 Variable name `settingsChanged` must match one of the following formats
 Variable name `settings` must match one of the following formats
 Variable name `settingsTabIndex` must match one of the following formats
 Variable name `setTxConfirmNotificationSpy` must match one of the following formats
 Variable name `setWalletSelectorSpy` must match one of the following formats
 Variable name `shareText` must match one of the following formats
 Variable name `sheetHeight` must match one of the following formats
 Variable name `sheet` must match one of the following formats
 Variable name `sheetName` must match one of the following formats
 Variable name `sheetType` must match one of the following formats
 Variable name `shell` must match one of the following formats
 Variable name `shouldContinue` must match one of the following formats
 Variable name `shouldHidePin` must match one of the following formats
 Variable name `shouldNotify` must match one of the following formats
 Variable name `shouldSync` must match one of the following formats
 Variable name `showCustomizeNonce` must match one of the following formats
 Variable name `showEnableRBF` must match one of the following formats
 Variable name `showErrorInfoSheetSpy` must match one of the following formats
 Variable name `showLegacyAddrMessageSpy` must match one of the following formats
 Variable name `showOpts` must match one of the following formats
 Variable name `showRequest` must match one of the following formats
 Variable name `showShare` must match one of the following formats
 Variable name `showSuccess` must match one of the following formats
 Variable name `signature` must match one of the following formats
 Variable name `signedData` must match one of the following formats
 Variable name `signedReclaimTxp` must match one of the following formats
 Variable name `signedTxp` must match one of the following formats
 Variable name `signErr` must match one of the following formats
 Variable name `sigObj` must match one of the following formats
 Variable name `simplexPaymentRequests` must match one of the following formats
 Variable name `simplifiedChineseWords` must match one of the following formats
 Variable name `size` must match one of the following formats
 Variable name `sjcl` must match one of the following formats
 Variable name `skipDeviceValidation` must match one of the following formats
 Variable name `skipKeyValidation` must match one of the following formats
 Variable name `sleep` must match one of the following formats
 Variable name `slideIndex` must match one of the following formats
 Variable name `slippage` must match one of the following formats
 Variable name `s` must match one of the following formats
 Variable name `sort` must match one of the following formats
 Variable name `sourceAmount` must match one of the following formats
 Variable name `sourceCurrency` must match one of the following formats
 Variable name `spacePosition` must match one of the following formats
 Variable name `spanishWords` must match one of the following formats
 Variable name `spendableAmount` must match one of the following formats
 Variable name `spendableBalanceAlternative` must match one of the following formats
 Variable name `spenderAddress` must match one of the following formats
 Variable name `spendUnconfirmed` must match one of the following formats
 Variable name `spyAskPassword` must match one of the following formats
 Variable name `spy` must match one of the following formats
 Variable name `spySet` must match one of the following formats
 Variable name `startIndex` must match one of the following formats
 Variable name `startsNumeric` must match one of the following formats
 Variable name `state` must match one of the following formats
 Variable name `stateParams` must match one of the following formats
 Variable name `statusMock` must match one of the following formats
 Variable name `status` must match one of the following formats
 Variable name `statusWallet` must match one of the following formats
 Variable name `store` must match one of the following formats
 Variable name `storeName` must match one of the following formats
 Variable name `storeNewProfileSpy` must match one of the following formats
 Variable name `subject` must match one of the following formats
 Variable name `subscribeEvents` must match one of the following formats
 Variable name `subscribeSpy` must match one of the following formats
 Variable name `subscription` must match one of the following formats
 Variable name `subtitle` must match one of the following formats
 Variable name `subtotalAmountFeeInfoSheet` must match one of the following formats
 Variable name `subtract` must match one of the following formats
 Variable name `successfulPromises` must match one of the following formats
 Variable name `success` must match one of the following formats
 Variable name `suffix` must match one of the following formats
 Variable name `superEconomyFeeIdx` must match one of the following formats
 Variable name `supportedAmounts` must match one of the following formats
 Variable name `supportedCardNames` must match one of the following formats
 Variable name `supportedCards` must match one of the following formats
 Variable name `supportedChains` must match one of the following formats
 Variable name `supportedCoins` must match one of the following formats
 Variable name `supportedCoinsWithFixRateEnabled` must match one of the following formats
 Variable name `supportedDiscountTypes` must match one of the following formats
 Variable name `supportedFormats` must match one of the following formats
 Variable name `supportedProviders` must match one of the following formats
 Variable name `supportedTokens` must match one of the following formats
 Variable name `swapTxs` must match one of the following formats
 Variable name `switchExp` must match one of the following formats
 Variable name `symbolMap` must match one of the following formats
 Variable name `symbol` must match one of the following formats
 Variable name `tab` must match one of the following formats
 Variable name `tagParam` must match one of the following formats
 Variable name `_takeover_image` must match one of the following formats
 Variable name `_takeover_sig` must match one of the following formats
 Variable name `_takeover_url` must match one of the following formats
 Variable name `terms` must match one of the following formats
 Variable name `termsWithPlaceholders` must match one of the following formats
 Variable name `testBed` must match one of the following formats
 Variable name `testnetContacts` must match one of the following formats
 Variable name `testnet` must match one of the following formats
 Variable name `testnetVectors` must match one of the following formats
 Variable name `testVectors` must match one of the following formats
 Variable name `tiltAngle` must match one of the following formats
 Variable name `timeExceeded` must match one of the following formats
 Variable name `timeout` must match one of the following formats
 Variable name `timeProvider` must match one of the following formats
 Variable name `title` must match one of the following formats
 Variable name `t` must match one of the following formats
 Variable name `toAddress` must match one of the following formats
 Variable name `toCoin` must match one of the following formats
 Variable name `tokenAddress` must match one of the following formats
 Variable name `tokenClients` must match one of the following formats
 Variable name `tokenCredentials` must match one of the following formats
 Variable name `_token` must match one of the following formats
 Variable name `token` must match one of the following formats
 Variable name `tokenOpts` must match one of the following formats
 Variable name `TokenOpts` must match one of the following formats
 Variable name `TokensListAPIUrl` must match one of the following formats
 Variable name `tokens` must match one of the following formats
 Variable name `tokenSymbol` must match one of the following formats
 Variable name `tokenWalletClient` must match one of the following formats
 Variable name `tokenWalletIds` must match one of the following formats
 Variable name `tokenWallet` must match one of the following formats
 Variable name `toMsg` must match one of the following formats
 Variable name `toolbarBg` must match one of the following formats
 Variable name `topPadding` must match one of the following formats
 Variable name `totalAmountArray` must match one of the following formats
 Variable name `totalAmountFeeInfoSheet` must match one of the following formats
 Variable name `totalBalanceAlternativeLastDay` must match one of the following formats
 Variable name `totalBalanceAlternative` must match one of the following formats
 Variable name `totalBalanceChange` must match one of the following formats
 Variable name `totalBalanceStr` must match one of the following formats
 Variable name `totalDiscount` must match one of the following formats
 Variable name `totalFee` must match one of the following formats
 Variable name `totalLow` must match one of the following formats
 Variable name `totalSecs` must match one of the following formats
 Variable name `totalTicks` must match one of the following formats
 Variable name `traditionalChineseWords` must match one of the following formats
 Variable name `transactionSignature` must match one of the following formats
 Variable name `transactions` must match one of the following formats
 Variable name `transferId` must match one of the following formats
 Variable name `transformations` must match one of the following formats
 Variable name `transform` must match one of the following formats
 Variable name `transformSpy` must match one of the following formats
 Variable name `translateX` must match one of the following formats
 Variable name `translateY` must match one of the following formats
 Variable name `translation` must match one of the following formats
 Variable name `tsp` must match one of the following formats
 Variable name `txDetailModal` must match one of the following formats
 Variable name `txHistoryUnique` must match one of the following formats
 Variable name `tx` must match one of the following formats
 Variable name `txObject` must match one of the following formats
 Variable name `txp` must match one of the following formats
 Variable name `txpPublished` must match one of the following formats
 Variable name `txpsByWallet` must match one of the following formats
 Variable name `txps` must match one of the following formats
 Variable name `txpToBeSigned` must match one of the following formats
 Variable name `txsFromLocal` must match one of the following formats
 Variable name `txSize` must match one of the following formats
 Variable name `txs` must match one of the following formats
 Variable name `txTime` must match one of the following formats
 Variable name `typeArray` must match one of the following formats
 Variable name `type` must match one of the following formats
 Variable name `uniqueCardNames` must match one of the following formats
 Variable name `uniqueCurations` must match one of the following formats
 Variable name `uniqueCurrencies` must match one of the following formats
 Variable name `unitCode` must match one of the following formats
 Variable name `unitDecimals` must match one of the following formats
 Variable name `unit` must match one of the following formats
 Variable name `unitName` must match one of the following formats
 Variable name `unitToSatoshi` must match one of the following formats
 Variable name `unregisterSpy` must match one of the following formats
 Variable name `updatedActiveGiftCardsPromise` must match one of the following formats
 Variable name `updatedCardBalances` must match one of the following formats
 Variable name `updatedCards` must match one of the following formats
 Variable name `updateLowAmount` must match one of the following formats
 Variable name `update` must match one of the following formats
 Variable name `updateNotes` must match one of the following formats
 Variable name `updatePrefs` must match one of the following formats
 Variable name `updateWalletSpy` must match one of the following formats
 Variable name `URICash` must match one of the following formats
 Variable name `URIDoge` must match one of the following formats
 Variable name `URILtc` must match one of the following formats
 Variable name `uri` must match one of the following formats
 Variable name `url` must match one of the following formats
 Variable name `urlRegex` must match one of the following formats
 Variable name `urlSearchParams` must match one of the following formats
 Variable name `urlsWithoutProtocol` must match one of the following formats
 Variable name `urlWithoutParams` must match one of the following formats
 Variable name `usdcResponse` must match one of the following formats
 Variable name `useBackCameraSpy` must match one of the following formats
 Variable name `used` must match one of the following formats
 Variable name `useFrontCameraSpy` must match one of the following formats
 Variable name `userAgent` must match one of the following formats
 Variable name `userCountryCode` must match one of the following formats
 Variable name `userId` must match one of the following formats
 Variable name `userInfo` must match one of the following formats
 Variable name `user` must match one of the following formats
 Variable name `userSettings` must match one of the following formats
 Variable name `usMask` must match one of the following formats
 Variable name `utxos` must match one of the following formats
 Variable name `v1num` must match one of the following formats
 Variable name `v1str` must match one of the following formats
 Variable name `Validation` must match one of the following formats
 Variable name `validDataByCoin` must match one of the following formats
 Variable name `validDataFromClipboard` must match one of the following formats
 Variable name `validDataTypeMap` must match one of the following formats
 Variable name `validEmail` must match one of the following formats
 Variable name `validSavedPhone` must match one of the following formats
 Variable name `validSchema` must match one of the following formats
 Variable name `val` must match one of the following formats
 Variable name `value` must match one of the following formats
 Variable name `variables` must match one of the following formats
 Variable name `verificationRequiredInfoSheet` must match one of the following formats
 Variable name `verificationResult` must match one of the following formats
 Variable name `version` must match one of the following formats
 Variable name `view` must match one of the following formats
 Variable name `visibleCards` must match one of the following formats
 Variable name `walletClientMock` must match one of the following formats
 Variable name `walletClient` must match one of the following formats
 Variable name `walletConnectData` must match one of the following formats
 Variable name `walletDetailsModal` must match one of the following formats
 Variable name `walletExport` must match one of the following formats
 Variable name `walletIdGetter` must match one of the following formats
 Variable name `walletIdHashed` must match one of the following formats
 Variable name `walletId` must match one of the following formats
 Variable name `walletIdWithoutTokenAddress` must match one of the following formats
 Variable name `walletMock` must match one of the following formats
 Variable name `wallet` must match one of the following formats
 Variable name `walletName` must match one of the following formats
 Variable name `walletOptions` must match one of the following formats
 Variable name `walletProvider` must match one of the following formats
 Variable name `walletSelector` must match one of the following formats
 Variable name `walletsGroup` must match one of the following formats
 Variable name `walletsGroups` must match one of the following formats
 Variable name `wallets` must match one of the following formats
 Variable name `walletTabOptionsAction` must match one of the following formats
 Variable name `walletToImport` must match one of the following formats
 Variable name `warningMsg` must match one of the following formats
 Variable name `warningSheet` must match one of the following formats
 Variable name `warnMsg` must match one of the following formats
 Variable name `wcSession` must match one of the following formats
 Variable name `weight` must match one of the following formats
 Variable name `win` must match one of the following formats
 Variable name `withNotification` must match one of the following formats
 Variable name `w` must match one of the following formats
 Variable name `wobble` must match one of the following formats
 Variable name `wobbleX` must match one of the following formats
 Variable name `wobbleY` must match one of the following formats
 Variable name `wordList` must match one of the following formats
 Variable name `words` must match one of the following formats
 Variable name `wrappedCb` must match one of the following formats
 Variable name `wrapperContent` must match one of the following formats
 Variable name `wrapper` must match one of the following formats
 Variable name `writeToClipboardSpy` must match one of the following formats
 Variable name `wyrePaymentRequests` must match one of the following formats
 Variable name `x2` must match one of the following formats
 Variable name `x` must match one of the following formats
 Variable name `xpriv` must match one of the following formats
 Variable name `xrpResponse` must match one of the following formats
 Variable name `y` must match one of the following formats
 Variable name `zceTx` must match one of the following formats
 ["WalletConnectPage"] is better written in dot notation.
 'WalletConnectProvider' is already declared in the upper scope on line 65 column 10.
 '_walletData' is defined but never used.
 'walletId' is already declared in the upper scope on line 670 column 17.
 '_walletId' is defined but never used.
 'wallet' is already declared in the upper scope on line 156 column 22.
 ["walletName"] is better written in dot notation.
 ["words"] is better written in dot notation.
 '_x' is defined but never used.
